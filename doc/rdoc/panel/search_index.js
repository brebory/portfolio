var search_data = {"index":{"searchIndex":["abstractcontroller","actionnotfound","assetpaths","base","callbacks","classmethods","collector","doublerendererror","error","helpers","classmethods","layouts","classmethods","layoutconditions","logger","railties","routeshelpers","rendering","classmethods","translation","urlfor","classmethods","viewpaths","classmethods","base","caching","actions","actioncachepath","classmethods","configmethods","fragments","pages","classmethods","sweeping","compatibility","conditionalget","cookies","datastreaming","flash","forcessl","classmethods","head","helpers","classmethods","hideactions","classmethods","httpauthentication","basic","controllermethods","classmethods","digest","controllermethods","token","controllermethods","implicitrender","instrumentation","classmethods","logsubscriber","metal","middleware","actionmiddleware","mimeresponds","classmethods","paramswrapper","classmethods","rackdelegation","railtie","railties","paths","recordidentifier","redirecting","renderers","all","classmethods","rendering","requestforgeryprotection","classmethods","rescue","responder","classmethods","streaming","templateassertions","testcase","behavior","classmethods","raiseactionexceptions","testresponse","testing","classmethods","urlfor","assertions","domassertions","responseassertions","routingassertions","selectorassertions","tagassertions","beststandardssupport","bodyproxy","callbacks","cookies","cookieoverflow","debugexceptions","exceptionwrapper","filehandler","flash","flashhash","head","http","cache","request","response","filterparameters","headers","mimenegotiation","parameterfilter","parameters","url","upload","uploadedfile","requesthelpers","runner","session","integrationtest","middlewarestack","middleware","paramsparser","performancetest","publicexceptions","railsentitystore","railsmetastore","railtie","reloader","remoteip","getip","ipspoofattackerror","request","requestid","rescue","response","routing","mapper","base","httphelpers","resources","scoping","polymorphicroutes","redirection","mountedhelpers","urlfor","session","abstractstore","cachestore","compatibility","cookiestore","destroyablesession","memcachestore","stalesessioncheck","showexceptions","static","testprocess","testrequest","testresponse","base","mailhelper","base","context","filesystemresolver","fixtureresolver","activemodelhelper","activemodelinstancetag","assettaghelper","assetincludetag","javascriptincludetag","javascripttaghelpers","classmethods","stylesheetincludetag","stylesheettaghelpers","classmethods","atomfeedhelper","atombuilder","atomfeedbuilder","cachehelper","capturehelper","csrfhelper","datehelper","datehelperinstancetag","debughelper","formbuilder","formhelper","formoptionshelper","formtaghelper","javascripthelper","numberhelper","invalidnumbererror","outputsafetyhelper","recordtaghelper","renderinghelper","sanitizehelper","taghelper","texthelper","translationhelper","urlhelper","logsubscriber","detailscache","viewpaths","nullresolver","partialrenderer","railtie","renderer","resolver","path","template","builder","erb","erubis","testcase","behavior","classmethods","locals","testcontroller","attributemethods","classmethods","attributemethodmatcher","blockvalidator","callbacks","conversion","dirty","eachvalidator","errors","lint","tests","massassignmentsecurity","blacklist","classmethods","error","loggersanitizer","permissionset","sanitizer","strictsanitizer","whitelist","missingattributeerror","name","naming","observer","observerarray","observing","classmethods","securepassword","classmethods","instancemethodsonactivation","serialization","serializers","json","xml","strictvalidationfailed","translation","validations","acceptancevalidator","callbacks","classmethods","classmethods","confirmationvalidator","exclusionvalidator","formatvalidator","helpermethods","inclusionvalidator","lengthvalidator","numericalityvalidator","presencevalidator","withvalidator","validator","activerecorderror","adapternotfound","adapternotspecified","classmethods","associationtypemismatch","classmethods","attributeassignment","classmethods","attributeassignmenterror","attributemethods","beforetypecast","deprecatedunderscoreread","classmethods","dirty","primarykey","classmethods","query","read","classmethods","serialization","attribute","classmethods","timezoneconversion","classmethods","write","classmethods","base","configurationerror","abstractadapter","abstractmysqladapter","connectionhandler","connectionmanagement","connectionpool","databaselimits","databasestatements","mysql2adapter","mysqladapter","statementpool","postgresqladapter","statementpool","tabledefinition","utils","postgresqlcolumn","querycache","quoting","sqliteadapter","explainprettyprinter","statementpool","version","schemacache","schemastatements","statementpool","table","tabledefinition","connectionnotestablished","connectiontimeouterror","countercache","dangerousattributeerror","dynamicfindermatch","dynamicmatchers","fixtures","file","inheritance","classmethods","invalidforeignkey","irreversiblemigration","migration","commandrecorder","migrationproxy","modelschema","classmethods","multiparameterassignmenterrors","classmethods","toomanyrecords","persistence","classmethods","preparedstatementinvalid","querycache","classmethods","querying","readonlyrecord","recordinvalid","recordnotfound","recordnotsaved","recordnotunique","result","rollback","sanitization","classmethods","scoping","default","classmethods","named","classmethods","serialization","serializationtypemismatch","staleobjecterror","statementinvalid","store","classmethods","testfixtures","classmethods","throwresult","transactions","classmethods","unknownattributeerror","unknownprimarykey","validations","associatedvalidator","classmethods","uniquenessvalidator","wrappeddatabaseexception","base","connection","custommethods","classmethods","errors","formats","jsonformat","xmlformat","httpmock","invalidrequesterror","logsubscriber","observing","railtie","request","response","sslerror","timeouterror","validations","autoload","backtracecleaner","base64","benchmarkable","bufferedlogger","severity","cache","entry","filestore","memcachestore","memorystore","nullstore","store","strategy","localcache","localstore","callbacks","classmethods","concern","configurable","classmethods","configuration","classcache","watchstack","deprecation","descendantstracker","duration","fileupdatechecker","filewatcher","backend","gzip","stream","hashwithindifferentaccess","inflector","inflections","inheritableoptions","json","circularreferenceerror","encoder","variable","logsubscriber","testhelper","mocklogger","memoizable","instancemethods","messageencryptor","invalidmessage","messageverifier","invalidsignature","chars","encodingerror","unicode","codepoint","unicodedatabase","notifications","event","fanout","instrumenter","orderedhash","orderedoptions","railtie","rescuable","classmethods","safebuffer","safeconcaterror","stringinquirer","taggedlogging","testcase","testing","assertions","declarative","isolation","forking","minitest","subprocess","testunit","pending","performance","benchmarker","forclassictestunit","forminitest","metrics","amount","base","cputime","digitalinformationunit","gcruns","gctime","memory","objects","processtime","time","usertime","walltime","performer","profiler","proxytestresult","remoteerror","setupandteardown","classmethods","forclassictestunit","forminitest","timewithzone","timezone","xmlmini","xmlmini_libxmlsax","hashbuilder","xmlmini_nokogirisax","hashbuilder","error","array","base64","bigdecimal","css","generators","assetsgenerator","scaffoldgenerator","datetime","erb","util","enumerable","erb","generators","controllergenerator","mailergenerator","scaffoldgenerator","falseclass","file","float","hash","i18n","exceptionhandler","railtie","integer","js","generators","assetsgenerator","kernel","loaderror","simpleformatter","mime","mimes","type","module","mysql","result","stmt","time","nameerror","nilclass","object","plugin","process","qualifiedconstutils","rails","actionmethods","appbuilder","application","bootstrap","configuration","finisher","railties","routesreloader","backtracecleaner","commands","info","install","plugin","remove","configuration","console","consolemethods","dbconsole","engine","configuration","railties","generators","actions","activemodel","appbase","appgenerator","assetsgenerator","base","controllergenerator","error","generatedattribute","generatorgenerator","helpergenerator","integrationtestgenerator","migration","classmethods","migrationgenerator","modelgenerator","namedbase","observergenerator","performancetestgenerator","pluginnewgenerator","resourcegenerator","resourcehelpers","resourceroutegenerator","scaffoldcontrollergenerator","scaffoldgenerator","sessionmigrationgenerator","taskgenerator","testcase","info","infocontroller","initializable","classmethods","collection","initializer","paths","path","root","plugin","pluginbuilder","rack","debugger","logtailer","logger","railtie","configurable","classmethods","configuration","scriptrailsloader","server","options","subtesttask","testunitrailtie","railsenvironment","recursivehttpfetcher","sourceannotationextractor","annotation","string","symbol","test","unit","collector","objectspace","testunit","generators","controllergenerator","helpergenerator","integrationgenerator","mailergenerator","modelgenerator","observergenerator","performancegenerator","plugingenerator","scaffoldgenerator","time","trueclass","uri","+()","+()","+()","+()","+()","+()","-()","-()","-()","<<()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","==()","==()","==()","==()","==()","==()","==()","===()","===()","===()","===()","=~()","=~()","=~()","=~()","get()","post()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","__callback_runner_name()","__replay__()","__reset_runner()","_all_autoload_once_paths()","_all_autoload_paths()","_all_load_paths()","_attribute()","_dasherize()","_dump()","_dump()","_dump_without_utc_flag()","_dump_without_zone()","_get()","_handle_method_missing()","_handle_render_options()","_implied_layout_name()","_insert_callbacks()","_layout_for()","_layout_for()","_load()","_load()","_load_without_utc_flag()","_load_without_zone()","_normalize_callback_options()","_normalize_options()","_normalize_options()","_original_to_s()","_parse_file()","_prefixes()","_prepare_context()","_routes()","_routes()","_routes_context()","_routes_context()","_run_class_setup()","_save_fragment()","_set_detail()","_set_wrapper_defaults()","_to_partial_path()","_validates_default_keys()","_with_routes()","_write_layout_method()","abstract!()","abstract_class?()","abstract_railtie?()","accept=()","accepts()","accepts_nested_attributes_for()","accessible_attributes()","acronym()","action()","action=()","action_has_layout?()","action_methods()","action_methods()","action_methods()","action_methods()","active?()","active?()","active?()","active?()","active_authorizer()","active_authorizers()","active_connection?()","active_connections?()","acts_like?()","acts_like_date?()","acts_like_string?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","acts_like_time?()","adapter_name()","adapter_name()","add()","add()","add()","add()","add()","add_column()","add_column()","add_column()","add_column_position!()","add_column_sql()","add_error()","add_expr_escaped()","add_expr_literal()","add_filter()","add_index()","add_index_length()","add_index_options()","add_index_sort_order()","add_index_sql()","add_observer()","add_on_blank()","add_on_empty()","add_postamble()","add_preamble()","add_resource_route()","add_routes()","add_shared_options_for()","add_shebang_option!()","add_silencer()","add_source()","add_text()","add_timestamps()","add_timestamps_sql()","add_to_transaction()","add_transaction_record()","add_whiner()","added?()","advance()","advance()","advance()","after()","after()","after_commit()","after_filter()","after_initialize()","after_rollback()","after_validation()","ago()","ago()","ago()","ago()","alert()","alert=()","alias_attribute()","alias_attribute()","alias_method_chain()","all()","all()","all()","all()","all()","all()","all_day()","all_helpers_from_path()","all_month()","all_paths()","all_quarter()","all_week()","all_year()","announce()","anonymous?()","api_behavior()","api_location()","app()","app()","app()","app()","app()","app()","app()","app()","app=()","app_const()","app_const_base()","app_generators()","app_middleware()","app_name()","app_secret()","app_templates_dir()","append_after_filter()","append_around_filter()","append_before_filter()","append_features()","append_view_path()","append_view_path()","application()","application()","application=()","application_definition()","application_name()","application_trace()","apply_rails_template()","arel_engine()","arel_table()","arguments()","around_filter()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","assert_blank()","assert_class_method()","assert_difference()","assert_directory()","assert_dom_equal()","assert_dom_not_equal()","assert_field_default_value()","assert_field_type()","assert_file()","assert_generates()","assert_index()","assert_instance_method()","assert_method()","assert_migration()","assert_no_difference()","assert_no_directory()","assert_no_file()","assert_no_migration()","assert_no_tag()","assert_present()","assert_recognizes()","assert_redirected_to()","assert_response()","assert_routing()","assert_select()","assert_select_email()","assert_select_encoded()","assert_tag()","assert_template()","assert_valid_keys()","asset_name()","asset_name()","asset_name()","asset_name()","asset_tag()","asset_tag()","asset_tag()","assets_gemfile_entry()","assign_attributes()","assign_shortcuts()","assigns()","assume_migrated_upto_version()","at()","at()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_hour()","at_beginning_of_hour()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_year()","at_end_of_month()","at_end_of_quarter()","at_end_of_week()","at_end_of_year()","at_midnight()","at_midnight()","atom_feed()","atomic_write()","attach_to()","attachments()","attachments()","attr_accessible()","attr_internal()","attr_internal_accessor()","attr_internal_reader()","attr_internal_writer()","attr_protected()","attribute_cast_code()","attribute_method?()","attribute_method?()","attribute_method_affix()","attribute_method_prefix()","attribute_method_suffix()","attribute_missing()","attributes=()","attributes_before_type_cast()","attributes_protected_by_default()","attributes_protected_by_default()","audio_path()","audio_tag()","auth_type()","auth_type=()","auth_type=()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_or_request_with_http_token()","authenticate_with_http_basic()","authenticate_with_http_digest()","authenticate_with_http_token()","authentication_header()","authentication_request()","authentication_request()","authentication_request()","authorization()","auto_discovery_link_tag()","auto_flushing=()","autoload()","autoload_at()","autoload_once()","autoload_once_paths()","autoload_paths()","autoload_paths()","autoload_under()","autoloads()","available_action?()","available_views()","backend=()","backtrace_cleaner()","bang?()","banner()","banner()","banner()","base_class()","base_name()","base_root()","basename()","becomes()","before()","before()","before_configuration()","before_eager_load()","before_filter()","before_filters()","before_initialize()","before_validation()","begin_db_transaction()","begin_db_transaction()","begin_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_hour()","beginning_of_hour()","beginning_of_month()","beginning_of_quarter()","beginning_of_week()","beginning_of_year()","behavior()","behavior=()","belongs_to()","belongs_to()","belongs_to()","belongs_to?()","benchmark()","benchmark()","best_install_method()","between?()","bind()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","block_format()","body()","body()","body=()","body_parts()","breakpoint()","build()","build()","build()","build()","build()","build()","build()","build_mem_cache()","build_original_fullpath()","builder()","bundle_command()","button()","button_tag()","button_to()","button_to_function()","cache()","cache()","cache()","cache()","cache()","cache_attribute?()","cache_attributes()","cache_fixtures()","cache_for_connection()","cache_page()","cache_page()","cache_store()","cache_store=()","cache_template_loading()","cache_template_loading=()","cached_attributes()","cached_fixtures()","caches_action()","caches_page()","caching_allowed?()","calculate_ip()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call_app()","camelcase()","camelize()","camelize()","camelized()","camelized()","capify!()","capitalize()","capture()","capture()","case_insensitive_comparison()","case_insensitive_comparison()","case_sensitive_equality_operator()","case_sensitive_modifier()","case_sensitive_modifier()","cdata_block()","cdata_section()","center()","change()","change()","change()","change_column()","change_column()","change_column_default()","change_column_default()","change_column_default()","change_column_null()","change_column_null()","change_column_null()","change_column_sql()","change_default()","change_table()","changed()","changed?()","changed_attributes()","changes()","characters()","charset()","check_box()","check_box()","check_box_tag()","check_class_collision()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","checkin()","checkout()","children()","civil_from_format()","class_eval()","class_name()","class_of_active_record_descendant()","class_path()","classify()","classify()","clean()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup!()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear!()","clear!()","clear_action_methods!()","clear_active_connections!()","clear_active_connections!()","clear_all_connections!()","clear_cache()","clear_cache!()","clear_cache!()","clear_cache!()","clear_cache!()","clear_cache!()","clear_helpers()","clear_query_cache()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_respond_to()","clear_stale_cached_connections!()","clear_table_cache!()","client_encoding()","client_min_messages()","client_min_messages=()","clone()","clone_empty()","close()","close()","close()","close()","close()","closed?()","code()","collation()","collection()","collection_name()","collection_path()","collection_path()","collection_select()","collection_select()","color()","colorize_logging()","colorize_logging=()","column()","column()","column_defaults()","column_exists?()","column_exists?()","column_name_length()","column_names()","columns()","columns()","columns()","columns()","columns_for_remove()","columns_hash()","columns_hash()","columns_per_multicolumn_index()","columns_per_table()","comment_if()","commit_db_transaction()","commit_db_transaction()","commit_transaction_records()","comparable_time()","compare_with_coercion()","compare_without_coercion()","compile_methods!()","compile_methods!()","compiled_asset_path()","compose()","compose_codepoints()","composed_of()","compress()","compressed?()","compute_tags()","compute_type()","concat()","concat()","conditional_layout?()","conditional_layout?()","config()","config()","config()","config()","config()","config()","config()","config()","config_accessor()","configru()","configuration()","configurations()","configure()","configure()","connected?()","connected?()","connected?()","connection()","connection()","connection()","connection()","connection()","connection()","connection_config()","connection_handler()","connection_id()","connection_id=()","connection_pool()","consider_all_requests_local?()","console()","constantize()","constantize()","constraints()","consumes?()","content_columns()","content_for()","content_for?()","content_length()","content_mime_type()","content_tag()","content_tag_for()","content_type()","content_type()","content_type=()","controller()","controller()","controller_class()","controller_class=()","controller_class_name()","controller_class_path()","controller_file_name()","controller_file_path()","controller_i18n_scope()","controller_name()","controller_name()","controller_path()","controller_path()","controller_path()","controller_path=()","convert_database_option_for_jruby()","convert_key()","convert_to_model()","convert_value()","cookie_jar()","cookies()","cookies()","cookies()","cookies()","copy()","copy_javascript()","copy_stylesheet()","copy_stylesheet()","copy_view_files()","copy_view_files()","count()","count_by_sql()","count_observers()","create()","create()","create()","create()","create()","create()","create!()","create_active_record_files()","create_app_files()","create_app_files()","create_boot_file()","create_config_files()","create_config_files()","create_controller_files()","create_controller_files()","create_database()","create_database()","create_db_files()","create_doc_files()","create_dummy_app()","create_fixture_file()","create_fixtures()","create_fixtures()","create_generated_attribute()","create_generator_files()","create_helper_files()","create_helper_files()","create_images_directory()","create_javascript_files()","create_lib_files()","create_lib_files()","create_log_files()","create_path_and_open_file()","create_public_files()","create_public_stylesheets_files()","create_root()","create_root_files()","create_root_files()","create_root_folder()","create_savepoint()","create_savepoint()","create_savepoint()","create_savepoint()","create_script_files()","create_script_files()","create_table()","create_task_files()","create_test_dummy_files()","create_test_file()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_tmp_files()","create_vendor_files()","creator?()","csrf_meta_tag()","csrf_meta_tags()","css_select()","current()","current()","current_cycle()","current_database()","current_database()","current_hash()","current_hash()","current_page?()","current_savepoint_name()","current_schema()","current_tags()","custom_dir()","custom_dir()","custom_dir()","custom_method_collection_url()","cycle()","daemon()","dangerous_attribute_method?()","dasherize()","dasherize()","database_configuration()","database_gemfile_entry()","database_yml()","date_select()","date_select()","datetime_select()","datetime_select()","days_in_month()","days_to_week_start()","db()","debug()","debug_protected_attribute_removal()","debugger()","decode()","decode()","decode()","decode64()","decode64()","decode_credentials()","decode_credentials()","decode_credentials_header()","decompose()","decompose_codepoints()","decompress()","deconstantize()","deconstantize()","decrement()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrement_open_transactions()","decrypt()","decrypt_and_verify()","deep_dup()","deep_merge()","deep_merge!()","deep_munge()","default()","default()","default()","default()","default=()","default_action()","default_aliases_for_option()","default_charset=()","default_for_option()","default_generator_root()","default_inspect()","default_middleware_stack()","default_middleware_stack()","default_options()","default_primary_key_type()","default_render()","default_render()","default_scope()","default_sequence_name()","default_source_root()","default_timezone()","default_url_options()","default_url_options()","default_url_options=()","default_url_options=()","default_value_for_option()","defaults()","define_attribute_method()","define_attribute_methods()","define_callbacks()","define_method__attribute()","define_method_attribute()","define_method_attribute()","define_method_attribute=()","define_method_attribute=()","define_model_callbacks()","defined_app_const_base()","defined_app_const_base?()","defined_app_name()","delegate()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete?()","delete_cookie()","delete_entry()","delete_entry()","delete_if()","delete_matched()","delete_matched()","delete_matched()","delete_matched()","delete_responses_to_replace()","delete_sql()","delete_via_redirect()","demodulize()","demodulize()","deny?()","deny?()","deny?()","deprecate()","deprecated_method_warning()","desc()","desc()","descendants()","descendants()","descends_from_active_record?()","describe()","destination()","destroy()","destroy()","destroy()","destroy()","destroy_session()","destroyed?()","detail_args_for()","details_for_lookup()","determine_default_controller_class()","determine_default_helper_class()","determine_install_method()","diff()","direct_descendants()","direct_descendants()","dirname()","dirties_query_cache()","disable()","disable_cache()","disable_query_cache!()","disable_referential_integrity()","disabled_for?()","disabled_for?()","disabled_observer_stack()","disabled_observers()","discard()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","dispatch()","display()","display()","display_errors()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","distinct()","div_for()","doc()","dom_class()","dom_id()","domain()","down()","downcase()","download()","drop_table()","dst?()","dummy_path()","dup()","dup()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each_key()","each_pair()","each_subclass_array()","each_value()","each_with_object()","eager_autoload()","eager_autoload!()","eager_load()","eager_load!()","eager_load!()","eager_load_paths()","element_name()","element_path()","element_path()","email_field()","email_field_tag()","emitted_hidden_id?()","empty?()","empty?()","empty?()","empty_directory_with_gitkeep()","empty_insert_statement_value()","empty_insert_statement_value()","emulate_booleans()","enable()","enable_query_cache!()","enable_warnings()","encode()","encode()","encode()","encode()","encode()","encode!()","encode64()","encode64()","encode64s()","encode_credentials()","encode_credentials()","encode_credentials()","encode_json()","encode_json()","encode_json()","encode_json()","encode_json()","encode_json()","encode_with()","encode_with()","encode_with()","encode_with()","encode_with()","encoding()","encoding=()","encoding_aware?()","encoding_aware?()","encrypt()","encrypt_and_sign()","end_document()","end_element()","end_of_day()","end_of_day()","end_of_hour()","end_of_hour()","end_of_month()","end_of_quarter()","end_of_week()","end_of_year()","end_transaction()","endpoint()","endpoint()","engine()","engine=()","engines()","enlist_fixture_connections()","entry()","enumerate()","env()","env()","env=()","env_config()","env_config()","env_filter()","environment()","environment()","environment=()","eql?()","eql?()","eql?()","eql?()","eql?()","eql_with_coercion()","eql_without_coercion()","error()","error_message()","error_number()","error_wrapping()","errors()","errors()","errors()","escape()","escape_bytea()","escape_glob_chars()","escape_javascript()","escape_once()","establish_connection()","establish_connection()","etag=()","etag_matches?()","evaluate_default_scope()","except()","except!()","excerpt()","exclude?()","exclude?()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_insert()","exec_insert()","exec_query()","exec_query()","exec_query()","exec_query()","exec_query()","exec_script_rails!()","exec_update()","exec_update()","exec_update()","exec_update()","exec_update()","exec_without_stmt()","execute()","execute()","execute()","execute()","execute()","execute_and_free()","execute_if_updated()","exist?()","exist?()","existent()","existent_directories()","exists?()","exists?()","exists?()","exit_on_failure?()","expand_cache_key()","expand_hash_conditions_for_aggregates()","expanded()","expected_response()","expire()","expire_action()","expire_fragment()","expire_page()","expire_page()","expired?()","expires_at()","expires_at=()","expires_in()","expires_now()","explain()","explain()","explain()","ext()","extended()","extended()","extended()","extended()","extension()","extension()","extension()","extension()","extension()","externals()","externals=()","extify()","extract!()","extract_annotations_from()","extract_domain()","extract_options!()","extract_schema_and_table()","extract_session_id()","extract_subdomain()","extract_subdomains()","extractable_options?()","extractable_options?()","extractable_options?()","fallbacks()","favicon_link_tag()","fetch()","fetch()","fetch()","fetch_dir()","field_set_tag()","field_type()","fields_for()","fields_for()","fifth()","file()","file_field()","file_field()","file_field_tag()","file_path()","filename()","filter()","filter_by()","filtered_env()","filtered_options()","filtered_parameters()","filtered_path()","filtered_query_string()","find()","find()","find()","find()","find()","find()","find()","find_all()","find_all()","find_all_tag()","find_by_sql()","find_cmd()","find_in()","find_root_with_flag()","find_tag()","find_template()","find_tzinfo()","find_zone()","find_zone!()","finder?()","finish_template()","finish_template()","first()","first()","first()","first()","fixture_file_upload()","fixture_is_cached?()","fixtures()","flash()","flash()","flush()","flush()","flush()","flush_all!()","flush_cache()","flushable_loggers()","follow_redirect!()","font_path()","for_tag()","force_ssl()","foreign_key()","foreign_key()","forking_env?()","form_authenticity_param()","form_authenticity_token()","form_data?()","form_for()","form_tag()","format()","format()","format()","format()","format()","format()","format=()","format=()","format_paragraph()","formats()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","forty_two()","fourth()","fragment_cache_key()","fragment_exist?()","framework_trace()","framework_version()","frameworks()","freeze()","freeze()","freeze_with_memoizable()","fresh?()","fresh_when()","from()","from()","from()","from_array()","from_json()","from_json()","from_now()","from_rails_root()","from_response()","from_xml()","from_xml()","from_xml()","frozen?()","full?()","full_message()","full_messages()","full_profile_options()","full_test_name()","full_trace()","fullpath()","future?()","future?()","future?()","g_length()","g_pack()","g_unpack()","gem()","gem_for_database()","gem_group()","gemfile()","gemfile()","gemspec()","generate()","generate()","generate_message()","generate_method_for_mime()","generate_railtie_name()","generate_sid()","generate_test_dummy()","generated_feature_methods()","generator()","generator_dir()","generator_name()","generators()","get()","get()","get()","get()","get()","get()","get()","get()","get?()","get_builder_class()","get_builder_class()","get_session()","get_via_redirect()","getgm()","getlocal()","getutc()","getutc()","git()","git_keep()","git_url?()","gitignore()","gitignore()","global_plugins()","gmt?()","gmt_offset()","gmtime()","gmtoff()","group_by()","grouped_collection_select()","grouped_collection_select()","grouped_options_for_select()","groups()","h()","ha1()","halted_callback()","handle_unverified_request()","handler_for_rescue()","handles_encoding?()","has_and_belongs_to_many()","has_errors?()","has_index?()","has_key?()","has_many()","has_migrations?()","has_one()","has_secure_password()","has_uniq_index?()","hash()","hash()","hash()","head()","head()","head()","head()","head?()","headers()","headers()","headers()","headers=()","help()","helper()","helper()","helper_attr()","helper_class()","helper_method()","helper_method()","helpers()","helpers()","helpers_paths()","hidden_actions()","hidden_field()","hidden_field()","hidden_field_tag()","hidden_namespaces()","hide_action()","hide_namespaces()","highlight()","hook_for()","host()","host()","host=()","host_with_port()","html?()","html_document()","html_escape()","html_safe()","html_safe?()","html_safe?()","http_basic_authenticate_with()","httpdate()","https!()","https?()","human()","human()","human_attribute_name()","human_name()","human_name()","humanize()","humanize()","i18n_scope()","i18n_scope()","id()","id()","id()","id=()","id=()","id?()","id_from_response()","identify()","if_modified_since()","if_modified_since=()","if_none_match()","if_none_match=()","image_alt()","image_path()","image_submit_tag()","image_tag()","in()","in()","in?()","in_char_class?()","in_clause_length()","in_groups()","in_groups_of()","in_rails_application?()","in_rails_application_subdirectory?()","in_time_zone()","in_time_zone()","in_time_zone()","include?()","include?()","include?()","include?()","include_all_railties?()","include_fallbacks_module()","include_tag()","included()","included()","included()","included()","included()","included()","increment()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_open_transactions()","indent()","index()","index()","index()","index_by()","index_exists?()","index_exists?()","index_helper()","index_name()","index_name_exists?()","index_name_for_remove()","index_name_length()","index_name_length()","indexes()","indexes_per_table()","inflections()","info()","inheritable_copy()","inheritance_column()","inheritance_column=()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","init_fallbacks()","init_with()","initialize!()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_dup()","initialize_dup()","initialize_generators()","initialize_i18n()","initialize_schema_migrations_table()","initialize_sid()","initialize_template_class()","initialized=()","initialized?()","initializer()","initializer()","initializers()","initializers()","initializers()","initializers_chain()","initializers_for()","inject_index_options()","inject_options()","inquiry()","insensitive_attributes()","insert()","insert()","insert()","insert_after()","insert_before()","insert_fixture()","insert_sql()","insert_sql()","insert_sql()","inside_template()","inside_template?()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","install()","install()","installed?()","instance()","instance()","instance_method_already_implemented?()","instance_method_names()","instance_variable_names()","instantiate()","instantiate_all_loaded_fixtures()","instantiate_fixtures()","instantiate_observers()","instantiator?()","instrument()","instrument()","instrument()","instrument=()","instrument_fragment_cache()","instrumenter()","internal_methods()","invalid?()","inverse()","invert()","invoke()","ip()","ips_from()","irregular()","is_a?()","is_missing?()","is_utf8?()","is_utf8?()","isdst()","iso8601()","isolate_namespace()","j()","j()","javascript_gemfile_entry()","javascript_include_tag()","javascript_path()","javascript_runtime_gemfile_entry()","javascript_tag()","javascripts()","joins_per_query()","json_escape()","json_resource_errors()","keep()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key_matcher()","key_value()","key_value()","keys()","keys()","keys()","kind()","kind()","kind_of?()","klass()","known_attributes()","known_attributes()","l()","l()","label()","label()","label_tag()","last()","last()","last()","last()","last()","last_inserted_id()","last_inserted_id()","last_inserted_id()","last_inserted_id()","last_modified()","last_modified=()","last_modified?()","layout()","lease()","length()","length()","length()","length()","level()","level=()","lib()","lib()","lib()","license()","limit()","limited_update_conditions()","limited_update_conditions()","link_to()","link_to_function()","link_to_if()","link_to_unless()","link_to_unless_current()","links()","listeners_for()","listening?()","ljust()","load()","load()","load_attributes_from_response()","load_console()","load_console()","load_console()","load_generators()","load_generators()","load_paths()","load_seed()","load_session()","load_tasks()","load_tasks()","load_tasks()","local()","local?()","local_constant_names()","local_constants()","local_offset()","local_time()","local_to_utc()","localize()","localize()","locals()","localtime()","location()","location()","location=()","location=()","log()","log()","log()","log_level()","log_path()","log_subscribers()","logged()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger=()","logger?()","lookup()","lookup_ancestors()","lookup_by_extension()","lookup_context()","lookup_store()","ls()","lstrip()","mail()","mail_to()","mailer()","mailer_name()","mailer_name()","many?()","marshal_dump()","marshal_load()","mass_assignment_authorizer()","mass_assignment_options()","mass_assignment_role()","mass_assignment_sanitizer=()","match()","match()","match()","match()","match?()","mattr_accessor()","mattr_reader()","mattr_writer()","mb_chars()","mb_chars()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure_mode()","media_type()","member()","memoize()","memoize_all()","memoized_ivar_for()","merge()","merge()","merge!()","message()","message()","message()","message()","method()","method_added()","method_for_action()","method_for_action()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_name()","method_names()","method_symbol()","middleware()","middleware()","middleware()","middleware()","midnight()","midnight()","migrate()","migrate()","migration_template()","mime_type()","mime_type()","mime_type()","minus_with_coercion()","minus_without_coercion()","minus_without_duration()","missing_name()","missing_name?()","model_name()","module_namespacing()","modules_for_helpers()","modules_for_helpers()","monday()","month()","months()","months_ago()","months_since()","mount()","mountable?()","multipart=()","multiple_of?()","mute()","mute()","mysql2_connection()","mysql_socket()","name()","name()","name()","names()","namespace()","namespace()","namespace()","namespace()","namespaced?()","namespaced_class_path()","namespaced_file_path()","native_database_types()","native_database_types()","navigation_behavior()","navigation_location()","negotiate_mime()","nested()","nested_under_indifferent_access()","nested_under_indifferent_access()","nested_under_indifferent_access()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","new_constants()","new_element_path()","new_element_path()","new_from_hash_copying_default()","new_record?()","new_record?()","new_session()","next_key()","next_migration_number()","next_month()","next_week()","next_year()","no_color!()","nonce()","normalize()","normalize()","normalize_name()","normalize_path()","not_modified?()","notice()","notice=()","notify_observers()","now()","now()","now_is_loaded?()","number_field()","number_field_tag()","number_to_currency()","number_to_human()","number_to_human_size()","number_to_percentage()","number_to_phone()","number_with_delimiter()","number_with_precision()","object()","observe()","observed_class()","observed_classes()","observer_class_for()","observer_instances()","observers()","observers=()","on_cdata_block()","on_characters()","on_end_document()","on_end_element()","on_start_document()","on_start_element()","opaque()","open()","open()","open_log()","open_session()","opt_parser()","option_groups_from_collection_for_select()","optional_port()","options()","options()","options()","options()","options()","options()","options_for()","options_for_select()","options_from_collection_for_select()","options_include_default?()","ord()","ord()","ordered_railties()","ordinalize()","ordinalize()","orig_delete()","original_concat()","original_fullpath()","original_name()","original_url()","orm_class()","orm_instance()","output_filename()","output_filename()","output_filename()","output_filename()","outside_transaction?()","outside_transaction?()","param_key()","parameter_filter()","parameter_filter_for()","parameterize()","parameterize()","parameters()","paramify_values()","params()","params()","params=()","parent()","parent_name()","parent_of?()","parent_prefixes()","parents()","parse()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse_data_with_trailing_star()","parse_error()","parse_query()","parse_raw_value_as_a_number()","parse_raw_value_as_an_integer()","parser()","password()","password=()","password=()","password=()","password_field()","password_field_tag()","past?()","past?()","past?()","path()","path=()","path_parameters()","path_to_audio()","path_to_font()","path_to_image()","path_to_javascript()","path_to_stylesheet()","path_to_video()","paths()","paths()","pending()","perform_validations()","performed?()","period()","period_for_local()","period_for_utc()","persisted?()","persisted?()","phone_field()","phone_field_tag()","pk_and_sequence_for()","plain?()","plugin()","plugins()","plural()","plural()","plural_file_name()","plural_name()","plural_table_name()","pluralize()","pluralize()","pluralize()","pluralize_table_names?()","polymorphic_path()","polymorphic_url()","pop_d()","port()","port=()","port_string()","post()","post()","post()","post()","post()","post()","post?()","post_via_redirect()","postgresql_version()","precisionless_round()","prefetch_primary_key?()","prefix()","prefix=()","prefix_source()","prepare!()","prepare!()","prepare_controller_class()","prepare_destination()","prepend_after_filter()","prepend_around_filter()","prepend_before_filter()","prepend_view_path()","prepend_view_path()","presence()","present?()","prev_month()","prev_week()","prev_year()","previous_changes()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key=()","primary_keys()","prime_cache()","process()","process()","process()","process()","process_action()","process_action()","process_action()","process_action()","process_removed_attributes()","process_removed_attributes()","process_removed_attributes()","process_view_paths()","process_with_new_base_test()","profile()","profile()","profile()","profile()","properties()","property()","protect_against_forgery?()","protect_from_forgery()","protected_attributes()","protocol()","provide()","proxy()","proxy=()","proxy=()","prune()","pruning?()","public_directory()","public_path()","publish()","publish()","push_d()","put()","put()","put()","put()","put()","put()","put?()","put_via_redirect()","qualified_const_defined?()","qualified_const_defined?()","qualified_const_get()","qualified_const_set()","query()","query_attribute()","query_parameters()","quietly()","quote()","quote()","quote_column_name()","quote_string()","quote_string()","quote_table_name()","quote_table_name()","quote_table_name()","quoted_columns_for_index()","quoted_columns_for_index()","quoted_date()","quoted_false()","quoted_false()","quoted_primary_key()","quoted_table_name()","quoted_true()","quoted_true()","rack_cookies()","radio_button()","radio_button()","radio_button_tag()","rails_gemfile_entry()","railtie_name()","railtie_name()","railtie_namespace()","railties()","railties()","raise_if_absolute()","rake()","rake_tasks()","rakefile()","rakefile()","rakefile()","rakefile_test_tasks()","range_field()","range_field_tag()","raw()","raw_connection()","raw_host_with_port()","raw_post()","raw_value()","raw_write_attribute()","read()","read()","read()","read()","read_attribute()","read_attribute_before_type_cast()","read_attribute_before_type_cast()","read_entry()","read_entry()","read_fragment()","read_multi()","read_multi()","readable_inspect()","readme()","readme()","readme()","readonly!()","readonly?()","receive()","reconnect!()","reconnect!()","reconnect!()","reconnect!()","record()","record()","record()","record()","record()","record()","record_key_for_dom_id()","recreate_database()","recycle!()","recycle!()","redefine_method()","redirect()","redirect_to()","redirect_to()","redirect_to()","redirect_to()","redirect_to_url()","redirect_url()","ref()","reference?()","references()","references()","refresh()","register()","register_alias()","register_interceptor()","register_interceptors()","register_javascript_expansion()","register_observer()","register_observers()","register_stylesheet_expansion()","regular_class_path()","regular_writer()","reject()","reject!()","release_connection()","release_savepoint()","release_savepoint()","release_savepoint()","release_savepoint()","reload()","reload()","reload!()","reload!()","reload_dependencies?()","reload_routes!()","reloader()","reloader_paths()","remote_addr=()","remote_ip()","remove()","remove_belongs_to()","remove_column()","remove_column_sql()","remove_columns()","remove_connection()","remove_connection()","remove_filters!()","remove_hook_for()","remove_index()","remove_index()","remove_index_sql()","remove_multiparameter_id()","remove_possible_method()","remove_references()","remove_root()","remove_silencers!()","remove_timestamps()","remove_timestamps()","remove_timestamps_sql()","rename()","rename_column()","rename_column()","rename_column_sql()","rename_index()","rename_index()","rename_key()","rename_table()","rename_table()","rename_table()","rename_table()","render()","render()","render()","render()","render()","render()","render()","render()","render_body()","render_collection()","render_collection()","render_partial()","render_partial()","render_template()","render_to_body()","render_to_body()","render_to_body()","render_to_string()","render_to_string()","reorder_characters()","replace()","report()","request()","request_http_basic_authentication()","request_http_digest_authentication()","request_http_token_authentication()","request_method()","request_method=()","request_method_symbol()","request_parameters()","request_uri=()","request_via_redirect()","requests()","requests()","require_engine()","require_fixture_classes()","require_tzinfo()","requires_reloading?()","requires_reloading?()","rescue_action()","rescue_action_without_handler()","rescue_from()","rescue_from()","rescue_responses()","rescue_template()","rescue_templates()","rescue_with_handler()","rescue_with_handler()","reset!()","reset!()","reset!()","reset!()","reset!()","reset!()","reset!()","reset_cache()","reset_callbacks()","reset_column_information()","reset_counters()","reset_cycle()","reset_sequence!()","reset_session()","reset_session()","resolve()","resolve()","resource()","resource_errors()","resource_location()","resourceful?()","resources()","resources_path_names()","respond()","respond_to()","respond_to()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_without_attributes?()","respond_to_without_attributes?()","respond_with()","response_body=()","response_body=()","response_code()","response_from_page()","response_overridden?()","responses()","retrieve_connection()","retrieve_connection_pool()","reverse()","reverse_merge()","reverse_merge()","reverse_merge!()","reverse_merge!()","reverse_update()","revert()","reverting?()","rfc2822()","rfc822()","rindex()","rjust()","rollback_active_record_state!()","rollback_db_transaction()","rollback_db_transaction()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_transaction_records()","root()","root()","root()","root=()","round()","route()","route_key()","route_url()","routes()","routes?()","routes_url_helpers()","rstrip()","ruby_debugger_gemfile_entry()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_bundle()","run_callbacks()","run_gc()","run_gc()","run_gc()","run_gc()","run_generator()","run_in_isolation()","run_in_isolation()","run_in_transaction?()","run_initializers()","run_profile()","run_test()","run_test()","run_validations!()","run_validations!()","run_warmup()","safe_concat()","safe_concat()","safe_constantize()","safe_constantize()","safe_get()","safe_join()","sample()","sanitize()","sanitize()","sanitize_conditions()","sanitize_css()","sanitize_dom_id()","sanitize_for_mass_assignment()","sanitize_limit()","sanitize_sql()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_hash()","sanitize_sql_hash_for_assignment()","sanitize_sql_hash_for_conditions()","save()","save()","save()","save()","save!()","save!()","save!()","save_method()","save_record?()","save_with_validation()","say()","say_with_time()","schema()","schema()","schema=()","schema_exists?()","schema_format()","schema_search_path()","schema_search_path=()","scope()","scope()","scoped()","script()","script()","search_field()","search_field_tag()","second()","seconds_since_midnight()","seconds_since_midnight()","seconds_to_utc_offset()","secret_token()","select()","select()","select()","select()","select_all()","select_all()","select_date()","select_datetime()","select_day()","select_hour()","select_minute()","select_month()","select_one()","select_rows()","select_rows()","select_rows()","select_rows()","select_rows()","select_second()","select_tag()","select_time()","select_value()","select_values()","select_year()","send_action()","send_data()","send_data()","send_data()","send_file()","send_file()","send_file()","sequence_name()","sequence_name=()","serial_sequence()","serializable_hash()","serializable_hash()","serialize()","serialize()","serialized_value()","server_port()","server_software()","session()","session_auth=()","session_options=()","session_store()","set()","set_callback()","set_content_type()","set_cookie()","set_default_accessors!()","set_enablement()","set_environment()","set_fixture_class()","set_logger()","set_session()","set_standard_conforming_strings()","setup()","setup()","setup()","setup()","setup()","setup_controller_request_and_response()","setup_fixture_accessors()","setup_fixtures()","setup_subscriptions()","setup_with_controller()","shallow()","shallow?()","shift()","show_detailed_exceptions?()","show_variable()","silence()","silence()","silence()","silence()","silence()","silence!()","silence_stream()","silence_warnings()","silencer()","simple_format()","since()","since()","since()","since()","singleton_class()","singular()","singular()","singular_route_key()","singular_table_name()","singularize()","singularize()","site()","site=()","site=()","size()","size()","size()","size()","size()","skip_after_filter()","skip_around_filter()","skip_before_filter()","skip_callback()","skip_filter()","slice()","slice()","slice!()","source_root()","split()","split()","split_args()","sql_for_insert()","sql_for_insert()","sql_query_length()","sqlite_version()","squish()","squish!()","ssl_options()","ssl_options=()","ssl_options=()","stale?()","stale_session_check!()","standard_port()","standard_port?()","start()","start()","start()","start()","start()","start_document()","start_element()","start_processing()","start_transaction()","stats()","status()","status=()","status=()","status_code()","status_message()","sti_name()","store()","store()","store_accessor()","store_application_definition!()","strftime()","strict_encode64()","stringify_keys()","stringify_keys()","stringify_keys!()","stringify_keys!()","strip()","strip_heredoc()","strip_links()","strip_tags()","structure_dump()","stylesheet_link_tag()","stylesheet_path()","stylesheets()","subclasses()","subclasses()","subdomain()","subdomains()","submit()","submit_tag()","subscribe()","subscribe()","subscribed()","substitute_at()","substitute_at()","success?()","sum()","sunday()","supports_add_column?()","supports_bulk_alter?()","supports_count_distinct?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_insert_with_returning?()","supports_migrations?()","supports_migrations?()","supports_migrations?()","supports_primary_key?()","supports_primary_key?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_streaming?()","supports_streaming?()","suppress()","suppress_messages()","svn_url?()","swap()","symbolize_keys()","symbolize_keys()","symbolize_keys!()","symbolized_base_class()","symbolized_path_parameters()","symbolized_sti_name()","symbols()","sync_keys!()","synchronize()","t()","t()","table_alias_for()","table_alias_length()","table_alias_length()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_name()","table_name()","table_name=()","table_name_length()","table_rows()","table_structure()","tableize()","tableize()","tables()","tag()","tag()","tagged()","tags_text()","tail!()","teardown()","teardown()","teardown_fixtures()","teardown_subscriptions()","telephone_field()","telephone_field_tag()","template()","template_exists?()","templates_path()","test()","test()","test()","test_dummy_clean()","test_dummy_config()","test_errors_aref()","test_errors_full_messages()","test_model_naming()","test_persisted?()","test_to_key()","test_to_param()","test_to_partial_path()","test_valid?()","tests()","tests()","tests()","text_area()","text_area_tag()","text_field()","text_field_tag()","third()","threadsafe!()","tidy_bytes()","tidy_bytes()","time()","time_ago_in_words()","time_select()","time_select()","time_tag()","time_with_block()","time_with_datetime_fallback()","time_zone_options_for_select()","time_zone_select()","time_zone_select()","timeout()","timeout=()","timeout=()","timestamped_migrations()","timestamps()","timestamps()","titlecase()","titlecase()","titleize()","titleize()","titleize()","tmp()","to()","to()","to()","to_a()","to_a()","to_a()","to_a()","to_a()","to_app()","to_ary()","to_cleanup()","to_d()","to_date()","to_date()","to_date()","to_date()","to_date_select_tag()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime_select_tag()","to_default_s()","to_default_s()","to_default_s()","to_f()","to_f()","to_format()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_html()","to_html()","to_i()","to_i()","to_js()","to_json()","to_json()","to_key()","to_key()","to_model()","to_model()","to_options()","to_options!()","to_options!()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_partial_path()","to_partial_path()","to_path()","to_path()","to_prepare()","to_prepare()","to_prepare_blocks()","to_query()","to_query()","to_query()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sentence()","to_sql()","to_sql()","to_str()","to_sym()","to_tag()","to_time()","to_time()","to_time()","to_time()","to_time_select_tag()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_yaml()","to_yaml()","to_yaml()","to_yaml()","to_yaml_type()","today()","today?()","today?()","toggle()","toggle!()","token_and_options()","tomorrow()","touch()","transaction()","transaction()","transaction()","transaction()","transaction_joinable=()","translate()","translate()","translate_exception()","translate_exception()","translate_exception()","translate_exception()","transliterate()","trigger()","trigger()","truncate()","truncate()","try()","try()","try_to_load_dependency()","tsort_each_child()","tsvector()","tv_sec()","type_cast()","type_cast()","type_cast()","type_cast_attribute_for_write()","type_to_sql()","type_to_sql()","u_unpack()","uncached()","uncached()","uncountable()","uncountable?()","uncountable?()","undefine_attribute_methods()","undefine_attribute_methods()","underscore()","underscore()","unescape()","unescape_bytea()","unescape_path()","uninstall()","uniq_by()","uniq_by!()","unmemoize_all()","unregister()","unserialize()","unserialized_value()","unsubscribe()","unsubscribe()","until()","up()","upcase()","update()","update()","update()","update_attribute()","update_attribute()","update_attributes()","update_attributes()","update_attributes()","update_attributes!()","update_column()","update_counters()","update_sql()","update_sql()","updated()","updated?()","url()","url_field()","url_field_tag()","url_for()","url_for()","url_for()","url_for()","url_options()","url_options()","url_options()","url_options()","url_options()","us_zones()","usage_path()","use()","use()","use()","use_accept_header()","use_checkout?()","use_externals?()","use_renderer()","use_renderers()","use_svn?()","use_zone()","usec()","user()","user=()","user=()","user_agent=()","user_name_and_password()","uses_transaction()","uses_transaction?()","utc()","utc()","utc?()","utc?()","utc_offset()","utc_offset()","utc_offset()","utc_time()","utc_to_local()","utf8_enforcer_tag()","uuid()","valid?()","valid?()","valid?()","valid_accept_header()","valid_alter_table_options()","valid_const?()","valid_const?()","valid_scope_name?()","validate()","validate()","validate()","validate()","validate_digest_response()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_fallbacks()","validate_nonce()","validates()","validates!()","validates_acceptance_of()","validates_associated()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_numericality_of()","validates_presence_of()","validates_size_of()","validates_uniqueness_of()","validates_with()","validates_with()","validators()","validators_on()","value()","values()","values()","values_at()","vendor()","vendor()","vendor_javascripts()","vendor_plugins()","vendor_stylesheets()","verified_request?()","verify()","verify!()","verify_authenticity_token()","verify_request?()","version()","video_path()","video_tag()","view_assigns()","view_context()","view_context_class()","view_context_class()","view_paths()","view_paths=()","view_paths=()","view_renderer()","visible_action?()","wait()","wait()","wants?()","warn()","watch()","watch_namespaces()","watchable_args()","watchable_dirs()","watchable_files()","watching?()","weeks_ago()","with()","with()","with_backend()","with_backend()","with_connection()","with_default_scope()","with_exclusive_scope()","with_fallbacks()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_indifferent_access()","with_indifferent_access()","with_local_cache()","with_options()","with_output_file()","with_routing()","with_scope_level()","with_transaction_returning_status()","with_warnings()","without_modules()","word_wrap()","wrap()","wrap_parameters()","wrap_with_namespace()","write()","write()","write()","write()","write_attribute()","write_entry()","write_entry()","write_fragment()","xhr()","xhr()","xhr?()","xml()","xml()","xml_http_request()","xml_http_request()","xml_http_request?()","xmlschema()","xmlschema()","year()","years()","years_ago()","years_since()","yesterday()","zone()","zone()","zone=()","zones_map()","readme.rdoc","changelog.md","readme.rdoc","base.rb","mail_helper.rb","changelog.md","readme.rdoc","asset_paths.rb","base.rb","callbacks.rb","collector.rb","helpers.rb","layouts.rb","logger.rb","routes_helpers.rb","rendering.rb","translation.rb","url_for.rb","view_paths.rb","base.rb","caching.rb","actions.rb","fragments.rb","pages.rb","sweeping.rb","deprecated.rb","integration_test.rb","performance_test.rb","log_subscriber.rb","metal.rb","compatibility.rb","conditional_get.rb","cookies.rb","data_streaming.rb","exceptions.rb","flash.rb","force_ssl.rb","head.rb","helpers.rb","hide_actions.rb","http_authentication.rb","implicit_render.rb","instrumentation.rb","mime_responds.rb","params_wrapper.rb","rack_delegation.rb","redirecting.rb","renderers.rb","rendering.rb","request_forgery_protection.rb","rescue.rb","responder.rb","session_management.rb","streaming.rb","testing.rb","url_for.rb","middleware.rb","railtie.rb","paths.rb","record_identifier.rb","test_case.rb","cache.rb","filter_parameters.rb","headers.rb","mime_negotiation.rb","mime_type.rb","mime_types.rb","parameter_filter.rb","parameters.rb","rack_cache.rb","request.rb","response.rb","upload.rb","url.rb","best_standards_support.rb","body_proxy.rb","callbacks.rb","cookies.rb","debug_exceptions.rb","exception_wrapper.rb","flash.rb","head.rb","params_parser.rb","public_exceptions.rb","reloader.rb","remote_ip.rb","request_id.rb","rescue.rb","abstract_store.rb","cache_store.rb","cookie_store.rb","mem_cache_store.rb","show_exceptions.rb","stack.rb","static.rb","railtie.rb","routing.rb","mapper.rb","polymorphic_routes.rb","redirection.rb","route_set.rb","routes_proxy.rb","url_for.rb","assertions.rb","dom.rb","response.rb","routing.rb","selector.rb","tag.rb","integration.rb","performance_test.rb","test_process.rb","test_request.rb","test_response.rb","asset_paths.rb","base.rb","buffers.rb","context.rb","flows.rb","helpers.rb","active_model_helper.rb","asset_paths.rb","asset_tag_helper.rb","asset_include_tag.rb","asset_paths.rb","javascript_tag_helpers.rb","stylesheet_tag_helpers.rb","atom_feed_helper.rb","cache_helper.rb","capture_helper.rb","controller_helper.rb","csrf_helper.rb","date_helper.rb","debug_helper.rb","form_helper.rb","form_options_helper.rb","form_tag_helper.rb","javascript_helper.rb","number_helper.rb","output_safety_helper.rb","record_tag_helper.rb","rendering_helper.rb","sanitize_helper.rb","tag_helper.rb","text_helper.rb","translation_helper.rb","url_helper.rb","log_subscriber.rb","lookup_context.rb","path_set.rb","railtie.rb","abstract_renderer.rb","partial_renderer.rb","renderer.rb","streaming_template_renderer.rb","template_renderer.rb","template.rb","error.rb","handlers.rb","builder.rb","erb.rb","resolver.rb","text.rb","test_case.rb","resolvers.rb","changelog.md","readme.rdoc","attribute_methods.rb","callbacks.rb","conversion.rb","dirty.rb","errors.rb","lint.rb","mass_assignment_security.rb","permission_set.rb","sanitizer.rb","naming.rb","observer_array.rb","observing.rb","railtie.rb","secure_password.rb","serialization.rb","json.rb","xml.rb","test_case.rb","translation.rb","validations.rb","acceptance.rb","callbacks.rb","confirmation.rb","exclusion.rb","format.rb","inclusion.rb","length.rb","numericality.rb","presence.rb","validates.rb","with.rb","validator.rb","version.rb","changelog.md","readme.rdoc","aggregations.rb","associations.rb","alias_tracker.rb","association.rb","association_scope.rb","belongs_to_association.rb","belongs_to_polymorphic_association.rb","association.rb","belongs_to.rb","collection_association.rb","has_and_belongs_to_many.rb","has_many.rb","has_one.rb","singular_association.rb","collection_association.rb","collection_proxy.rb","has_and_belongs_to_many_association.rb","has_many_association.rb","has_many_through_association.rb","has_one_association.rb","has_one_through_association.rb","join_dependency.rb","join_association.rb","join_base.rb","join_part.rb","join_helper.rb","preloader.rb","association.rb","belongs_to.rb","collection_association.rb","has_and_belongs_to_many.rb","has_many.rb","has_many_through.rb","has_one.rb","has_one_through.rb","singular_association.rb","through_association.rb","singular_association.rb","through_association.rb","attribute_assignment.rb","attribute_methods.rb","before_type_cast.rb","deprecated_underscore_read.rb","dirty.rb","primary_key.rb","query.rb","read.rb","serialization.rb","time_zone_conversion.rb","write.rb","autosave_association.rb","base.rb","callbacks.rb","yaml_column.rb","connection_pool.rb","connection_specification.rb","database_limits.rb","database_statements.rb","query_cache.rb","quoting.rb","schema_definitions.rb","schema_statements.rb","abstract_adapter.rb","abstract_mysql_adapter.rb","column.rb","mysql2_adapter.rb","mysql_adapter.rb","postgresql_adapter.rb","schema_cache.rb","sqlite3_adapter.rb","sqlite_adapter.rb","statement_pool.rb","counter_cache.rb","dynamic_finder_match.rb","dynamic_matchers.rb","dynamic_scope_match.rb","errors.rb","explain.rb","explain_subscriber.rb","fixtures.rb","file.rb","identity_map.rb","inheritance.rb","integration.rb","optimistic.rb","pessimistic.rb","log_subscriber.rb","migration.rb","command_recorder.rb","model_schema.rb","nested_attributes.rb","observer.rb","persistence.rb","query_cache.rb","querying.rb","railtie.rb","console_sandbox.rb","controller_runtime.rb","jdbcmysql_error.rb","readonly_attributes.rb","reflection.rb","relation.rb","batches.rb","calculations.rb","delegation.rb","finder_methods.rb","predicate_builder.rb","query_methods.rb","spawn_methods.rb","result.rb","sanitization.rb","schema.rb","schema_dumper.rb","scoping.rb","default.rb","named.rb","serialization.rb","xml_serializer.rb","session_store.rb","store.rb","test_case.rb","timestamp.rb","transactions.rb","translation.rb","validations.rb","associated.rb","uniqueness.rb","version.rb","changelog.md","readme.rdoc","active_resource.rb","base.rb","connection.rb","custom_methods.rb","exceptions.rb","formats.rb","json_format.rb","xml_format.rb","http_mock.rb","log_subscriber.rb","observing.rb","railtie.rb","schema.rb","validations.rb","version.rb","changelog.md","readme.rdoc","all.rb","backtrace_cleaner.rb","base64.rb","basic_object.rb","benchmarkable.rb","buffered_logger.rb","builder.rb","cache.rb","file_store.rb","mem_cache_store.rb","memory_store.rb","null_store.rb","local_cache.rb","callbacks.rb","concern.rb","configurable.rb","core_ext.rb","array.rb","access.rb","conversions.rb","extract_options.rb","grouping.rb","prepend_and_append.rb","random_access.rb","uniq_by.rb","wrap.rb","benchmark.rb","big_decimal.rb","conversions.rb","class.rb","attribute.rb","attribute_accessors.rb","delegating_attributes.rb","subclasses.rb","acts_like.rb","calculations.rb","conversions.rb","freeze.rb","zones.rb","acts_like.rb","calculations.rb","conversions.rb","zones.rb","enumerable.rb","exception.rb","file.rb","atomic.rb","path.rb","float.rb","rounding.rb","hash.rb","conversions.rb","deep_dup.rb","deep_merge.rb","diff.rb","except.rb","indifferent_access.rb","keys.rb","reverse_merge.rb","slice.rb","integer.rb","inflections.rb","multiple.rb","time.rb","io.rb","kernel.rb","agnostics.rb","debugger.rb","reporting.rb","singleton_class.rb","load_error.rb","logger.rb","module.rb","aliasing.rb","anonymous.rb","attr_internal.rb","attribute_accessors.rb","delegation.rb","deprecation.rb","introspection.rb","method_names.rb","qualified_const.rb","reachable.rb","remove_method.rb","synchronization.rb","name_error.rb","numeric.rb","bytes.rb","time.rb","object.rb","acts_like.rb","blank.rb","conversions.rb","duplicable.rb","inclusion.rb","instance_variables.rb","to_json.rb","to_param.rb","to_query.rb","try.rb","with_options.rb","proc.rb","process.rb","daemon.rb","range.rb","blockless_step.rb","conversions.rb","cover.rb","include_range.rb","overlaps.rb","regexp.rb","rexml.rb","string.rb","access.rb","behavior.rb","conversions.rb","encoding.rb","exclude.rb","filters.rb","inflections.rb","inquiry.rb","interpolation.rb","multibyte.rb","output_safety.rb","starts_ends_with.rb","strip.rb","xchar.rb","acts_like.rb","calculations.rb","conversions.rb","marshal.rb","publicize_conversion_methods.rb","zones.rb","uri.rb","dependencies.rb","autoload.rb","deprecation.rb","behaviors.rb","method_wrappers.rb","proxy_wrappers.rb","reporting.rb","descendants_tracker.rb","duration.rb","file_update_checker.rb","file_watcher.rb","gzip.rb","hash_with_indifferent_access.rb","i18n.rb","i18n_railtie.rb","inflections.rb","inflector.rb","inflections.rb","methods.rb","transliterate.rb","json.rb","decoding.rb","encoding.rb","variable.rb","lazy_load_hooks.rb","log_subscriber.rb","test_helper.rb","memoizable.rb","message_encryptor.rb","message_verifier.rb","multibyte.rb","chars.rb","exceptions.rb","unicode.rb","utils.rb","notifications.rb","fanout.rb","instrumenter.rb","option_merger.rb","ordered_hash.rb","ordered_options.rb","railtie.rb","rescuable.rb","shim.rb","string_inquirer.rb","tagged_logging.rb","test_case.rb","assertions.rb","declarative.rb","deprecation.rb","isolation.rb","mochaing.rb","pending.rb","performance.rb","jruby.rb","rubinius.rb","ruby.rb","mri.rb","yarv.rb","setup_and_teardown.rb","time.rb","autoload.rb","time_with_zone.rb","time_zone.rb","version.rb","whiny_nil.rb","xml_mini.rb","jdom.rb","libxml.rb","libxmlsax.rb","nokogiri.rb","nokogirisax.rb","rexml.rb","changelog.md","mit-license","readme.rdoc","rails.rb","all.rb","application.rb","bootstrap.rb","configuration.rb","finisher.rb","railties.rb","route_inspector.rb","routes_reloader.rb","backtrace_cleaner.rb","cli.rb","code_statistics.rb","commands.rb","application.rb","benchmarker.rb","console.rb","dbconsole.rb","destroy.rb","generate.rb","plugin.rb","plugin_new.rb","profiler.rb","runner.rb","server.rb","update.rb","configuration.rb","app.rb","helpers.rb","engine.rb","commands.rb","configuration.rb","railties.rb","generators.rb","actions.rb","active_model.rb","app_base.rb","base.rb","assets_generator.rb","scaffold_generator.rb","erb.rb","controller_generator.rb","mailer_generator.rb","scaffold_generator.rb","generated_attribute.rb","assets_generator.rb","migration.rb","named_base.rb","app_generator.rb","assets_generator.rb","controller_generator.rb","generator_generator.rb","helper_generator.rb","integration_test_generator.rb","migration_generator.rb","model_generator.rb","observer_generator.rb","performance_test_generator.rb","plugin_new_generator.rb","resource_generator.rb","resource_route_generator.rb","scaffold_generator.rb","scaffold_controller_generator.rb","session_migration_generator.rb","task_generator.rb","resource_helpers.rb","test_case.rb","test_unit.rb","controller_generator.rb","helper_generator.rb","integration_generator.rb","mailer_generator.rb","model_generator.rb","observer_generator.rb","performance_generator.rb","plugin_generator.rb","scaffold_generator.rb","info.rb","info_controller.rb","initializable.rb","paths.rb","performance_test_help.rb","plugin.rb","rack.rb","debugger.rb","log_tailer.rb","logger.rb","railtie.rb","configurable.rb","configuration.rb","ruby_version_check.rb","rubyprof_ext.rb","script_rails_loader.rb","source_annotation_extractor.rb","tasks.rb","test_help.rb","railtie.rb","sub_test_task.rb","version.rb"],"longSearchIndex":["actionpack\/lib\/abstract_controller\/callbacks.rb","abstractcontroller","abstractcontroller","abstractcontroller","abstractcontroller","abstractcontroller::callbacks","abstractcontroller","abstractcontroller","abstractcontroller","abstractcontroller","abstractcontroller::helpers","abstractcontroller","abstractcontroller::layouts","abstractcontroller::layouts::classmethods","abstractcontroller","abstractcontroller","abstractcontroller::railties","abstractcontroller","abstractcontroller::rendering","abstractcontroller","abstractcontroller","abstractcontroller::urlfor","abstractcontroller","abstractcontroller::viewpaths","actioncontroller","actioncontroller","actioncontroller::caching","actioncontroller::caching::actions","actioncontroller::caching::actions","actioncontroller::caching","actioncontroller::caching","actioncontroller::caching","actioncontroller::caching::pages","actioncontroller::caching","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller::forcessl","actioncontroller","actioncontroller","actioncontroller::helpers","actioncontroller","actioncontroller::hideactions","actioncontroller","actioncontroller::httpauthentication","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication","actioncontroller::httpauthentication::token","actioncontroller","actioncontroller","actioncontroller::instrumentation","actioncontroller","actioncontroller","actioncontroller","actioncontroller::middleware","actioncontroller","actioncontroller::mimeresponds","actioncontroller","actioncontroller::paramswrapper","actioncontroller","actioncontroller","actioncontroller","actioncontroller::railties","actioncontroller","actioncontroller","actioncontroller","actioncontroller::renderers","actioncontroller::renderers","actioncontroller","actioncontroller","actioncontroller::requestforgeryprotection","actioncontroller","actioncontroller","actioncontroller::sessionmanagement","actioncontroller","actioncontroller","actioncontroller","actioncontroller::testcase","actioncontroller::testcase::behavior","actioncontroller::testcase","actioncontroller","actioncontroller","actioncontroller::testing","actioncontroller","actiondispatch","actiondispatch::assertions","actiondispatch::assertions","actiondispatch::assertions","actiondispatch::assertions","actiondispatch::assertions","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch::cookies","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch::flash","actiondispatch","actiondispatch","actiondispatch::http","actiondispatch::http::cache","actiondispatch::http::cache","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::integration","actiondispatch::integration","actiondispatch::integration","actiondispatch","actiondispatch","actiondispatch::middlewarestack","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch::remoteip","actiondispatch::remoteip","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch::routing","actiondispatch::routing::mapper","actiondispatch::routing::mapper","actiondispatch::routing::mapper","actiondispatch::routing::mapper","actiondispatch::routing","actiondispatch::routing","actiondispatch::routing::routeset","actiondispatch::routing","actiondispatch","actiondispatch::session","actiondispatch::session","actiondispatch::session","actiondispatch::session","actiondispatch::session","actiondispatch::session","actiondispatch::session","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actionmailer","actionmailer","actionview","actionview","actionview","actionview","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper::javascripttaghelpers","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper::stylesheettaghelpers","actionview::helpers","actionview::helpers::atomfeedhelper","actionview::helpers::atomfeedhelper","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::numberhelper","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview","actionview::lookupcontext","actionview::lookupcontext","actionview","actionview","actionview","actionview","actionview","actionview::resolver","actionview","actionview::template::handlers","actionview::template::handlers","actionview::template::handlers","actionview","actionview::testcase","actionview::testcase::behavior","actionview::testcase::behavior","actionview::testcase","activemodel","activemodel::attributemethods","activemodel::attributemethods::classmethods","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel::lint","activemodel","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel::observing","activemodel","activemodel::securepassword","activemodel::securepassword","activemodel","activemodel","activemodel::serializers","activemodel::serializers","activemodel","activemodel","activemodel","activemodel::validations","activemodel::validations","activemodel::validations::callbacks","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel","activerecord","activerecord","activerecord","activerecord::aggregations","activerecord","activerecord::associations","activerecord","activerecord::attributeassignment","activerecord","activerecord","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods::deprecatedunderscoreread","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods::primarykey","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods::read","activerecord::attributemethods","activerecord::attributemethods::serialization","activerecord::attributemethods::serialization","activerecord::attributemethods","activerecord::attributemethods::timezoneconversion","activerecord::attributemethods","activerecord::attributemethods::write","activerecord","activerecord","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::fixtures","activerecord","activerecord::inheritance","activerecord","activerecord","activerecord","activerecord::migration","activerecord","activerecord","activerecord::modelschema","activerecord","activerecord::nestedattributes","activerecord::nestedattributes","activerecord","activerecord::persistence","activerecord","activerecord","activerecord::querycache","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::sanitization","activerecord","activerecord::scoping","activerecord::scoping::default","activerecord::scoping","activerecord::scoping::named","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::store","activerecord","activerecord::testfixtures","activerecord","activerecord","activerecord::transactions","activerecord","activerecord","activerecord","activerecord::validations","activerecord::validations","activerecord::validations","activerecord","activeresource","activeresource","activeresource","activeresource::custommethods","activeresource","activeresource","activeresource::formats","activeresource::formats","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activesupport","activesupport","activesupport","activesupport","activesupport","activesupport::bufferedlogger","activesupport","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache::strategy","activesupport::cache::strategy::localcache","activesupport","activesupport","activesupport","activesupport","activesupport::configurable","activesupport::configurable","activesupport::dependencies","activesupport::dependencies","activesupport","activesupport","activesupport","activesupport","activesupport","activesupport::filewatcher","activesupport","activesupport::gzip","activesupport","activesupport","activesupport::inflector","activesupport","activesupport","activesupport::json::encoding","activesupport::json::encoding","activesupport::json","activesupport","activesupport::logsubscriber","activesupport::logsubscriber::testhelper","activesupport","activesupport::memoizable","activesupport","activesupport::messageencryptor","activesupport","activesupport::messageverifier","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte::unicode","activesupport::multibyte::unicode","activesupport","activesupport::notifications","activesupport::notifications","activesupport::notifications","activesupport","activesupport","activesupport","activesupport","activesupport::rescuable","activesupport","activesupport::safebuffer","activesupport","activesupport","activesupport","activesupport","activesupport::testing","activesupport::testing","activesupport::testing","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing","activesupport::testing","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing","activesupport::testing","activesupport::testing","activesupport::testing::setupandteardown","activesupport::testing::setupandteardown","activesupport::testing::setupandteardown","activesupport","activesupport","activesupport","activesupport","activesupport::xmlmini_libxmlsax","activesupport","activesupport::xmlmini_nokogirisax","arjdbcmysql","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/base64.rb","activesupport\/lib\/active_support\/json\/encoding.rb","railties\/lib\/rails\/generators\/css\/scaffold\/scaffold_generator.rb","css","css::generators","css::generators","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","erb","activesupport\/lib\/active_support\/json\/encoding.rb","railties\/lib\/rails\/generators\/erb\/scaffold\/scaffold_generator.rb","erb","erb::generators","erb::generators","erb::generators","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/core_ext\/file\/path.rb","activesupport\/lib\/active_support\/core_ext\/float\/rounding.rb","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/i18n_railtie.rb","i18n","i18n","activesupport\/lib\/active_support\/core_ext\/integer\/inflections.rb","railties\/lib\/rails\/generators\/js\/assets\/assets_generator.rb","js","js::generators","activesupport\/lib\/active_support\/core_ext\/kernel\/singleton_class.rb","activesupport\/lib\/active_support\/core_ext\/load_error.rb","logger","actionpack\/lib\/action_dispatch\/http\/mime_type.rb","mime","mime","activesupport\/lib\/active_support\/core_ext\/object\/duplicable.rb","activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter.rb","mysql","mysql","mysql","activesupport\/lib\/active_support\/core_ext\/name_error.rb","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/json\/encoding.rb","railties\/lib\/rails\/commands\/plugin.rb","activesupport\/lib\/active_support\/core_ext\/process\/daemon.rb","activesupport\/lib\/active_support\/core_ext\/module\/qualified_const.rb","railties\/lib\/rails\/railtie\/configurable.rb","rails","rails","rails","rails::application","rails::application","rails::application","rails::application","rails::application","rails","rails","rails::commands","rails::commands","rails::commands","rails::commands","rails","rails","rails","rails","rails","rails::engine","rails::engine","rails","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators::migration","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails","rails","rails","rails::initializable","rails::initializable","rails::initializable","rails","rails::paths","rails::paths","rails","rails","rails","rails::rack","rails::rack","rails::rack","rails","rails::railtie","rails::railtie::configurable","rails::railtie","rails","rails","rails::server","rails","rails","railties\/lib\/rails\/commands\/plugin.rb","railties\/lib\/rails\/commands\/plugin.rb","railties\/lib\/rails\/source_annotation_extractor.rb","sourceannotationextractor","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/testing\/deprecation.rb","test","test::unit","test::unit::collector","railties\/lib\/rails\/generators\/test_unit\/integration\/integration_generator.rb","testunit","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/json\/encoding.rb","activesupport\/lib\/active_support\/core_ext\/uri.rb","activemodel::massassignmentsecurity::permissionset","activesupport::duration","activesupport::multibyte::chars","activesupport::safebuffer","activesupport::timewithzone","rails::initializable::collection","activesupport::duration","activesupport::timewithzone","time","activesupport::safebuffer","activerecord::base","activerecord::connectionadapters::sqliteadapter::version","activesupport::multibyte::chars","activesupport::timewithzone","activesupport::timezone","datetime","time","actiondispatch::middlewarestack::middleware","actionview::filesystemresolver","activerecord::base","activeresource::base","activeresource::request","activeresource::response","activesupport::duration","mime::type","activerecord::base","activesupport::multibyte::unicode::unicodedatabase","mime::type","time","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::timezone","mime::type","actiondispatch::request","actiondispatch::request","actiondispatch::flash::flashhash","actiondispatch::http::headers","actiondispatch::middlewarestack","activemodel::errors","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::connectionadapters::tabledefinition","activerecord::fixtures","activeresource::formats","activeresource::response","activesupport::dependencies::classcache","activesupport::multibyte::chars","activesupport::orderedhash","activesupport::orderedoptions","activesupport::safebuffer","activesupport::testing::performance::metrics","activesupport::timezone","mime","activemodel::errors","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::fixtures","activeresource::response","activesupport::hashwithindifferentaccess","activesupport::multibyte::chars","activesupport::orderedhash","activesupport::orderedoptions","rails::paths::root","activesupport::classmethods","activesupport::testing::proxytestresult","activesupport::classmethods","rails::engine","rails::engine","rails::engine","activerecord::attributemethods::deprecatedunderscoreread","activesupport::xmlmini","time","time","time","time","activesupport::orderedoptions","actioncontroller::compatibility","actioncontroller::renderers","abstractcontroller::layouts::classmethods","abstractcontroller::callbacks::classmethods","actionview::context","actionview::helpers::renderinghelper","time","time","time","time","abstractcontroller::callbacks::classmethods","abstractcontroller::layouts","actioncontroller::compatibility","bigdecimal","activesupport::xmlmini","abstractcontroller::viewpaths","actionview::context","abstractcontroller::urlfor","abstractcontroller::urlfor::classmethods","actiondispatch::routing::urlfor","actionview::helpers::urlhelper","activesupport::testing::isolation","actioncontroller::caching::actions","actionview::lookupcontext::detailscache","actioncontroller::paramswrapper::classmethods","actionview::helpers::formbuilder","activemodel::validations::classmethods","actiondispatch::routing::urlfor","abstractcontroller::layouts::classmethods","abstractcontroller::base","activerecord::inheritance::classmethods","rails::railtie","actiondispatch::testrequest","actiondispatch::http::mimenegotiation","activerecord::nestedattributes::classmethods","activemodel::massassignmentsecurity::classmethods","activesupport::inflector::inflections","actioncontroller::metal","actiondispatch::testrequest","abstractcontroller::layouts","abstractcontroller::base","abstractcontroller::base","abstractcontroller::urlfor::classmethods","actioncontroller::hideactions::classmethods","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activemodel::massassignmentsecurity::classmethods","activemodel::massassignmentsecurity::classmethods","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionhandler","object","datetime","activesupport::multibyte::chars","string","activesupport::timewithzone","datetime","time","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","actioncontroller::renderers","activemodel::errors","activesupport::bufferedlogger","activesupport::taggedlogging","rails::paths::root","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::abstractmysqladapter","activesupport::testing::proxytestresult","actionview::template::handlers::erubis","actionview::template::handlers::erubis","activesupport::backtracecleaner","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::abstractmysqladapter","activemodel::observing::classmethods","activemodel::errors","activemodel::errors","actionview::template::handlers::erubis","actionview::template::handlers::erubis","rails::generators::resourceroutegenerator","rails::generators::controllergenerator","rails::generators::appbase","rails::generators::base","activesupport::backtracecleaner","rails::generators::actions","actionview::template::handlers::erubis","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::abstractmysqladapter","activerecord::transactions","activerecord::connectionadapters::databasestatements","nilclass","activemodel::errors","activesupport::timewithzone","datetime","time","actiondispatch::callbacks","rails::initializable::initializer","activerecord::transactions::classmethods","abstractcontroller::callbacks::classmethods","rails::railtie::configuration","activerecord::transactions::classmethods","activemodel::validations::callbacks::classmethods","activesupport::duration","activesupport::timewithzone","datetime","time","actiondispatch::flash::flashhash","actiondispatch::flash::flashhash","activemodel::attributemethods::classmethods","module","module","activeresource::base","activesupport::timezone","rails::application::railties","rails::engine::railties","rails::generators::activemodel","rails::plugin","time","actioncontroller::helpers::classmethods","time","rails::paths::root","time","time","time","activerecord::migration","module","actioncontroller::responder","actioncontroller::responder","actiondispatch::integration::runner","actiondispatch::integrationtest","actiondispatch::integrationtest","rails::appbuilder","rails::consolemethods","rails::engine","rails::pluginbuilder","rails::server","actiondispatch::integrationtest","rails::generators::appgenerator","rails::generators::appgenerator","rails::railtie::configuration","rails::railtie::configuration","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::pluginnewgenerator","abstractcontroller::callbacks::classmethods","abstractcontroller::callbacks::classmethods","abstractcontroller::callbacks::classmethods","activesupport::concern","abstractcontroller::viewpaths","abstractcontroller::viewpaths::classmethods","rails","rails::generators::actions","rails","rails::generators::pluginnewgenerator","rails::generators::namedbase","actiondispatch::exceptionwrapper","rails::generators::appbase","activerecord::base","activerecord::base","rails::generators::testcase","abstractcontroller::callbacks::classmethods","activemodel::errors","activemodel::serializers::json","activesupport::json::encoding::encoder","activesupport::json::variable","activesupport::timewithzone","bigdecimal","falseclass","nilclass","string","symbol","trueclass","activesupport::testing::assertions","rails::generators::testcase","activesupport::testing::assertions","rails::generators::testcase","actiondispatch::assertions::domassertions","actiondispatch::assertions::domassertions","rails::generators::testcase","rails::generators::testcase","rails::generators::testcase","actiondispatch::assertions::routingassertions","actiondispatch::middlewarestack","rails::generators::testcase","rails::generators::testcase","rails::generators::testcase","activesupport::testing::assertions","rails::generators::testcase","rails::generators::testcase","rails::generators::testcase","actiondispatch::assertions::tagassertions","activesupport::testing::assertions","actiondispatch::assertions::routingassertions","actiondispatch::assertions::responseassertions","actiondispatch::assertions::responseassertions","actiondispatch::assertions::routingassertions","actiondispatch::assertions::selectorassertions","actiondispatch::assertions::selectorassertions","actiondispatch::assertions::selectorassertions","actiondispatch::assertions::tagassertions","actioncontroller::templateassertions","hash","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actionview::helpers::assettaghelper::stylesheetincludetag","rails::generators::assetsgenerator","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actionview::helpers::assettaghelper::stylesheetincludetag","rails::generators::appbase","activerecord::attributeassignment","actioncontroller::compatibility","actiondispatch::testprocess","activerecord::connectionadapters::schemastatements","activesupport::timezone","string","string","datetime","time","datetime","time","time","time","time","time","time","time","time","time","datetime","time","actionview::helpers::atomfeedhelper","file","activesupport::logsubscriber","actionmailer::base","actionmailer::mailhelper","activemodel::massassignmentsecurity::classmethods","module","module","module","module","activemodel::massassignmentsecurity::classmethods","activerecord::attributemethods::timezoneconversion::classmethods","activemodel::attributemethods","activemodel::validations::classmethods","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activemodel::attributemethods","activerecord::attributeassignment","activerecord::attributemethods::beforetypecast","activemodel::massassignmentsecurity::classmethods","activemodel::securepassword::classmethods","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","activemodel::securepassword::instancemethodsonactivation","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","actiondispatch::request","actionview::helpers::assettaghelper","activesupport::bufferedlogger","activesupport::autoload","activesupport::autoload","rails::paths::root","rails::engine::configuration","rails::engine::configuration","rails::paths::root","activesupport::autoload","activesupport::autoload","abstractcontroller::base","erb::generators::scaffoldgenerator","activesupport::xmlmini","rails","activerecord::dynamicfindermatch","rails::generators::appgenerator","rails::generators::base","rails::generators::pluginnewgenerator","activerecord::inheritance::classmethods","rails::generators::base","rails::generators::base","activerecord::migrationproxy","activerecord::persistence","actiondispatch::callbacks","rails::initializable::initializer","rails::railtie::configuration","rails::railtie::configuration","abstractcontroller::callbacks::classmethods","actioncontroller::testing::classmethods","rails::railtie::configuration","activemodel::validations::callbacks::classmethods","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","datetime","time","datetime","time","time","time","time","time","activesupport::deprecation","activesupport::deprecation","activerecord::associations::classmethods","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","rails::initializable::initializer","activesupport::benchmarkable","activesupport::testing::performance::metrics::base","railsenvironment","activesupport::timewithzone","rails::initializable::initializer","activemodel::errors","falseclass","nilclass","object","string","trueclass","actionmailer::mailhelper","actiondispatch::request","actiondispatch::response","actiondispatch::response","actiondispatch::response","kernel","actioncontroller::middleware","actiondispatch::middlewarestack","actiondispatch::middlewarestack::middleware","actionview::resolver::path","activeresource::base","rails::generators::activemodel","rails::generators::appbase","activesupport::cache::memcachestore","rails::application","rails::generators::appbase","rails::generators::appbase","actionview::helpers::formbuilder","actionview::helpers::formtaghelper","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actioncontroller::caching","actionview::helpers::cachehelper","activerecord::connectionadapters::querycache","activerecord::querycache::classmethods","rails","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::read::classmethods","activerecord::fixtures","activerecord::fixtures","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","actioncontroller::caching::configmethods","actioncontroller::caching::configmethods","actionview::base","actionview::base","activerecord::attributemethods::read::classmethods","activerecord::fixtures","actioncontroller::caching::actions::classmethods","actioncontroller::caching::pages::classmethods","actioncontroller::caching","actiondispatch::remoteip::getip","actioncontroller::metal","actioncontroller::middleware::actionmiddleware","actioncontroller::responder","actiondispatch::beststandardssupport","actiondispatch::callbacks","actiondispatch::cookies","actiondispatch::debugexceptions","actiondispatch::filehandler","actiondispatch::flash","actiondispatch::head","actiondispatch::paramsparser","actiondispatch::publicexceptions","actiondispatch::reloader","actiondispatch::remoteip","actiondispatch::requestid","actiondispatch::rescue","actiondispatch::showexceptions","actiondispatch::static","actionview::template::handlers::builder","actionview::template::handlers::erb","actionview::template::handlers::erb","activerecord::connectionadapters::connectionmanagement","activerecord::querycache","activesupport::logsubscriber","i18n::exceptionhandler","logger::simpleformatter","rails::application","rails::engine","rails::rack::debugger","rails::rack::logtailer","rails::rack::logger","rails::rack::logger","string","activesupport::inflector","string","rails::generators::appgenerator","rails::generators::pluginnewgenerator","rails::generators::actions","activesupport::multibyte::chars","actionview::helpers::capturehelper","kernel","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::taghelper","activesupport::multibyte::chars","activerecord::connectionadapters::table","datetime","time","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::table","activerecord::connectionadapters::schemastatements","activemodel::dirty","activemodel::dirty","activemodel::dirty","activemodel::dirty","activesupport::xmlmini_nokogirisax::hashbuilder","activerecord::connectionadapters::abstractmysqladapter","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::generators::namedbase","activemodel::eachvalidator","activemodel::validations::exclusionvalidator","activemodel::validations::formatvalidator","activemodel::validations::inclusionvalidator","activemodel::validations::lengthvalidator","activemodel::validations::numericalityvalidator","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","rails::paths::path","datetime","kernel","rails::generators::namedbase","activerecord::inheritance::classmethods","rails::generators::namedbase","activesupport::inflector","string","activesupport::backtracecleaner","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::nullstore","activesupport::cache::store","actiondispatch::reloader","actiondispatch::flash::flashhash","activemodel::errors","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::nullstore","activesupport::cache::store","activesupport::cache::strategy::localcache::localstore","activesupport::descendantstracker","activesupport::inflector::inflections","activesupport::orderedhash","activerecord::connectionadapters::schemacache","activesupport::dependencies::classcache","abstractcontroller::base","activerecord::base","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionhandler","actionview::resolver","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","abstractcontroller::helpers::classmethods","activerecord::connectionadapters::querycache","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionpool","actioncontroller::mimeresponds::classmethods","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::schemacache","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activeresource::base","activesupport::safebuffer","actiondispatch::bodyproxy","actiondispatch::response","activerecord::connectionadapters::abstractadapter","activesupport::bufferedlogger","activesupport::gzip::stream","actiondispatch::bodyproxy","actiondispatch::response","activerecord::connectionadapters::abstractmysqladapter","actiondispatch::routing::mapper::resources","activeresource::base","activeresource::base","activeresource::base","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","activesupport::logsubscriber","rails::application::configuration","rails::application::configuration","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::modelschema::classmethods","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activerecord::connectionadapters::databaselimits","activerecord::modelschema::classmethods","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::modelschema::classmethods","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::connectionpool","activerecord::modelschema::classmethods","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::databaselimits","rails::generators::appbase","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databasestatements","activesupport::timewithzone","time","time","activesupport::configurable::configuration","activesupport::configurable::configuration","rails::application::configuration","activesupport::multibyte::chars","activesupport::multibyte::unicode","activerecord::aggregations::classmethods","activesupport::gzip","activesupport::cache::entry","rails::rack::logger","activerecord::inheritance::classmethods","actionview::helpers::texthelper","activesupport::safebuffer","abstractcontroller::layouts","abstractcontroller::layouts::classmethods::layoutconditions","actionview::testcase::behavior","activesupport::configurable","activesupport::configurable::classmethods","rails::appbuilder","rails::engine","rails::plugin","rails::pluginbuilder","rails::railtie","activesupport::configurable::classmethods","rails::appbuilder","rails","activerecord::base","activesupport::configurable::classmethods","rails::railtie::configurable::classmethods","activerecord::base","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionpool","activerecord::base","activerecord::base","activerecord::connectionadapters::connectionpool","activerecord::migration","activeresource::base","activeresource::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","rails::infocontroller","rails::railtie","activesupport::inflector","string","actiondispatch::routing::mapper::scoping","activesupport::multibyte::chars","activerecord::modelschema::classmethods","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actiondispatch::request","actiondispatch::http::mimenegotiation","actionview::helpers::taghelper","actionview::helpers::recordtaghelper","actioncontroller::metal","actiondispatch::http::mimenegotiation","actioncontroller::metal","actiondispatch::routing::mapper::scoping","rails::consolemethods","actioncontroller::testcase::behavior::classmethods","actioncontroller::testcase::behavior::classmethods","rails::generators::resourcehelpers","rails::generators::resourcehelpers","rails::generators::resourcehelpers","rails::generators::resourcehelpers","rails::generators::resourcehelpers","actioncontroller::metal","actioncontroller::metal","abstractcontroller::base","abstractcontroller::base","actionmailer::base","actionview::testcase::testcontroller","rails::generators::appbase","activesupport::hashwithindifferentaccess","actionview::helpers::formhelper","activesupport::hashwithindifferentaccess","actiondispatch::request","actiondispatch::integration::session","actiondispatch::response","actiondispatch::testprocess","actiondispatch::testrequest","activerecord::migration","js::generators::assetsgenerator","css::generators::assetsgenerator","css::generators::scaffoldgenerator","erb::generators::controllergenerator","erb::generators::scaffoldgenerator","activemodel::errors","activerecord::querying","activemodel::observing::classmethods","activerecord::connectionadapters::mysql2adapter","activerecord::persistence::classmethods","activeresource::base","activeresource::base","activesupport::cache::entry","activesupport::timezone","activerecord::validations::classmethods","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::pluginnewgenerator","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::pluginnewgenerator","rails::generators::controllergenerator","rails::generators::scaffoldcontrollergenerator","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::pluginnewgenerator","testunit::generators::modelgenerator","activerecord::fixtures","object","rails::generators::testcase","rails::generators::generatorgenerator","rails::generators::helpergenerator","testunit::generators::helpergenerator","rails::generators::pluginnewgenerator","rails::generators::pluginnewgenerator","rails::generators::appgenerator","rails::generators::pluginnewgenerator","rails::generators::appgenerator","activesupport::testing::performance::profiler","rails::generators::appgenerator","rails::generators::pluginnewgenerator","rails::generators::appbase","rails::generators::appgenerator","rails::generators::pluginnewgenerator","erb::generators::scaffoldgenerator","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","rails::generators::appgenerator","rails::generators::pluginnewgenerator","activerecord::connectionadapters::schemastatements","rails::generators::taskgenerator","rails::generators::pluginnewgenerator","testunit::generators::modelgenerator","rails::generators::appgenerator","rails::generators::pluginnewgenerator","testunit::generators::controllergenerator","testunit::generators::integrationgenerator","testunit::generators::mailergenerator","testunit::generators::observergenerator","testunit::generators::performancegenerator","testunit::generators::plugingenerator","testunit::generators::scaffoldgenerator","rails::generators::appgenerator","rails::generators::appgenerator","activerecord::dynamicfindermatch","actionview::helpers::csrfhelper","actionview::helpers::csrfhelper","actiondispatch::assertions::selectorassertions","datetime","time","actionview::helpers::texthelper","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::urlhelper","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activesupport::taggedlogging","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actionview::helpers::assettaghelper::stylesheetincludetag","activeresource::custommethods::classmethods","actionview::helpers::texthelper","process","activerecord::attributemethods::primarykey::classmethods","activesupport::inflector","string","rails::application::configuration","rails::generators::appbase","rails::appbuilder","actionview::helpers::datehelper","actionview::helpers::formbuilder","actionview::helpers::datehelper","actionview::helpers::formbuilder","time","time","rails::appbuilder","actionview::helpers::debughelper","activemodel::massassignmentsecurity::sanitizer","kernel","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::json","activesupport::base64","base64","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::digest","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::gzip","activesupport::inflector","string","activerecord::persistence","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::nullstore","activesupport::cache::store","activerecord::persistence","activerecord::countercache","activerecord::connectionadapters::abstractadapter","activesupport::messageencryptor","activesupport::messageencryptor","hash","hash","hash","actiondispatch::request","actionmailer::base","activesupport::hashwithindifferentaccess","rails::generators::generatedattribute","railsenvironment","railsenvironment","actioncontroller::responder","rails::generators::base","actioncontroller::compatibility","rails::generators::base","rails::generators::base","datetime","rails::application","rails::engine","rails::server","activerecord::connectionadapters::sqliteadapter","actioncontroller::implicitrender","actioncontroller::responder","activerecord::scoping::default::classmethods","activerecord::connectionadapters::databasestatements","rails::generators::base","activerecord::base","actiondispatch::integration::runner","actiondispatch::routing::mapper::base","actiondispatch::integration::runner","actiondispatch::routing::mapper::base","rails::generators::base","actiondispatch::routing::mapper::scoping","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activesupport::classmethods","activerecord::attributemethods::deprecatedunderscoreread::classmethods","activerecord::attributemethods::primarykey::classmethods","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::timezoneconversion::classmethods","activerecord::attributemethods::write::classmethods","activemodel::callbacks","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::appgenerator","module","actioncontroller::testcase::behavior","actiondispatch::flash::flashhash","actiondispatch::integration::requesthelpers","actiondispatch::middlewarestack","actiondispatch::routing::mapper::httphelpers","activemodel::errors","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::persistence","activeresource::base","activeresource::connection","activeresource::custommethods","activeresource::custommethods","activesupport::cache::store","activesupport::hashwithindifferentaccess","activesupport::orderedhash","actiondispatch::request","actiondispatch::response","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","activesupport::orderedhash","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::nullstore","activesupport::cache::store","activeresource::httpmock","activerecord::connectionadapters::databasestatements","actiondispatch::integration::requesthelpers","activesupport::inflector","string","activemodel::massassignmentsecurity::blacklist","activemodel::massassignmentsecurity::permissionset","activemodel::massassignmentsecurity::whitelist","module","activesupport::deprecation","rails::generators::base","rails::subtesttask","activesupport::descendantstracker","activesupport::descendantstracker","activerecord::inheritance::classmethods","activesupport::testing::declarative","rails::generators::testcase","actiondispatch::session::destroyablesession","activerecord::persistence","activeresource::base","rails::generators::activemodel","actiondispatch::session::cachestore","activerecord::persistence","actionview::lookupcontext::viewpaths","abstractcontroller::viewpaths","actioncontroller::testcase::behavior::classmethods","actionview::testcase::behavior::classmethods","rails::commands::install","hash","activesupport::descendantstracker","activesupport::descendantstracker","activesupport::multibyte::unicode::unicodedatabase","activerecord::connectionadapters::querycache","activemodel::observerarray","actionview::lookupcontext::detailscache","activerecord::connectionadapters::querycache","activerecord::connectionadapters::abstractadapter","activemodel::observer","activemodel::observerarray","activemodel::observerarray","activemodel::observerarray","actiondispatch::flash::flashhash","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::rackdelegation","actioncontroller::responder","sourceannotationextractor","actioncontroller::responder","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::schemastatements","actionview::helpers::recordtaghelper","rails::appbuilder","actioncontroller::recordidentifier","actioncontroller::recordidentifier","actiondispatch::http::url","activerecord::migration","activesupport::multibyte::chars","recursivehttpfetcher","activerecord::connectionadapters::schemastatements","activesupport::timewithzone","rails::generators::pluginnewgenerator","activeresource::base","activesupport::hashwithindifferentaccess","bigdecimal","falseclass","module","nilclass","object","symbol","trueclass","actiondispatch::flash::flashhash","actiondispatch::middlewarestack","activemodel::errors","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::fixtures","activerecord::fixtures::file","activerecord::result","activesupport::dependencies::watchstack","activesupport::orderedhash","activesupport::orderedhash","activesupport::orderedhash","activemodel::observerarray","activesupport::orderedhash","enumerable","activesupport::autoload","activesupport::autoload","rails::paths::root","rails::engine","rails::railtie","rails::engine::configuration","activeresource::base","activeresource::base","activeresource::base","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formbuilder","actiondispatch::flash::flashhash","activemodel::errors","activesupport::dependencies::classcache","rails::generators::appbase","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::abstractmysqladapter","activemodel::observerarray","activerecord::connectionadapters::querycache","kernel","activeresource::base","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::json","activesupport::json::encoding::encoder","actionview::template","activesupport::base64","base64","activesupport::base64","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","activesupport::json::variable","falseclass","hash","nilclass","string","trueclass","activerecord::base","activesupport::orderedhash","activesupport::safebuffer","activesupport::timewithzone","bigdecimal","activerecord::connectionadapters::postgresqladapter","rails::application::configuration","string","string","activesupport::messageencryptor","activesupport::messageencryptor","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","datetime","time","datetime","time","time","time","time","time","activemodel::observerarray","rails::engine","rails::engine","activesupport::json","activesupport::json","rails::engine::railties","activerecord::testfixtures","actionview::helpers::atomfeedhelper::atomfeedbuilder","sourceannotationextractor","actioncontroller::metal","rails","rails","rails::application","rails::engine","actiondispatch::http::filterparameters","activesupport::testing::performance::benchmarker","rails::generators::actions","rails::commands::plugin","actionview::filesystemresolver","activerecord::base","activeresource::base","activesupport::timewithzone","time","time","time","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::activemodelinstancetag","activerecord::connectionadapters::mysql2adapter","actionview::helpers::activemodelinstancetag","activemodel::validations","activeresource::validations","rails::generators::activemodel","activesupport::json::encoding::encoder","activerecord::connectionadapters::postgresqladapter","actiondispatch::filehandler","actionview::helpers::javascripthelper","actionview::helpers::taghelper","activerecord::base","activerecord::connectionadapters::connectionhandler","actiondispatch::http::cache::response","actiondispatch::http::cache::request","activerecord::scoping::default::classmethods","hash","hash","actionview::helpers::texthelper","enumerable","string","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","rails::scriptrailsloader","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::postgresqladapter","activesupport::fileupdatechecker","activerecord::connectionadapters::mysqladapter","activesupport::fileupdatechecker","actiondispatch::railsentitystore","activesupport::cache::store","rails::paths::path","rails::paths::path","actionview::lookupcontext::viewpaths","activeresource::base","activeresource::base","rails::generators::appgenerator","activesupport::cache","activerecord::sanitization::classmethods","rails::paths::path","actioncontroller::httpauthentication::digest","activerecord::connectionadapters::abstractadapter","actioncontroller::caching::actions","actioncontroller::caching::fragments","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","activesupport::cache::entry","activesupport::cache::entry","activesupport::cache::entry","actioncontroller::conditionalget","actioncontroller::conditionalget","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actiondispatch::filehandler","activemodel::callbacks","activesupport::concern","activesupport::memoizable","activesupport::testing::declarative","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actionview::helpers::assettaghelper::stylesheetincludetag","activeresource::formats::jsonformat","activeresource::formats::xmlformat","railsenvironment","railsenvironment","rails::generators::actions","hash","sourceannotationextractor","actiondispatch::http::url","array","activerecord::connectionadapters::postgresqladapter::utils","actiondispatch::session::stalesessioncheck","actiondispatch::http::url","actiondispatch::http::url","activesupport::hashwithindifferentaccess","activesupport::orderedhash","hash","rails::generators","actionview::helpers::assettaghelper","activesupport::cache::store","activesupport::hashwithindifferentaccess","recursivehttpfetcher","recursivehttpfetcher","actionview::helpers::formtaghelper","rails::generators::generatedattribute","actionview::helpers::formbuilder","actionview::helpers::formhelper","array","rails::generators::appgenerator","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::generators::namedbase","activesupport::multibyte::unicode::unicodedatabase","actiondispatch::http::parameterfilter","rails::paths::root","actiondispatch::http::filterparameters","activemodel::validations::numericalityvalidator","actiondispatch::http::filterparameters","actiondispatch::http::filterparameters","actiondispatch::http::filterparameters","actionview::lookupcontext::viewpaths","activeresource::base","plugin","rails::engine","rails::generators::activemodel","railsenvironment","sourceannotationextractor","actionview::lookupcontext::viewpaths","actionview::resolver","actiondispatch::assertions::tagassertions","activerecord::querying","rails::dbconsole","sourceannotationextractor","rails::engine","actiondispatch::assertions::tagassertions","actionview::lookupcontext::viewpaths","activesupport::timezone","time","time","activerecord::dynamicfindermatch","rails::generators::appgenerator","rails::generators::pluginnewgenerator","activeresource::base","rails::paths::path","string","string","actiondispatch::testprocess","activerecord::fixtures","activerecord::testfixtures::classmethods","actiondispatch::request","actiondispatch::testprocess","activesupport::bufferedlogger","activesupport::logsubscriber::testhelper::mocklogger","activesupport::taggedlogging","activesupport::logsubscriber","activesupport::memoizable::instancemethods","activesupport::logsubscriber","actiondispatch::integration::requesthelpers","actionview::helpers::assettaghelper","activesupport::testcase","actioncontroller::forcessl::classmethods","activesupport::inflector","string","activesupport::testing::isolation","actioncontroller::requestforgeryprotection","actioncontroller::requestforgeryprotection","actiondispatch::request","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actiondispatch::http::mimenegotiation","activeresource::base","activesupport::testing::performance::metrics::amount","activesupport::testing::performance::metrics::digitalinformationunit","activesupport::testing::performance::metrics::time","erb::generators::mailergenerator","actiondispatch::http::mimenegotiation","activeresource::base","actionmailer::mailhelper","actiondispatch::http::mimenegotiation","activesupport::timewithzone","activesupport::timezone","datetime","time","array","array","actioncontroller::caching::fragments","actioncontroller::caching::fragments","actiondispatch::exceptionwrapper","rails::info","rails::info","activerecord::base","activesupport::timewithzone","activesupport::memoizable::instancemethods","actiondispatch::http::cache::request","actioncontroller::conditionalget","array","string","string","activeresource::errors","activemodel::serializers::json","activeresource::errors","activesupport::duration","actionview::logsubscriber","actiondispatch::testresponse","activemodel::serializers::xml","activeresource::errors","hash","activerecord::base","rails::generators::pluginnewgenerator","activemodel::errors","activemodel::errors","activesupport::testing::performance","activesupport::testing::performance","actiondispatch::exceptionwrapper","actiondispatch::request","activesupport::timewithzone","datetime","time","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::multibyte::unicode","rails::generators::actions","rails::generators::appbase","rails::generators::actions","rails::appbuilder","rails::pluginbuilder","rails::pluginbuilder","activesupport::messageverifier","rails::generators::actions","activemodel::errors","abstractcontroller::collector","rails::railtie","actiondispatch::session::compatibility","rails::pluginbuilder","activerecord::base","rails::generators::testcase","rails::generators::generatorgenerator","rails::generators::base","rails::railtie","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::routing::mapper::httphelpers","activemodel::errors","activeresource::connection","activeresource::custommethods","activeresource::custommethods","activesupport::dependencies::classcache","actiondispatch::request","rails::generators::appgenerator","rails::generators::pluginnewgenerator","actiondispatch::session::cachestore","actiondispatch::integration::requesthelpers","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","datetime","rails::generators::actions","rails::generators::appbase","plugin","rails::appbuilder","rails::pluginbuilder","rails::plugin","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","enumerable","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","rails","erb::util","actioncontroller::httpauthentication::digest","actioncontroller::logsubscriber","actioncontroller::requestforgeryprotection","activesupport::rescuable","actionview::template::handlers::erb","activerecord::associations::classmethods","actioncontroller::responder","rails::generators::generatedattribute","activemodel::errors","activerecord::associations::classmethods","rails::engine","activerecord::associations::classmethods","activemodel::securepassword::classmethods","rails::generators::generatedattribute","activerecord::base","activeresource::base","activesupport::timewithzone","actioncontroller::head","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","activeresource::connection","actiondispatch::request","actiondispatch::request","actionmailer::base","activeresource::base","actioncontroller::testing","rails::generators","abstractcontroller::helpers::classmethods","rails::consolemethods","actioncontroller::helpers::classmethods","actionview::testcase::behavior::classmethods","abstractcontroller::helpers::classmethods","actionview::testcase::behavior::classmethods","actioncontroller::helpers::classmethods","rails::engine","rails::engine","abstractcontroller::base","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::generators","actioncontroller::hideactions::classmethods","rails::generators","actionview::helpers::texthelper","rails::generators::base","actiondispatch::http::url","actiondispatch::integration::session","actiondispatch::testrequest","actiondispatch::http::url","mime::type","actiondispatch::assertions::tagassertions","erb::util","string","activesupport::safebuffer","object","actioncontroller::httpauthentication::basic::controllermethods::classmethods","activesupport::timewithzone","actiondispatch::integration::session","actiondispatch::integration::session","activemodel::name","activesupport::inflector::inflections","activemodel::translation","rails::generators::generatedattribute","rails::generators::namedbase","activesupport::inflector","string","activemodel::translation","rails::generators::namedbase","activerecord::attributemethods::primarykey","activeresource::base","nilclass","activerecord::attributemethods::primarykey","activeresource::base","activerecord::attributemethods::primarykey","activeresource::base","activerecord::fixtures","actiondispatch::http::cache::request","actiondispatch::testrequest","actiondispatch::http::cache::request","actiondispatch::testrequest","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::formtaghelper","actionview::helpers::assettaghelper","datetime","time","object","activesupport::multibyte::unicode","activerecord::connectionadapters::databaselimits","array","array","rails::scriptrailsloader","rails::scriptrailsloader","activesupport::timewithzone","datetime","time","activemodel::errors","activemodel::massassignmentsecurity::permissionset","activesupport::multibyte::chars","test::unit::collector::objectspace","rails::generators::appbase","i18n::railtie","actionview::helpers::assettaghelper::assetincludetag","actioncontroller::testcase::raiseactionexceptions","activerecord::connectionadapters::querycache","activesupport::concern","activesupport::memoizable::instancemethods","activesupport::testing::isolation","rails::initializable","activerecord::persistence","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::nullstore","activesupport::cache::store","activerecord::persistence","activerecord::countercache","activerecord::connectionadapters::abstractadapter","rails::generators::namedbase","actioncontroller::middleware","activerecord::connectionadapters::table","activesupport::multibyte::chars","enumerable","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","rails::generators::namedbase","rails::generators::generatedattribute","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databaselimits","activesupport::inflector","plugin","activesupport::inheritableoptions","activerecord::modelschema::classmethods","activerecord::modelschema::classmethods","abstractcontroller::helpers::classmethods","abstractcontroller::layouts::classmethods","actioncontroller::hideactions::classmethods","actioncontroller::paramswrapper::classmethods","actionview::helpers::assettaghelper::assetincludetag","activemodel::observing::classmethods","activemodel::validations::classmethods","activesupport::descendantstracker","rails::application","rails::engine","rails::plugin","rails::railtie","rails::railtie::configurable::classmethods","i18n::railtie","activerecord::base","rails","actiondispatch::flash::flashhash","actiondispatch::middlewarestack","activesupport::orderedhash","activesupport::safebuffer","activemodel::errors","activerecord::base","rails::engine","i18n::railtie","activerecord::connectionadapters::schemastatements","actiondispatch::session::compatibility","actioncontroller::compatibility","rails","rails","rails::generators::actions","rails::initializable::classmethods","rails::engine","rails::initializable","rails::initializable::classmethods","rails::initializable::classmethods","rails::initializable::classmethods","rails::generators::generatedattribute","rails::generators::generatedattribute","string","activemodel::massassignmentsecurity::strictsanitizer","actiondispatch::middlewarestack","activerecord::connectionadapters::databasestatements","activesupport::multibyte::chars","actiondispatch::middlewarestack","actiondispatch::middlewarestack","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::postgresqladapter","rails::generators::namedbase","rails::generators::namedbase","actiondispatch::middlewarestack::middleware","actionview::template","activerecord::base","activerecord::base","activesupport::orderedhash","activesupport::timewithzone","datetime","plugin","railsenvironment","plugin","activesupport::inflector::inflections","rails::railtie::configurable::classmethods","activemodel::attributemethods::classmethods","module","object","activerecord::inheritance::classmethods","activerecord::fixtures","activerecord::fixtures","activemodel::observing::classmethods","activerecord::dynamicfindermatch","activesupport::cache::store","activesupport::notifications","activesupport::notifications::instrumenter","activesupport::cache::store","actioncontroller::caching::fragments","activesupport::notifications","abstractcontroller::base","activemodel::validations","activerecord::migration::commandrecorder","activesupport::orderedhash","rails::generators","actiondispatch::request","actiondispatch::remoteip::getip","activesupport::inflector::inflections","activesupport::timewithzone","loaderror","string","string","activesupport::timewithzone","activesupport::timewithzone","rails::engine","actionview::helpers::javascripthelper","erb::util","rails::generators::appbase","actionview::helpers::assettaghelper::javascripttaghelpers","actionview::helpers::assettaghelper::javascripttaghelpers","rails::generators::appbase","actionview::helpers::javascripthelper","rails::pluginbuilder","activerecord::connectionadapters::databaselimits","erb::util","actioncontroller::responder","actiondispatch::flash::flashhash","actiondispatch::flash::flashhash","actiondispatch::request","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activesupport::dependencies::classcache","activesupport::hashwithindifferentaccess","activesupport::cache::store","rails::generators::appbase","rails::generators::namedbase","actiondispatch::flash::flashhash","activemodel::errors","activesupport::orderedhash","activemodel::validator","activemodel::validator","activesupport::timewithzone","actiondispatch::middlewarestack::middleware","activeresource::base","activeresource::base","abstractcontroller::translation","actionview::helpers::translationhelper","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actiondispatch::middlewarestack","activeresource::base","rails::paths::path","string","string","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::sqliteadapter","actiondispatch::http::cache::response","actiondispatch::http::cache::response","actiondispatch::http::cache::response","abstractcontroller::layouts::classmethods","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activesupport::bufferedlogger","activesupport::bufferedlogger","rails::appbuilder","rails::generators::actions","rails::pluginbuilder","rails::pluginbuilder","activesupport::multibyte::chars","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::databasestatements","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","recursivehttpfetcher","activesupport::notifications::fanout","activesupport::notifications::fanout","activesupport::multibyte::chars","activeresource::base","activesupport::multibyte::unicode::unicodedatabase","activeresource::base","rails::application","rails::engine","rails::railtie","rails::engine","rails::railtie","rails::paths::root","rails::engine","actiondispatch::session::stalesessioncheck","rails::application","rails::engine","rails::railtie","activesupport::timezone","actiondispatch::request","module","module","datetime","time","activesupport::timezone","abstractcontroller::translation","actionview::helpers::translationhelper","actionview::testcase::behavior","activesupport::timewithzone","actioncontroller::metal","actiondispatch::response","actioncontroller::metal","actiondispatch::response","activerecord::connectionadapters::abstractadapter","rails::appbuilder","rails::generators::actions","rails::application::configuration","rails::server","activesupport::logsubscriber","activesupport::logsubscriber::testhelper::mocklogger","actioncontroller::logsubscriber","actionview::logsubscriber","activerecord::base","activeresource::base","activeresource::logsubscriber","activesupport::logsubscriber","rails","rails","activemodel::massassignmentsecurity::loggersanitizer","mime::type","activemodel::translation","mime::type","abstractcontroller::viewpaths","activesupport::cache","recursivehttpfetcher","activesupport::multibyte::chars","actionmailer::base","actionview::helpers::urlhelper","actionmailer::mailhelper","actionmailer::base","actionmailer::base","enumerable","activesupport::timewithzone","activesupport::timewithzone","activemodel::massassignmentsecurity","activerecord::attributeassignment","activerecord::attributeassignment","activemodel::massassignmentsecurity::classmethods","actiondispatch::routing::mapper::base","actiondispatch::routing::mapper::resources","activemodel::attributemethods::classmethods::attributemethodmatcher","activerecord::dynamicfindermatch","actiondispatch::filehandler","module","module","module","string","string","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::processtime","activesupport::testing::performance::metrics::time","activesupport::testing::performance::metrics::usertime","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::base","actiondispatch::request","actiondispatch::routing::mapper::resources","activesupport::memoizable","activesupport::memoizable::instancemethods","activesupport::memoizable","activesupport::hashwithindifferentaccess","activesupport::orderedhash","activesupport::orderedhash","actiondispatch::response","actionmailer::mailhelper","activerecord::staleobjecterror","activerecord::unknownprimarykey","actiondispatch::request","abstractcontroller::base","actioncontroller::compatibility","actioncontroller::implicitrender","abstractcontroller::collector","actiondispatch::assertions::routingassertions","actiondispatch::bodyproxy","actiondispatch::integration::runner","activemodel::attributemethods","activerecord::migration","activesupport::logsubscriber::testhelper::mocklogger","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::stringinquirer","activesupport::taggedlogging","activesupport::testing::proxytestresult","activesupport::timewithzone","rails::railtie::configurable::classmethods","activemodel::attributemethods::classmethods::attributemethodmatcher","module","actiondispatch::request","actioncontroller::metal","activesupport::cache::strategy::localcache","rails::engine::configuration","rails::server","datetime","time","activerecord::migration","activerecord::migration","rails::generators::migration","actionview::template","activeresource::formats::jsonformat","activeresource::formats::xmlformat","time","time","time","nameerror","nameerror","activemodel::naming","rails::generators::namedbase","abstractcontroller::helpers::classmethods","actioncontroller::helpers::classmethods","time","integer","integer","time","time","actiondispatch::routing::mapper::base","rails::generators::pluginnewgenerator","actionview::helpers::formbuilder","integer","activesupport::cache::store","rails::generators::pluginnewgenerator","activerecord::base","rails::generators::appgenerator","activesupport::testing::performance::metrics::base","activesupport::timewithzone","rails::generators::pluginnewgenerator","qualifiedconstutils","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::scoping","rails::generators::base","rails::generators::namedbase","rails::generators::namedbase","rails::generators::namedbase","rails::generators::namedbase","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::schemastatements","actioncontroller::responder","actioncontroller::responder","actiondispatch::http::mimenegotiation","actiondispatch::routing::mapper::resources","activesupport::hashwithindifferentaccess","activesupport::orderedhash","hash","abstractcontroller::doublerendererror","abstractcontroller::layouts","actioncontroller::caching::actions::actioncachepath","actioncontroller::metal","actioncontroller::middleware","actioncontroller::middleware","actioncontroller::middleware::actionmiddleware","actioncontroller::responder","actiondispatch::beststandardssupport","actiondispatch::bodyproxy","actiondispatch::callbacks","actiondispatch::cookies","actiondispatch::debugexceptions","actiondispatch::exceptionwrapper","actiondispatch::filehandler","actiondispatch::flash","actiondispatch::head","actiondispatch::http::headers","actiondispatch::http::parameterfilter","actiondispatch::http::uploadedfile","actiondispatch::integration::session","actiondispatch::middlewarestack","actiondispatch::middlewarestack::middleware","actiondispatch::paramsparser","actiondispatch::publicexceptions","actiondispatch::railsentitystore","actiondispatch::railsmetastore","actiondispatch::reloader","actiondispatch::remoteip","actiondispatch::remoteip::getip","actiondispatch::requestid","actiondispatch::rescue","actiondispatch::response","actiondispatch::routing::mapper::resources","actiondispatch::routing::urlfor","actiondispatch::session::cachestore","actiondispatch::session::compatibility","actiondispatch::session::memcachestore","actiondispatch::showexceptions","actiondispatch::static","actiondispatch::testrequest","actiondispatch::testrequest","actionmailer::base","actionview::filesystemresolver","actionview::fixtureresolver","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::atomfeedhelper::atombuilder","actionview::helpers::atomfeedhelper::atomfeedbuilder","actionview::helpers::formbuilder","actionview::helpers::numberhelper::invalidnumbererror","actionview::partialrenderer","actionview::renderer","actionview::resolver","actionview::resolver::path","actionview::template","actionview::testcase::behavior::classmethods","actionview::testcase::testcontroller","activemodel::attributemethods::classmethods::attributemethodmatcher","activemodel::blockvalidator","activemodel::eachvalidator","activemodel::errors","activemodel::massassignmentsecurity::loggersanitizer","activemodel::massassignmentsecurity::sanitizer","activemodel::name","activemodel::observer","activemodel::observerarray","activemodel::validations::acceptancevalidator","activemodel::validations::lengthvalidator","activemodel::validator","activerecord::attributeassignmenterror","activerecord::base","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionmanagement","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::sqliteadapter::version","activerecord::connectionadapters::schemacache","activerecord::connectionadapters::statementpool","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::dynamicfindermatch","activerecord::fixtures","activerecord::fixtures::file","activerecord::migration","activerecord::migration::commandrecorder","activerecord::migrationproxy","activerecord::multiparameterassignmenterrors","activerecord::querycache","activerecord::recordinvalid","activerecord::result","activerecord::staleobjecterror","activerecord::unknownprimarykey","activerecord::validations::uniquenessvalidator","activerecord::wrappeddatabaseexception","activeresource::base","activeresource::connection","activeresource::request","activeresource::response","activeresource::sslerror","activeresource::timeouterror","activesupport::backtracecleaner","activesupport::bufferedlogger","activesupport::cache::entry","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::nullstore","activesupport::cache::store","activesupport::cache::strategy::localcache::localstore","activesupport::dependencies::classcache","activesupport::dependencies::watchstack","activesupport::fileupdatechecker","activesupport::filewatcher","activesupport::filewatcher::backend","activesupport::gzip::stream","activesupport::hashwithindifferentaccess","activesupport::inflector::inflections","activesupport::inheritableoptions","activesupport::json::encoding::encoder","activesupport::json::variable","activesupport::logsubscriber::testhelper::mocklogger","activesupport::messageencryptor","activesupport::messageverifier","activesupport::multibyte::chars","activesupport::multibyte::unicode::unicodedatabase","activesupport::notifications::event","activesupport::notifications::fanout","activesupport::notifications::instrumenter","activesupport::orderedhash","activesupport::safebuffer","activesupport::safebuffer::safeconcaterror","activesupport::taggedlogging","activesupport::testing::performance::benchmarker","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::proxytestresult","activesupport::testing::remoteerror","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","arjdbcmysql::error","mime::type","plugin","rails::actionmethods","rails::application","rails::application::configuration","rails::application::routesreloader","rails::backtracecleaner","rails::commands::info","rails::commands::install","rails::commands::plugin","rails::commands::remove","rails::console","rails::dbconsole","rails::engine::configuration","rails::engine::railties","rails::generators::activemodel","rails::generators::appbase","rails::generators::appgenerator","rails::generators::generatedattribute","rails::generators::pluginnewgenerator","rails::initializable::initializer","rails::paths::path","rails::paths::root","rails::plugin","rails::rack::debugger","rails::rack::logtailer","rails::rack::logger","rails::railtie::configuration","rails::server","railsenvironment","recursivehttpfetcher","sourceannotationextractor","activeresource::base","activesupport::dependencies::watchstack","activeresource::base","activeresource::base","activesupport::hashwithindifferentaccess","activerecord::persistence","activeresource::base","rails::consolemethods","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::migration","time","time","time","rails::generators","actioncontroller::httpauthentication::digest","activesupport::multibyte::chars","activesupport::multibyte::unicode","actiondispatch::routing::mapper","actiondispatch::routing::mapper","actiondispatch::http::cache::request","actiondispatch::flash::flashhash","actiondispatch::flash::flashhash","activemodel::observing::classmethods","actiondispatch::flash::flashhash","activesupport::timezone","actiondispatch::flash::flashhash","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::activemodelinstancetag","activemodel::observer","activemodel::observer","activemodel::observer","activemodel::observerarray","activemodel::observing::classmethods","activemodel::observing::classmethods","activemodel::observing::classmethods","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","actioncontroller::httpauthentication::digest","actiondispatch::railsentitystore","activerecord::fixtures::file","activesupport::bufferedlogger","actiondispatch::integration::runner","rails::server","actionview::helpers::formoptionshelper","actiondispatch::http::url","object","object","rails::commands::info","rails::commands::install","rails::commands::plugin","rails::commands::remove","activesupport::json::encoding::encoder","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activerecord::connectionadapters::schemastatements","activesupport::multibyte::chars","string","rails::engine","activesupport::inflector","integer","activeresource::custommethods","activesupport::safebuffer","actiondispatch::request","rails::generators::pluginnewgenerator","actiondispatch::request","rails::generators::resourcehelpers","rails::generators::resourcehelpers","activesupport::testing::performance::benchmarker","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activemodel::naming","actiondispatch::http::filterparameters","actiondispatch::http::filterparameters","activesupport::inflector","string","actiondispatch::http::parameters","actioncontroller::testcase::behavior","actioncontroller::metal","actiondispatch::http::parameters","actioncontroller::metal","module","module","activesupport::notifications::event","abstractcontroller::viewpaths::classmethods","module","activesupport::timezone","activesupport::xmlmini_libxmlsax","activesupport::xmlmini_nokogirisax","mime::type","rails::generators::generatedattribute","rails::commands::info","rails::commands::install","rails::commands::plugin","rails::commands::plugin","rails::commands::remove","rails::server::options","mime::type","activesupport::json","actiondispatch::request","activemodel::validations::numericalityvalidator","activemodel::validations::numericalityvalidator","uri","activeresource::base","activemodel::securepassword::instancemethodsonactivation","activeresource::base","activeresource::connection","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activesupport::timewithzone","datetime","time","loaderror","actiondispatch::testrequest","actiondispatch::http::parameters","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper::javascripttaghelpers","actionview::helpers::assettaghelper::stylesheettaghelpers","actionview::helpers::assettaghelper","rails::application::configuration","rails::engine::configuration","activesupport::testing::pending","activerecord::validations","actioncontroller::metal","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","activerecord::persistence","activeresource::base","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activerecord::connectionadapters::abstractmysqladapter","activemodel::attributemethods::classmethods::attributemethodmatcher","rails::generators::actions","rails::engine::railties","activemodel::naming","activesupport::inflector::inflections","rails::generators::namedbase","rails::generators::namedbase","rails::generators::namedbase","actionview::helpers::texthelper","activesupport::inflector","string","rails::generators::namedbase","actiondispatch::routing::polymorphicroutes","actiondispatch::routing::polymorphicroutes","recursivehttpfetcher","actiondispatch::http::url","actiondispatch::testrequest","actiondispatch::http::url","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::routing::mapper::httphelpers","activeresource::connection","activeresource::custommethods","activeresource::custommethods","actiondispatch::request","actiondispatch::integration::requesthelpers","activerecord::connectionadapters::postgresqladapter","float","activerecord::connectionadapters::abstractadapter","activeresource::base","activeresource::base","activeresource::base","actiondispatch::reloader","actiondispatch::response","actioncontroller::testcase::behavior::classmethods","rails::generators::testcase","abstractcontroller::callbacks::classmethods","abstractcontroller::callbacks::classmethods","abstractcontroller::callbacks::classmethods","abstractcontroller::viewpaths","abstractcontroller::viewpaths::classmethods","object","object","time","time","time","activemodel::dirty","activerecord::attributemethods::primarykey::classmethods","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::tabledefinition","activeresource::base","activerecord::attributemethods::primarykey::classmethods","activerecord::connectionadapters::connectionpool","activesupport::memoizable::instancemethods","abstractcontroller::base","actioncontroller::middleware","actioncontroller::templateassertions","actioncontroller::testcase::behavior","abstractcontroller::callbacks","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::paramswrapper","activemodel::massassignmentsecurity::loggersanitizer","activemodel::massassignmentsecurity::sanitizer","activemodel::massassignmentsecurity::strictsanitizer","actionview::base","actioncontroller::testing","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","rails::infocontroller","rails::info","actioncontroller::requestforgeryprotection","actioncontroller::requestforgeryprotection::classmethods","activemodel::massassignmentsecurity::classmethods","actiondispatch::http::url","actionview::helpers::capturehelper","activeresource::base","activeresource::base","activeresource::connection","activesupport::cache::memorystore","activesupport::cache::memorystore","rails::appbuilder","rails","activesupport::notifications","activesupport::notifications::fanout","recursivehttpfetcher","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::routing::mapper::httphelpers","activeresource::connection","activeresource::custommethods","activeresource::custommethods","actiondispatch::request","actiondispatch::integration::requesthelpers","module","module","module","module","actionview::nullresolver","activerecord::attributemethods::query","actiondispatch::request","kernel","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::quoting","activerecord::connectionadapters::quoting","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::quoting","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::quoting","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::quoting","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::quoting","activerecord::attributemethods::primarykey::classmethods","activerecord::modelschema::classmethods","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::quoting","actiondispatch::testrequest","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::generators::appbase","rails::plugin","rails::railtie","rails::railtie","rails::engine","rails::engine::railties","qualifiedconstutils","rails::generators::actions","rails::railtie","rails::appbuilder","rails::generators::actions","rails::pluginbuilder","rails::generators::pluginnewgenerator","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::outputsafetyhelper","activerecord::connectionadapters::abstractadapter","actiondispatch::http::url","actiondispatch::request","activesupport::cache::entry","activerecord::attributemethods::write","actiondispatch::http::uploadedfile","actiondispatch::railsentitystore","actiondispatch::railsmetastore","activesupport::cache::store","activerecord::attributemethods::read","activerecord::attributemethods::beforetypecast","activerecord::attributemethods::serialization","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","actioncontroller::caching::fragments","activesupport::cache::memcachestore","activesupport::cache::store","datetime","rails::appbuilder","rails::generators::actions","rails::pluginbuilder","activerecord::base","activerecord::base","actionmailer::base","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::migration::commandrecorder","activesupport::testing::performance::benchmarker","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","actioncontroller::recordidentifier","activerecord::connectionadapters::abstractmysqladapter","actioncontroller::testresponse","actioncontroller::testing","module","actiondispatch::routing::redirection","actioncontroller::flash","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::redirecting","actiondispatch::testprocess","actiondispatch::response","mime::type","rails::generators::generatedattribute","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","actionview::template","mime::type","mime::type","actionmailer::base","actionmailer::base","actionview::helpers::assettaghelper::javascripttaghelpers::classmethods","actionmailer::base","actionmailer::base","actionview::helpers::assettaghelper::stylesheettaghelpers::classmethods","rails::generators::namedbase","activesupport::hashwithindifferentaccess","activesupport::orderedhash","activesupport::orderedhash","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::persistence","activeresource::base","rails::application::routesreloader","rails::consolemethods","rails::application","rails::application","i18n::railtie","i18n::railtie","actiondispatch::testrequest","actiondispatch::request","activerecord::connectionadapters::table","activerecord::connectionadapters::table","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::connectionadapters::connectionhandler","activesupport::backtracecleaner","rails::generators::base","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activerecord::connectionadapters::abstractmysqladapter","activemodel::massassignmentsecurity::permissionset","module","activerecord::connectionadapters::table","activeresource::formats","activesupport::backtracecleaner","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::table","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activesupport::xmlmini","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::schemastatements","abstractcontroller::rendering","actioncontroller::instrumentation","actionview::helpers::renderinghelper","actionview::partialrenderer","actionview::renderer","actionview::template","actionview::testcase::behavior","actionview::testcase::behavior::locals","actionview::renderer","actionview::logsubscriber","actionview::partialrenderer","actionview::logsubscriber","actionview::partialrenderer","actionview::logsubscriber","abstractcontroller::rendering","actioncontroller::compatibility","actioncontroller::renderers","abstractcontroller::rendering","actioncontroller::rendering","activesupport::multibyte::unicode","activesupport::orderedhash","activesupport::testing::performance::performer","activeresource::logsubscriber","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","actiondispatch::request","actiondispatch::testrequest","actiondispatch::request","actiondispatch::request","actiondispatch::testrequest","actiondispatch::integration::requesthelpers","activeresource::connection","activeresource::httpmock","actionview::template::handlers::builder","activerecord::testfixtures::classmethods","activesupport::timezone","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::compatibility","actioncontroller::testcase::raiseactionexceptions","actiondispatch::rescue","activesupport::rescuable::classmethods","actiondispatch::showexceptions","actiondispatch::exceptionwrapper","actiondispatch::showexceptions","actioncontroller::rescue","activesupport::rescuable","actiondispatch::integration::runner","actiondispatch::integration::session","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activeresource::httpmock","activerecord::fixtures","activesupport::classmethods","activerecord::modelschema::classmethods","activerecord::countercache","actionview::helpers::texthelper","activerecord::connectionadapters::databasestatements","actioncontroller::rackdelegation","actiondispatch::request","actiondispatch::railsentitystore","actiondispatch::railsmetastore","actiondispatch::routing::mapper::resources","actioncontroller::responder","actioncontroller::responder","actioncontroller::responder","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","actioncontroller::responder","actioncontroller::mimeresponds","actioncontroller::mimeresponds::classmethods","activeresource::httpmock","actiondispatch::bodyproxy","actiondispatch::integration::runner","actiondispatch::response","activemodel::attributemethods","activerecord::dynamicmatchers","activeresource::base","activesupport::bufferedlogger","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::timewithzone","rails::railtie::configurable::classmethods","rails::railtie::configuration","activemodel::attributemethods","activeresource::base","actioncontroller::mimeresponds","actioncontroller::metal","actioncontroller::rackdelegation","actiondispatch::response","actiondispatch::assertions::selectorassertions","actioncontroller::responder","activeresource::httpmock","activerecord::base","activerecord::connectionadapters::connectionhandler","activesupport::multibyte::chars","activesupport::hashwithindifferentaccess","hash","activesupport::hashwithindifferentaccess","hash","hash","activerecord::migration","activerecord::migration","activesupport::timewithzone","activesupport::timewithzone","activesupport::multibyte::chars","activesupport::multibyte::chars","activerecord::transactions","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::databasestatements","actiondispatch::routing::mapper::base","actiondispatch::routing::mapper::resources","rails","rails::engine::configuration","float","rails::generators::actions","activemodel::naming","rails::generators::namedbase","rails::engine","rails::engine","rails::engine","activesupport::multibyte::chars","rails::generators::appbase","activesupport::testing::isolation::minitest","activesupport::testing::isolation::testunit","activesupport::testing::performance::benchmarker","activesupport::testing::performance::forclassictestunit","activesupport::testing::performance::forminitest","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::setupandteardown::forclassictestunit","activesupport::testing::setupandteardown::forminitest","rails::initializable::initializer","rails::generators::appbase","activesupport::callbacks","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","rails::generators::testcase","activesupport::testing::isolation::forking","activesupport::testing::isolation::subprocess","activerecord::testfixtures","rails::initializable","activesupport::testing::performance","activesupport::testing::performance::forclassictestunit","activesupport::testing::performance::forminitest","activemodel::validations","activemodel::validations::callbacks","activesupport::testing::performance","actionview::helpers::texthelper","activesupport::safebuffer","activesupport::inflector","string","activesupport::dependencies::classcache","actionview::helpers::outputsafetyhelper","array","actionview::helpers::sanitizehelper","activemodel::massassignmentsecurity::sanitizer","activerecord::sanitization::classmethods","actionview::helpers::sanitizehelper","actioncontroller::recordidentifier","activemodel::massassignmentsecurity","activerecord::connectionadapters::databasestatements","activerecord::sanitization::classmethods","activerecord::sanitization::classmethods","activerecord::sanitization::classmethods","activerecord::sanitization::classmethods","activerecord::sanitization::classmethods","activerecord::sanitization::classmethods","activerecord::sanitization::classmethods","activerecord::persistence","activerecord::validations","activeresource::base","rails::generators::activemodel","activerecord::persistence","activerecord::validations","activeresource::base","activerecord::dynamicfindermatch","activerecord::dynamicfindermatch","activeresource::validations","activerecord::migration","activerecord::migration","activeresource::base","activeresource::base","activeresource::base","activerecord::connectionadapters::postgresqladapter","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","actiondispatch::routing::mapper::scoping","activerecord::scoping::named::classmethods","activerecord::scoping::named::classmethods","rails::appbuilder","rails::pluginbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","array","datetime","time","activesupport::timezone","actioncontroller::httpauthentication::digest","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::querycache","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actionview::helpers::datehelper","actionview::helpers::formtaghelper","actionview::helpers::datehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","actionview::helpers::datehelper","actioncontroller::implicitrender","actioncontroller::datastreaming","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::datastreaming","actioncontroller::instrumentation","actioncontroller::logsubscriber","activerecord::modelschema::classmethods","activerecord::modelschema::classmethods","activerecord::connectionadapters::postgresqladapter","activemodel::serialization","activerecord::serialization","activerecord::attributemethods::serialization::attribute","activerecord::attributemethods::serialization::classmethods","activerecord::attributemethods::serialization::attribute","actiondispatch::http::url","actiondispatch::request","actiondispatch::testprocess","activerecord::connectionadapters::postgresqladapter","actiondispatch::request","rails::application::configuration","activemodel::errors","activesupport::classmethods","actionmailer::base","actiondispatch::response","rails::generators::appbase","activemodel::observerarray","rails::server","activerecord::testfixtures::classmethods","activesupport::logsubscriber::testhelper","actiondispatch::session::cachestore","activerecord::connectionadapters::postgresqladapter","activemodel::validations::acceptancevalidator","activemodel::validations::confirmationvalidator","activerecord::validations::uniquenessvalidator","activesupport::logsubscriber::testhelper","activesupport::testing::setupandteardown::classmethods","actioncontroller::testcase::behavior","activerecord::testfixtures::classmethods","activerecord::testfixtures","actioncontroller::templateassertions","actionview::testcase::behavior","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","activesupport::orderedhash","actioncontroller::rescue","activerecord::connectionadapters::abstractmysqladapter","activesupport::benchmarkable","activesupport::bufferedlogger","activesupport::deprecation","activesupport::taggedlogging","kernel","activesupport::cache::store","kernel","kernel","activesupport::bufferedlogger","actionview::helpers::texthelper","activesupport::duration","activesupport::timewithzone","datetime","time","kernel","activemodel::naming","activesupport::inflector::inflections","activemodel::naming","rails::generators::namedbase","activesupport::inflector","string","activeresource::base","activeresource::base","activeresource::connection","actiondispatch::middlewarestack","activemodel::errors","activerecord::fixtures","activesupport::cache::entry","activesupport::multibyte::chars","abstractcontroller::callbacks::classmethods","abstractcontroller::callbacks::classmethods","abstractcontroller::callbacks::classmethods","activesupport::classmethods","abstractcontroller::callbacks::classmethods","activesupport::multibyte::chars","hash","hash","rails::generators::base","activesupport::multibyte::chars","array","rails::commands::plugin","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::sqliteadapter","string","string","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::conditionalget","actiondispatch::session::stalesessioncheck","actiondispatch::http::url","actiondispatch::http::url","rails::console","rails::console","rails::dbconsole","rails::dbconsole","rails::server","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","actioncontroller::logsubscriber","activemodel::observerarray","activesupport::cache::memcachestore","actioncontroller::metal","actioncontroller::metal","actiondispatch::response","actiondispatch::exceptionwrapper","actiondispatch::response","activerecord::inheritance::classmethods","activerecord::store::classmethods","activesupport::dependencies::classcache","activerecord::store::classmethods","rails::generators::pluginnewgenerator","activesupport::timewithzone","base64","activesupport::hashwithindifferentaccess","hash","activesupport::hashwithindifferentaccess","hash","activesupport::multibyte::chars","string","actionview::helpers::sanitizehelper","actionview::helpers::sanitizehelper","activerecord::connectionadapters::schemastatements","actionview::helpers::assettaghelper::stylesheettaghelpers","actionview::helpers::assettaghelper::stylesheettaghelpers","rails::pluginbuilder","rails::generators","rails::railtie","actiondispatch::http::url","actiondispatch::http::url","actionview::helpers::formbuilder","actionview::helpers::formtaghelper","activesupport::notifications","activesupport::notifications::fanout","activesupport::notifications","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activeresource::response","enumerable","time","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysql2adapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actionview::template","actionview::template::handlers::erb","kernel","activerecord::migration","plugin","actiondispatch::middlewarestack","activesupport::hashwithindifferentaccess","hash","hash","activerecord::inheritance::classmethods","actiondispatch::http::parameters","activerecord::inheritance::classmethods","mime::mimes","activesupport::orderedhash","module","abstractcontroller::translation","actionview::helpers::translationhelper","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::schemacache","activerecord::connectionadapters::schemastatements","activerecord::modelschema::classmethods","activerecord::modelschema::classmethods","rails::generators::namedbase","activerecord::modelschema::classmethods","activerecord::connectionadapters::databaselimits","activerecord::fixtures","activerecord::connectionadapters::sqliteadapter","activesupport::inflector","string","activerecord::connectionadapters::postgresqladapter","actionview::helpers::activemodelinstancetag","actionview::helpers::taghelper","activesupport::taggedlogging","activesupport::taggedlogging","rails::rack::logtailer","activesupport::logsubscriber::testhelper","activesupport::testing::setupandteardown::classmethods","activerecord::testfixtures","actioncontroller::templateassertions","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::generators::namedbase","actionview::lookupcontext::viewpaths","rails::generators","activesupport::testing::declarative","rails::appbuilder","rails::pluginbuilder","rails::pluginbuilder","rails::pluginbuilder","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","actioncontroller::testcase::behavior::classmethods","actionview::testcase::behavior::classmethods","rails::generators::testcase","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formhelper","actionview::helpers::formtaghelper","array","rails::application::configuration","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::timewithzone","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::formbuilder","actionview::helpers::datehelper","activesupport::testing::performance::profiler","time","actionview::helpers::formoptionshelper","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","activeresource::base","activeresource::base","activeresource::connection","activerecord::base","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activesupport::multibyte::chars","string","activesupport::inflector","activesupport::multibyte::chars","string","rails::appbuilder","array","string","string","actiondispatch::response","activemodel::errors","activesupport::orderedhash","activesupport::timewithzone","rails::paths::path","rails::application","actiondispatch::response","actiondispatch::reloader","bigdecimal","datetime","mysql::time","string","time","actionview::helpers::datehelperinstancetag","activesupport::timewithzone","datetime","string","time","actionview::helpers::datehelperinstancetag","array","datetime","time","activesupport::timewithzone","datetime","actioncontroller::responder","activesupport::timewithzone","array","bigdecimal","datetime","time","actiondispatch::flash::flashhash","activemodel::errors","activerecord::result","activesupport::hashwithindifferentaccess","activesupport::orderedhash","actioncontroller::responder","rails::info","activesupport::timewithzone","datetime","actioncontroller::responder","activeresource::base","object","activemodel::conversion","activerecord::attributemethods::primarykey","actionview::helpers::formbuilder","activemodel::conversion","hash","activesupport::hashwithindifferentaccess","hash","activemodel::conversion","activesupport::safebuffer","array","falseclass","hash","nilclass","object","trueclass","actionview::helpers::formbuilder","activemodel::conversion","actiondispatch::response","actionview::filesystemresolver","actiondispatch::reloader","rails::railtie::configuration","rails::railtie::configuration","array","hash","object","actiondispatch::remoteip::getip","actionview::filesystemresolver","actionview::fixtureresolver","activeresource::request","activeresource::sslerror","activeresource::timeouterror","activesupport::safebuffer","activesupport::timewithzone","activesupport::timezone","array","bigdecimal","datetime","mime::type","plugin","rails::info","sourceannotationextractor::annotation","time","array","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::tabledefinition","mime::type","mime::type","activesupport::xmlmini","activesupport::timewithzone","datetime","string","time","actionview::helpers::datehelperinstancetag","activemodel::errors","activemodel::serializers::xml","activeresource::base","array","hash","activesupport::orderedhash","activesupport::safebuffer","activesupport::timewithzone","bigdecimal","activesupport::orderedhash","activesupport::timezone","activesupport::timewithzone","time","activerecord::persistence","activerecord::persistence","actioncontroller::httpauthentication::token","time","activerecord::persistence","activemodel::observerarray","activerecord::connectionadapters::databasestatements","activerecord::transactions","activerecord::transactions::classmethods","activerecord::connectionadapters::abstractadapter","abstractcontroller::translation","actionview::helpers::translationhelper","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activesupport::inflector","activesupport::filewatcher","activesupport::filewatcher::backend","actionview::helpers::texthelper","string","nilclass","object","activerecord::testfixtures::classmethods","rails::initializable::collection","activerecord::connectionadapters::postgresqladapter::tabledefinition","activesupport::timewithzone","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::quoting","activerecord::attributemethods::serialization","activerecord::connectionadapters::abstractmysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::multibyte::unicode","activerecord::connectionadapters::querycache","activerecord::querycache::classmethods","activesupport::inflector::inflections","activemodel::naming","rails::generators::namedbase","activemodel::attributemethods::classmethods","activerecord::attributemethods::read::classmethods","activesupport::inflector","string","object","activerecord::connectionadapters::postgresqladapter","actiondispatch::filehandler","plugin","array","array","activesupport::memoizable::instancemethods","mime::type","activerecord::attributemethods::serialization::attribute","activerecord::attributemethods::serialization::attribute","activesupport::notifications","activesupport::notifications::fanout","activesupport::duration","activerecord::migration","activesupport::multibyte::chars","activerecord::connectionadapters::databasestatements","activeresource::base","activesupport::hashwithindifferentaccess","activerecord::persistence","activeresource::base","activerecord::persistence","activeresource::base","rails::generators::activemodel","activerecord::persistence","activerecord::persistence","activerecord::countercache","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","actionview::helpers::atomfeedhelper::atomfeedbuilder","activesupport::fileupdatechecker","actiondispatch::http::url","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actioncontroller::metal","actiondispatch::http::url","actiondispatch::routing::urlfor","actionview::helpers::urlhelper","actioncontroller::urlfor","actiondispatch::integration::session","actiondispatch::integrationtest","actiondispatch::routing::urlfor","actionview::helpers::urlhelper","activesupport::timezone","rails::generators::base","actioncontroller::metal","actiondispatch::flash::flashhash","actiondispatch::middlewarestack","actiondispatch::http::mimenegotiation","railsenvironment","railsenvironment","actioncontroller::renderers::classmethods","actioncontroller::renderers::classmethods","railsenvironment","time","activesupport::timewithzone","activeresource::base","activeresource::base","activeresource::connection","actiondispatch::testrequest","actioncontroller::httpauthentication::basic","activerecord::testfixtures::classmethods","activerecord::testfixtures::classmethods","activesupport::timewithzone","datetime","activesupport::timewithzone","datetime","activesupport::timewithzone","activesupport::timezone","datetime","time","activesupport::timezone","actionview::helpers::formtaghelper","actiondispatch::request","activemodel::validations","activerecord::validations","activeresource::validations","actiondispatch::http::mimenegotiation","activerecord::connectionadapters::sqliteadapter","rails::generators::appgenerator","rails::generators::pluginnewgenerator","activerecord::scoping::named::classmethods","activemodel::eachvalidator","activemodel::validations::classmethods","activemodel::validations::presencevalidator","activemodel::validator","actioncontroller::httpauthentication::digest","activemodel::eachvalidator","activemodel::validations::acceptancevalidator","activemodel::validations::confirmationvalidator","activemodel::validations::exclusionvalidator","activemodel::validations::formatvalidator","activemodel::validations::inclusionvalidator","activemodel::validations::lengthvalidator","activemodel::validations::numericalityvalidator","activemodel::validations::withvalidator","activerecord::validations::associatedvalidator","activerecord::validations::uniquenessvalidator","i18n::railtie","actioncontroller::httpauthentication::digest","activemodel::validations::classmethods","activemodel::validations::classmethods","activemodel::validations::helpermethods","activerecord::validations::classmethods","activemodel::validations::helpermethods","activemodel::validations::classmethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activerecord::validations::classmethods","activemodel::validations","activemodel::validations::classmethods","activemodel::validations::classmethods","activemodel::validations::classmethods","activesupport::cache::entry","activemodel::errors","activesupport::orderedhash","activesupport::hashwithindifferentaccess","rails::appbuilder","rails::generators::actions","rails::appbuilder","rails::appbuilder","rails::appbuilder","actioncontroller::requestforgeryprotection","activesupport::messageverifier","activerecord::connectionadapters::abstractadapter","actioncontroller::requestforgeryprotection","mime::type","rails","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","abstractcontroller::rendering","abstractcontroller::rendering","abstractcontroller::rendering","abstractcontroller::rendering::classmethods","abstractcontroller::viewpaths::classmethods","abstractcontroller::viewpaths::classmethods","actionview::lookupcontext::viewpaths","abstractcontroller::rendering","actioncontroller::hideactions::classmethods","activesupport::logsubscriber::testhelper","activesupport::notifications::fanout","activesupport::multibyte::chars","activesupport::deprecation","activesupport::filewatcher","activesupport::dependencies::watchstack","rails::application","rails::railtie::configuration","rails::railtie::configuration","activesupport::dependencies::watchstack","time","abstractcontroller::railties::routeshelpers","actioncontroller::railties::paths","activesupport::json","activesupport::xmlmini","activerecord::connectionadapters::connectionpool","actiondispatch::routing::mapper::base","actiondispatch::routing::mapper::resources","actionview::lookupcontext::viewpaths","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::hashwithindifferentaccess","hash","activesupport::cache::strategy::localcache","object","activesupport::testing::performance::benchmarker","actiondispatch::assertions::routingassertions","actiondispatch::routing::mapper::resources","activerecord::transactions","kernel","actioncontroller::base","actionview::helpers::texthelper","array","actioncontroller::paramswrapper::classmethods","rails::generators::namedbase","actiondispatch::railsentitystore","actiondispatch::railsmetastore","activerecord::migration","activesupport::cache::store","activerecord::attributemethods::write","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","actioncontroller::caching::fragments","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::request","activerecord::connectionadapters::postgresqladapter::tabledefinition","activerecord::connectionadapters::tabledefinition","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::request","activesupport::timewithzone","datetime","integer","integer","time","time","time","activesupport::timewithzone","time","time","activesupport::timezone","files\/readme_rdoc.html","files\/actionmailer\/changelog_md.html","files\/actionmailer\/readme_rdoc.html","files\/actionmailer\/lib\/action_mailer\/base_rb.html","files\/actionmailer\/lib\/action_mailer\/mail_helper_rb.html","files\/actionpack\/changelog_md.html","files\/actionpack\/readme_rdoc.html","files\/actionpack\/lib\/abstract_controller\/asset_paths_rb.html","files\/actionpack\/lib\/abstract_controller\/base_rb.html","files\/actionpack\/lib\/abstract_controller\/callbacks_rb.html","files\/actionpack\/lib\/abstract_controller\/collector_rb.html","files\/actionpack\/lib\/abstract_controller\/helpers_rb.html","files\/actionpack\/lib\/abstract_controller\/layouts_rb.html","files\/actionpack\/lib\/abstract_controller\/logger_rb.html","files\/actionpack\/lib\/abstract_controller\/railties\/routes_helpers_rb.html","files\/actionpack\/lib\/abstract_controller\/rendering_rb.html","files\/actionpack\/lib\/abstract_controller\/translation_rb.html","files\/actionpack\/lib\/abstract_controller\/url_for_rb.html","files\/actionpack\/lib\/abstract_controller\/view_paths_rb.html","files\/actionpack\/lib\/action_controller\/base_rb.html","files\/actionpack\/lib\/action_controller\/caching_rb.html","files\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","files\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","files\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","files\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","files\/actionpack\/lib\/action_controller\/deprecated_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/integration_test_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/performance_test_rb.html","files\/actionpack\/lib\/action_controller\/log_subscriber_rb.html","files\/actionpack\/lib\/action_controller\/metal_rb.html","files\/actionpack\/lib\/action_controller\/metal\/compatibility_rb.html","files\/actionpack\/lib\/action_controller\/metal\/conditional_get_rb.html","files\/actionpack\/lib\/action_controller\/metal\/cookies_rb.html","files\/actionpack\/lib\/action_controller\/metal\/data_streaming_rb.html","files\/actionpack\/lib\/action_controller\/metal\/exceptions_rb.html","files\/actionpack\/lib\/action_controller\/metal\/flash_rb.html","files\/actionpack\/lib\/action_controller\/metal\/force_ssl_rb.html","files\/actionpack\/lib\/action_controller\/metal\/head_rb.html","files\/actionpack\/lib\/action_controller\/metal\/helpers_rb.html","files\/actionpack\/lib\/action_controller\/metal\/hide_actions_rb.html","files\/actionpack\/lib\/action_controller\/metal\/http_authentication_rb.html","files\/actionpack\/lib\/action_controller\/metal\/implicit_render_rb.html","files\/actionpack\/lib\/action_controller\/metal\/instrumentation_rb.html","files\/actionpack\/lib\/action_controller\/metal\/mime_responds_rb.html","files\/actionpack\/lib\/action_controller\/metal\/params_wrapper_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rack_delegation_rb.html","files\/actionpack\/lib\/action_controller\/metal\/redirecting_rb.html","files\/actionpack\/lib\/action_controller\/metal\/renderers_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rendering_rb.html","files\/actionpack\/lib\/action_controller\/metal\/request_forgery_protection_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rescue_rb.html","files\/actionpack\/lib\/action_controller\/metal\/responder_rb.html","files\/actionpack\/lib\/action_controller\/metal\/session_management_rb.html","files\/actionpack\/lib\/action_controller\/metal\/streaming_rb.html","files\/actionpack\/lib\/action_controller\/metal\/testing_rb.html","files\/actionpack\/lib\/action_controller\/metal\/url_for_rb.html","files\/actionpack\/lib\/action_controller\/middleware_rb.html","files\/actionpack\/lib\/action_controller\/railtie_rb.html","files\/actionpack\/lib\/action_controller\/railties\/paths_rb.html","files\/actionpack\/lib\/action_controller\/record_identifier_rb.html","files\/actionpack\/lib\/action_controller\/test_case_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/cache_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/filter_parameters_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/headers_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_negotiation_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_type_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_types_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/parameter_filter_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/parameters_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/rack_cache_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/request_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/response_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/upload_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/url_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/best_standards_support_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/body_proxy_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/callbacks_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/cookies_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/debug_exceptions_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/exception_wrapper_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/flash_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/head_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/params_parser_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/public_exceptions_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/reloader_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/remote_ip_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/request_id_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/rescue_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/abstract_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cache_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cookie_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/mem_cache_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/show_exceptions_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/stack_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/static_rb.html","files\/actionpack\/lib\/action_dispatch\/railtie_rb.html","files\/actionpack\/lib\/action_dispatch\/routing_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/mapper_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/polymorphic_routes_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/redirection_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/route_set_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/routes_proxy_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/url_for_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/dom_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/response_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/routing_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/selector_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/tag_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/integration_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/performance_test_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_process_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_request_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_response_rb.html","files\/actionpack\/lib\/action_view\/asset_paths_rb.html","files\/actionpack\/lib\/action_view\/base_rb.html","files\/actionpack\/lib\/action_view\/buffers_rb.html","files\/actionpack\/lib\/action_view\/context_rb.html","files\/actionpack\/lib\/action_view\/flows_rb.html","files\/actionpack\/lib\/action_view\/helpers_rb.html","files\/actionpack\/lib\/action_view\/helpers\/active_model_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_paths_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/asset_include_tag_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/asset_paths_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/javascript_tag_helpers_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/stylesheet_tag_helpers_rb.html","files\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/controller_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/csrf_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/output_safety_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/rendering_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","files\/actionpack\/lib\/action_view\/log_subscriber_rb.html","files\/actionpack\/lib\/action_view\/lookup_context_rb.html","files\/actionpack\/lib\/action_view\/path_set_rb.html","files\/actionpack\/lib\/action_view\/railtie_rb.html","files\/actionpack\/lib\/action_view\/renderer\/abstract_renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/partial_renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/streaming_template_renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/template_renderer_rb.html","files\/actionpack\/lib\/action_view\/template_rb.html","files\/actionpack\/lib\/action_view\/template\/error_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/builder_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/erb_rb.html","files\/actionpack\/lib\/action_view\/template\/resolver_rb.html","files\/actionpack\/lib\/action_view\/template\/text_rb.html","files\/actionpack\/lib\/action_view\/test_case_rb.html","files\/actionpack\/lib\/action_view\/testing\/resolvers_rb.html","files\/activemodel\/changelog_md.html","files\/activemodel\/readme_rdoc.html","files\/activemodel\/lib\/active_model\/attribute_methods_rb.html","files\/activemodel\/lib\/active_model\/callbacks_rb.html","files\/activemodel\/lib\/active_model\/conversion_rb.html","files\/activemodel\/lib\/active_model\/dirty_rb.html","files\/activemodel\/lib\/active_model\/errors_rb.html","files\/activemodel\/lib\/active_model\/lint_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security\/permission_set_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security\/sanitizer_rb.html","files\/activemodel\/lib\/active_model\/naming_rb.html","files\/activemodel\/lib\/active_model\/observer_array_rb.html","files\/activemodel\/lib\/active_model\/observing_rb.html","files\/activemodel\/lib\/active_model\/railtie_rb.html","files\/activemodel\/lib\/active_model\/secure_password_rb.html","files\/activemodel\/lib\/active_model\/serialization_rb.html","files\/activemodel\/lib\/active_model\/serializers\/json_rb.html","files\/activemodel\/lib\/active_model\/serializers\/xml_rb.html","files\/activemodel\/lib\/active_model\/test_case_rb.html","files\/activemodel\/lib\/active_model\/translation_rb.html","files\/activemodel\/lib\/active_model\/validations_rb.html","files\/activemodel\/lib\/active_model\/validations\/acceptance_rb.html","files\/activemodel\/lib\/active_model\/validations\/callbacks_rb.html","files\/activemodel\/lib\/active_model\/validations\/confirmation_rb.html","files\/activemodel\/lib\/active_model\/validations\/exclusion_rb.html","files\/activemodel\/lib\/active_model\/validations\/format_rb.html","files\/activemodel\/lib\/active_model\/validations\/inclusion_rb.html","files\/activemodel\/lib\/active_model\/validations\/length_rb.html","files\/activemodel\/lib\/active_model\/validations\/numericality_rb.html","files\/activemodel\/lib\/active_model\/validations\/presence_rb.html","files\/activemodel\/lib\/active_model\/validations\/validates_rb.html","files\/activemodel\/lib\/active_model\/validations\/with_rb.html","files\/activemodel\/lib\/active_model\/validator_rb.html","files\/activemodel\/lib\/active_model\/version_rb.html","files\/activerecord\/changelog_md.html","files\/activerecord\/readme_rdoc.html","files\/activerecord\/lib\/active_record\/aggregations_rb.html","files\/activerecord\/lib\/active_record\/associations_rb.html","files\/activerecord\/lib\/active_record\/associations\/alias_tracker_rb.html","files\/activerecord\/lib\/active_record\/associations\/association_rb.html","files\/activerecord\/lib\/active_record\/associations\/association_scope_rb.html","files\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/association_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/belongs_to_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/collection_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/has_and_belongs_to_many_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/has_many_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/has_one_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/singular_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/collection_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/collection_proxy_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_dependency_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_base_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_part_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_helper_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/association_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/belongs_to_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/collection_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_and_belongs_to_many_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_many_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_many_through_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_one_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_one_through_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/singular_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/singular_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/through_association_rb.html","files\/activerecord\/lib\/active_record\/attribute_assignment_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/before_type_cast_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/deprecated_underscore_read_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/dirty_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/primary_key_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/query_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/read_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/serialization_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/time_zone_conversion_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/write_rb.html","files\/activerecord\/lib\/active_record\/autosave_association_rb.html","files\/activerecord\/lib\/active_record\/base_rb.html","files\/activerecord\/lib\/active_record\/callbacks_rb.html","files\/activerecord\/lib\/active_record\/coders\/yaml_column_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_mysql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/column_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql2_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/schema_cache_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/statement_pool_rb.html","files\/activerecord\/lib\/active_record\/counter_cache_rb.html","files\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","files\/activerecord\/lib\/active_record\/dynamic_matchers_rb.html","files\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","files\/activerecord\/lib\/active_record\/errors_rb.html","files\/activerecord\/lib\/active_record\/explain_rb.html","files\/activerecord\/lib\/active_record\/explain_subscriber_rb.html","files\/activerecord\/lib\/active_record\/fixtures_rb.html","files\/activerecord\/lib\/active_record\/fixtures\/file_rb.html","files\/activerecord\/lib\/active_record\/identity_map_rb.html","files\/activerecord\/lib\/active_record\/inheritance_rb.html","files\/activerecord\/lib\/active_record\/integration_rb.html","files\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","files\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","files\/activerecord\/lib\/active_record\/log_subscriber_rb.html","files\/activerecord\/lib\/active_record\/migration_rb.html","files\/activerecord\/lib\/active_record\/migration\/command_recorder_rb.html","files\/activerecord\/lib\/active_record\/model_schema_rb.html","files\/activerecord\/lib\/active_record\/nested_attributes_rb.html","files\/activerecord\/lib\/active_record\/observer_rb.html","files\/activerecord\/lib\/active_record\/persistence_rb.html","files\/activerecord\/lib\/active_record\/query_cache_rb.html","files\/activerecord\/lib\/active_record\/querying_rb.html","files\/activerecord\/lib\/active_record\/railtie_rb.html","files\/activerecord\/lib\/active_record\/railties\/console_sandbox_rb.html","files\/activerecord\/lib\/active_record\/railties\/controller_runtime_rb.html","files\/activerecord\/lib\/active_record\/railties\/jdbcmysql_error_rb.html","files\/activerecord\/lib\/active_record\/readonly_attributes_rb.html","files\/activerecord\/lib\/active_record\/reflection_rb.html","files\/activerecord\/lib\/active_record\/relation_rb.html","files\/activerecord\/lib\/active_record\/relation\/batches_rb.html","files\/activerecord\/lib\/active_record\/relation\/calculations_rb.html","files\/activerecord\/lib\/active_record\/relation\/delegation_rb.html","files\/activerecord\/lib\/active_record\/relation\/finder_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/predicate_builder_rb.html","files\/activerecord\/lib\/active_record\/relation\/query_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/spawn_methods_rb.html","files\/activerecord\/lib\/active_record\/result_rb.html","files\/activerecord\/lib\/active_record\/sanitization_rb.html","files\/activerecord\/lib\/active_record\/schema_rb.html","files\/activerecord\/lib\/active_record\/schema_dumper_rb.html","files\/activerecord\/lib\/active_record\/scoping_rb.html","files\/activerecord\/lib\/active_record\/scoping\/default_rb.html","files\/activerecord\/lib\/active_record\/scoping\/named_rb.html","files\/activerecord\/lib\/active_record\/serialization_rb.html","files\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","files\/activerecord\/lib\/active_record\/session_store_rb.html","files\/activerecord\/lib\/active_record\/store_rb.html","files\/activerecord\/lib\/active_record\/test_case_rb.html","files\/activerecord\/lib\/active_record\/timestamp_rb.html","files\/activerecord\/lib\/active_record\/transactions_rb.html","files\/activerecord\/lib\/active_record\/translation_rb.html","files\/activerecord\/lib\/active_record\/validations_rb.html","files\/activerecord\/lib\/active_record\/validations\/associated_rb.html","files\/activerecord\/lib\/active_record\/validations\/uniqueness_rb.html","files\/activerecord\/lib\/active_record\/version_rb.html","files\/activeresource\/changelog_md.html","files\/activeresource\/readme_rdoc.html","files\/activeresource\/lib\/active_resource_rb.html","files\/activeresource\/lib\/active_resource\/base_rb.html","files\/activeresource\/lib\/active_resource\/connection_rb.html","files\/activeresource\/lib\/active_resource\/custom_methods_rb.html","files\/activeresource\/lib\/active_resource\/exceptions_rb.html","files\/activeresource\/lib\/active_resource\/formats_rb.html","files\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","files\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","files\/activeresource\/lib\/active_resource\/http_mock_rb.html","files\/activeresource\/lib\/active_resource\/log_subscriber_rb.html","files\/activeresource\/lib\/active_resource\/observing_rb.html","files\/activeresource\/lib\/active_resource\/railtie_rb.html","files\/activeresource\/lib\/active_resource\/schema_rb.html","files\/activeresource\/lib\/active_resource\/validations_rb.html","files\/activeresource\/lib\/active_resource\/version_rb.html","files\/activesupport\/changelog_md.html","files\/activesupport\/readme_rdoc.html","files\/activesupport\/lib\/active_support\/all_rb.html","files\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","files\/activesupport\/lib\/active_support\/base64_rb.html","files\/activesupport\/lib\/active_support\/basic_object_rb.html","files\/activesupport\/lib\/active_support\/benchmarkable_rb.html","files\/activesupport\/lib\/active_support\/buffered_logger_rb.html","files\/activesupport\/lib\/active_support\/builder_rb.html","files\/activesupport\/lib\/active_support\/cache_rb.html","files\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/null_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","files\/activesupport\/lib\/active_support\/callbacks_rb.html","files\/activesupport\/lib\/active_support\/concern_rb.html","files\/activesupport\/lib\/active_support\/configurable_rb.html","files\/activesupport\/lib\/active_support\/core_ext_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/prepend_and_append_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/uniq_by_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/wrap_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/subclasses_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/freeze_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file\/path_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_dup_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/multiple_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/io_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/singleton_class_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/anonymous_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/method_names_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/qualified_const_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/reachable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/remove_method_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/duplicable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/inclusion_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_json_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_param_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_query_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/try_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/with_options_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/cover_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/regexp_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/encoding_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/exclude_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/inquiry_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/interpolation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/strip_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/marshal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/publicize_conversion_methods_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","files\/activesupport\/lib\/active_support\/dependencies_rb.html","files\/activesupport\/lib\/active_support\/dependencies\/autoload_rb.html","files\/activesupport\/lib\/active_support\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/behaviors_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/method_wrappers_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/proxy_wrappers_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/reporting_rb.html","files\/activesupport\/lib\/active_support\/descendants_tracker_rb.html","files\/activesupport\/lib\/active_support\/duration_rb.html","files\/activesupport\/lib\/active_support\/file_update_checker_rb.html","files\/activesupport\/lib\/active_support\/file_watcher_rb.html","files\/activesupport\/lib\/active_support\/gzip_rb.html","files\/activesupport\/lib\/active_support\/hash_with_indifferent_access_rb.html","files\/activesupport\/lib\/active_support\/i18n_rb.html","files\/activesupport\/lib\/active_support\/i18n_railtie_rb.html","files\/activesupport\/lib\/active_support\/inflections_rb.html","files\/activesupport\/lib\/active_support\/inflector_rb.html","files\/activesupport\/lib\/active_support\/inflector\/inflections_rb.html","files\/activesupport\/lib\/active_support\/inflector\/methods_rb.html","files\/activesupport\/lib\/active_support\/inflector\/transliterate_rb.html","files\/activesupport\/lib\/active_support\/json_rb.html","files\/activesupport\/lib\/active_support\/json\/decoding_rb.html","files\/activesupport\/lib\/active_support\/json\/encoding_rb.html","files\/activesupport\/lib\/active_support\/json\/variable_rb.html","files\/activesupport\/lib\/active_support\/lazy_load_hooks_rb.html","files\/activesupport\/lib\/active_support\/log_subscriber_rb.html","files\/activesupport\/lib\/active_support\/log_subscriber\/test_helper_rb.html","files\/activesupport\/lib\/active_support\/memoizable_rb.html","files\/activesupport\/lib\/active_support\/message_encryptor_rb.html","files\/activesupport\/lib\/active_support\/message_verifier_rb.html","files\/activesupport\/lib\/active_support\/multibyte_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/unicode_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","files\/activesupport\/lib\/active_support\/notifications_rb.html","files\/activesupport\/lib\/active_support\/notifications\/fanout_rb.html","files\/activesupport\/lib\/active_support\/notifications\/instrumenter_rb.html","files\/activesupport\/lib\/active_support\/option_merger_rb.html","files\/activesupport\/lib\/active_support\/ordered_hash_rb.html","files\/activesupport\/lib\/active_support\/ordered_options_rb.html","files\/activesupport\/lib\/active_support\/railtie_rb.html","files\/activesupport\/lib\/active_support\/rescuable_rb.html","files\/activesupport\/lib\/active_support\/ruby\/shim_rb.html","files\/activesupport\/lib\/active_support\/string_inquirer_rb.html","files\/activesupport\/lib\/active_support\/tagged_logging_rb.html","files\/activesupport\/lib\/active_support\/test_case_rb.html","files\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","files\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","files\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/testing\/isolation_rb.html","files\/activesupport\/lib\/active_support\/testing\/mochaing_rb.html","files\/activesupport\/lib\/active_support\/testing\/pending_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/jruby_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/rubinius_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby\/mri_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby\/yarv_rb.html","files\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","files\/activesupport\/lib\/active_support\/time_rb.html","files\/activesupport\/lib\/active_support\/time\/autoload_rb.html","files\/activesupport\/lib\/active_support\/time_with_zone_rb.html","files\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","files\/activesupport\/lib\/active_support\/version_rb.html","files\/activesupport\/lib\/active_support\/whiny_nil_rb.html","files\/activesupport\/lib\/active_support\/xml_mini_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","files\/railties\/changelog_md.html","files\/railties\/mit-license.html","files\/railties\/readme_rdoc.html","files\/railties\/lib\/rails_rb.html","files\/railties\/lib\/rails\/all_rb.html","files\/railties\/lib\/rails\/application_rb.html","files\/railties\/lib\/rails\/application\/bootstrap_rb.html","files\/railties\/lib\/rails\/application\/configuration_rb.html","files\/railties\/lib\/rails\/application\/finisher_rb.html","files\/railties\/lib\/rails\/application\/railties_rb.html","files\/railties\/lib\/rails\/application\/route_inspector_rb.html","files\/railties\/lib\/rails\/application\/routes_reloader_rb.html","files\/railties\/lib\/rails\/backtrace_cleaner_rb.html","files\/railties\/lib\/rails\/cli_rb.html","files\/railties\/lib\/rails\/code_statistics_rb.html","files\/railties\/lib\/rails\/commands_rb.html","files\/railties\/lib\/rails\/commands\/application_rb.html","files\/railties\/lib\/rails\/commands\/benchmarker_rb.html","files\/railties\/lib\/rails\/commands\/console_rb.html","files\/railties\/lib\/rails\/commands\/dbconsole_rb.html","files\/railties\/lib\/rails\/commands\/destroy_rb.html","files\/railties\/lib\/rails\/commands\/generate_rb.html","files\/railties\/lib\/rails\/commands\/plugin_rb.html","files\/railties\/lib\/rails\/commands\/plugin_new_rb.html","files\/railties\/lib\/rails\/commands\/profiler_rb.html","files\/railties\/lib\/rails\/commands\/runner_rb.html","files\/railties\/lib\/rails\/commands\/server_rb.html","files\/railties\/lib\/rails\/commands\/update_rb.html","files\/railties\/lib\/rails\/configuration_rb.html","files\/railties\/lib\/rails\/console\/app_rb.html","files\/railties\/lib\/rails\/console\/helpers_rb.html","files\/railties\/lib\/rails\/engine_rb.html","files\/railties\/lib\/rails\/engine\/commands_rb.html","files\/railties\/lib\/rails\/engine\/configuration_rb.html","files\/railties\/lib\/rails\/engine\/railties_rb.html","files\/railties\/lib\/rails\/generators_rb.html","files\/railties\/lib\/rails\/generators\/actions_rb.html","files\/railties\/lib\/rails\/generators\/active_model_rb.html","files\/railties\/lib\/rails\/generators\/app_base_rb.html","files\/railties\/lib\/rails\/generators\/base_rb.html","files\/railties\/lib\/rails\/generators\/css\/assets\/assets_generator_rb.html","files\/railties\/lib\/rails\/generators\/css\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb_rb.html","files\/railties\/lib\/rails\/generators\/erb\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/mailer\/mailer_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/generated_attribute_rb.html","files\/railties\/lib\/rails\/generators\/js\/assets\/assets_generator_rb.html","files\/railties\/lib\/rails\/generators\/migration_rb.html","files\/railties\/lib\/rails\/generators\/named_base_rb.html","files\/railties\/lib\/rails\/generators\/rails\/app\/app_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/assets\/assets_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/generator\/generator_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/helper\/helper_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/integration_test\/integration_test_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/migration\/migration_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/model\/model_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/observer\/observer_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/performance_test\/performance_test_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/plugin_new\/plugin_new_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/resource\/resource_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/resource_route\/resource_route_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/scaffold_controller\/scaffold_controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/session_migration\/session_migration_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/task\/task_generator_rb.html","files\/railties\/lib\/rails\/generators\/resource_helpers_rb.html","files\/railties\/lib\/rails\/generators\/test_case_rb.html","files\/railties\/lib\/rails\/generators\/test_unit_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/helper\/helper_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/integration\/integration_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/mailer\/mailer_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/model\/model_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/observer\/observer_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/performance\/performance_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/plugin\/plugin_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/info_rb.html","files\/railties\/lib\/rails\/info_controller_rb.html","files\/railties\/lib\/rails\/initializable_rb.html","files\/railties\/lib\/rails\/paths_rb.html","files\/railties\/lib\/rails\/performance_test_help_rb.html","files\/railties\/lib\/rails\/plugin_rb.html","files\/railties\/lib\/rails\/rack_rb.html","files\/railties\/lib\/rails\/rack\/debugger_rb.html","files\/railties\/lib\/rails\/rack\/log_tailer_rb.html","files\/railties\/lib\/rails\/rack\/logger_rb.html","files\/railties\/lib\/rails\/railtie_rb.html","files\/railties\/lib\/rails\/railtie\/configurable_rb.html","files\/railties\/lib\/rails\/railtie\/configuration_rb.html","files\/railties\/lib\/rails\/ruby_version_check_rb.html","files\/railties\/lib\/rails\/rubyprof_ext_rb.html","files\/railties\/lib\/rails\/script_rails_loader_rb.html","files\/railties\/lib\/rails\/source_annotation_extractor_rb.html","files\/railties\/lib\/rails\/tasks_rb.html","files\/railties\/lib\/rails\/test_help_rb.html","files\/railties\/lib\/rails\/test_unit\/railtie_rb.html","files\/railties\/lib\/rails\/test_unit\/sub_test_task_rb.html","files\/railties\/lib\/rails\/version_rb.html"],"info":[["AbstractController","actionpack\/lib\/abstract_controller\/rendering.rb","classes\/AbstractController.html"," < ","Includes +url_for+ into the host class (e.g. an abstract controller or mailer). The class has to provide",1],["ActionNotFound","AbstractController","classes\/AbstractController\/ActionNotFound.html"," < StandardError","",1],["AssetPaths","AbstractController","classes\/AbstractController\/AssetPaths.html"," < ","",1],["Base","AbstractController","classes\/AbstractController\/Base.html"," < Object","<tt>AbstractController::Base<\/tt> is a low-level API. Nobody should be using it directly, and subclasses",1],["Callbacks","AbstractController","classes\/AbstractController\/Callbacks.html"," < ","",1],["ClassMethods","AbstractController::Callbacks","classes\/AbstractController\/Callbacks\/ClassMethods.html"," < ","",1],["Collector","AbstractController","classes\/AbstractController\/Collector.html"," < ","",1],["DoubleRenderError","AbstractController","classes\/AbstractController\/DoubleRenderError.html"," < Error","",1],["Error","AbstractController","classes\/AbstractController\/Error.html"," < StandardError","",1],["Helpers","AbstractController","classes\/AbstractController\/Helpers.html"," < ","",1],["ClassMethods","AbstractController::Helpers","classes\/AbstractController\/Helpers\/ClassMethods.html"," < ","",1],["Layouts","AbstractController","classes\/AbstractController\/Layouts.html"," < ","Layouts reverse the common pattern of including shared headers and footers in many templates to isolate",1],["ClassMethods","AbstractController::Layouts","classes\/AbstractController\/Layouts\/ClassMethods.html"," < ","",1],["LayoutConditions","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods\/LayoutConditions.html"," < ","This module is mixed in if layout conditions are provided. This means that if no layout conditions are",1],["Logger","AbstractController","classes\/AbstractController\/Logger.html"," < ","",1],["Railties","AbstractController","classes\/AbstractController\/Railties.html"," < ","",1],["RoutesHelpers","AbstractController::Railties","classes\/AbstractController\/Railties\/RoutesHelpers.html"," < ","",1],["Rendering","AbstractController","classes\/AbstractController\/Rendering.html"," < ","",1],["ClassMethods","AbstractController::Rendering","classes\/AbstractController\/Rendering\/ClassMethods.html"," < ","",1],["Translation","AbstractController","classes\/AbstractController\/Translation.html"," < ","",1],["UrlFor","AbstractController","classes\/AbstractController\/UrlFor.html"," < ","",1],["ClassMethods","AbstractController::UrlFor","classes\/AbstractController\/UrlFor\/ClassMethods.html"," < ","",1],["ViewPaths","AbstractController","classes\/AbstractController\/ViewPaths.html"," < ","",1],["ClassMethods","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths\/ClassMethods.html"," < ","",1],["Base","ActionController","classes\/ActionController\/Base.html"," < Metal","Action Controllers are the core of a web request in \\Rails. They are made up of one or more actions that",1],["Caching","ActionController","classes\/ActionController\/Caching.html"," < ","\\Caching is a cheap way of speeding up slow applications by keeping the result of calculations, renderings,",1],["Actions","ActionController::Caching","classes\/ActionController\/Caching\/Actions.html"," < ","Action caching is similar to page caching by the fact that the entire output of the response is cached,",1],["ActionCachePath","ActionController::Caching::Actions","classes\/ActionController\/Caching\/Actions\/ActionCachePath.html"," < Object","",1],["ClassMethods","ActionController::Caching::Actions","classes\/ActionController\/Caching\/Actions\/ClassMethods.html"," < ","",1],["ConfigMethods","ActionController::Caching","classes\/ActionController\/Caching\/ConfigMethods.html"," < ","",1],["Fragments","ActionController::Caching","classes\/ActionController\/Caching\/Fragments.html"," < ","Fragment caching is used for caching various blocks within  views without caching the entire action as",1],["Pages","ActionController::Caching","classes\/ActionController\/Caching\/Pages.html"," < ","Page caching is an approach to caching where the entire action output of is stored as a HTML file that",1],["ClassMethods","ActionController::Caching::Pages","classes\/ActionController\/Caching\/Pages\/ClassMethods.html"," < ","",1],["Sweeping","ActionController::Caching","classes\/ActionController\/Caching\/Sweeping.html"," < ","Sweepers are the terminators of the caching world and responsible for expiring caches when model objects",1],["Compatibility","ActionController","classes\/ActionController\/Compatibility.html"," < ","",1],["ConditionalGet","ActionController","classes\/ActionController\/ConditionalGet.html"," < ","",1],["Cookies","ActionController","classes\/ActionController\/Cookies.html"," < ","",1],["DataStreaming","ActionController","classes\/ActionController\/DataStreaming.html"," < ","Methods for sending arbitrary data and for streaming files to the browser, instead of rendering. ",1],["Flash","ActionController","classes\/ActionController\/Flash.html"," < ","",1],["ForceSSL","ActionController","classes\/ActionController\/ForceSSL.html"," < ","This module provides a method which will redirect browser to use HTTPS protocol. This will ensure that",1],["ClassMethods","ActionController::ForceSSL","classes\/ActionController\/ForceSSL\/ClassMethods.html"," < ","",1],["Head","ActionController","classes\/ActionController\/Head.html"," < ","",1],["Helpers","ActionController","classes\/ActionController\/Helpers.html"," < ","The \\Rails framework provides a large number of helpers for working with assets, dates, forms, numbers",1],["ClassMethods","ActionController::Helpers","classes\/ActionController\/Helpers\/ClassMethods.html"," < ","",1],["HideActions","ActionController","classes\/ActionController\/HideActions.html"," < ","Adds the ability to prevent public methods on a controller to be called as actions. ",1],["ClassMethods","ActionController::HideActions","classes\/ActionController\/HideActions\/ClassMethods.html"," < ","",1],["HttpAuthentication","ActionController","classes\/ActionController\/HttpAuthentication.html"," < ","",1],["Basic","ActionController::HttpAuthentication","classes\/ActionController\/HttpAuthentication\/Basic.html"," < ","Makes it dead easy to do HTTP \\Basic and \\Digest authentication. === Simple \\Basic example class PostsController",1],["ControllerMethods","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html"," < ","",1],["ClassMethods","ActionController::HttpAuthentication::Basic::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods\/ClassMethods.html"," < ","",1],["Digest","ActionController::HttpAuthentication","classes\/ActionController\/HttpAuthentication\/Digest.html"," < ","",1],["ControllerMethods","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html"," < ","",1],["Token","ActionController::HttpAuthentication","classes\/ActionController\/HttpAuthentication\/Token.html"," < ","Makes it dead easy to do HTTP Token authentication. Simple Token example: class PostsController < ApplicationController",1],["ControllerMethods","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token\/ControllerMethods.html"," < ","",1],["ImplicitRender","ActionController","classes\/ActionController\/ImplicitRender.html"," < ","",1],["Instrumentation","ActionController","classes\/ActionController\/Instrumentation.html"," < ","Adds instrumentation to several ends in ActionController::Base. It also provides some hooks related with",1],["ClassMethods","ActionController::Instrumentation","classes\/ActionController\/Instrumentation\/ClassMethods.html"," < ","",1],["LogSubscriber","ActionController","classes\/ActionController\/LogSubscriber.html"," < ActiveSupport::LogSubscriber","",1],["Metal","ActionController","classes\/ActionController\/Metal.html"," < AbstractController::Base","<tt>ActionController::Metal<\/tt> is the simplest possible controller, providing a valid Rack interface",1],["Middleware","ActionController","classes\/ActionController\/Middleware.html"," < Metal","",1],["ActionMiddleware","ActionController::Middleware","classes\/ActionController\/Middleware\/ActionMiddleware.html"," < Object","",1],["MimeResponds","ActionController","classes\/ActionController\/MimeResponds.html"," < ","",1],["ClassMethods","ActionController::MimeResponds","classes\/ActionController\/MimeResponds\/ClassMethods.html"," < ","",1],["ParamsWrapper","ActionController","classes\/ActionController\/ParamsWrapper.html"," < ","Wraps the parameters hash into a nested hash. This will allow clients to submit POST requests without",1],["ClassMethods","ActionController::ParamsWrapper","classes\/ActionController\/ParamsWrapper\/ClassMethods.html"," < ","",1],["RackDelegation","ActionController","classes\/ActionController\/RackDelegation.html"," < ","",1],["Railtie","ActionController","classes\/ActionController\/Railtie.html"," < Rails::Railtie","",1],["Railties","ActionController","classes\/ActionController\/Railties.html"," < ","",1],["Paths","ActionController::Railties","classes\/ActionController\/Railties\/Paths.html"," < ","",1],["RecordIdentifier","ActionController","classes\/ActionController\/RecordIdentifier.html"," < ","The record identifier encapsulates a number of naming conventions for dealing with records, like Active",1],["Redirecting","ActionController","classes\/ActionController\/Redirecting.html"," < ","",1],["Renderers","ActionController","classes\/ActionController\/Renderers.html"," < ","",1],["All","ActionController::Renderers","classes\/ActionController\/Renderers\/All.html"," < ","",1],["ClassMethods","ActionController::Renderers","classes\/ActionController\/Renderers\/ClassMethods.html"," < ","",1],["Rendering","ActionController","classes\/ActionController\/Rendering.html"," < ","",1],["RequestForgeryProtection","ActionController","classes\/ActionController\/RequestForgeryProtection.html"," < ","Controller actions are protected from Cross-Site Request Forgery (CSRF) attacks by including a token",1],["ClassMethods","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection\/ClassMethods.html"," < ","",1],["Rescue","ActionController","classes\/ActionController\/Rescue.html"," < ","This module is responsible to provide `rescue_from` helpers to controllers and configure when detailed",1],["Responder","ActionController","classes\/ActionController\/Responder.html"," < Object","Responsible for exposing a resource to different mime requests, usually depending on the HTTP verb. The",1],["ClassMethods","ActionController::SessionManagement","classes\/ActionController\/SessionManagement\/ClassMethods.html"," < ","",1],["Streaming","ActionController","classes\/ActionController\/Streaming.html"," < ","Allows views to be streamed back to the client as they are rendered. The default way Rails renders views",1],["TemplateAssertions","ActionController","classes\/ActionController\/TemplateAssertions.html"," < ","",1],["TestCase","ActionController","classes\/ActionController\/TestCase.html"," < ActiveSupport::TestCase","Superclass for ActionController functional tests. Functional tests allow you to test a single controller",1],["Behavior","ActionController::TestCase","classes\/ActionController\/TestCase\/Behavior.html"," < ","",1],["ClassMethods","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html"," < ","",1],["RaiseActionExceptions","ActionController::TestCase","classes\/ActionController\/TestCase\/RaiseActionExceptions.html"," < ","When the request.remote_addr remains the default for testing, which is 0.0.0.0, the exception is simply",1],["TestResponse","ActionController","classes\/ActionController\/TestResponse.html"," < ActionDispatch::TestResponse","",1],["Testing","ActionController","classes\/ActionController\/Testing.html"," < ","",1],["ClassMethods","ActionController::Testing","classes\/ActionController\/Testing\/ClassMethods.html"," < ","",1],["UrlFor","ActionController","classes\/ActionController\/UrlFor.html"," < ","",1],["Assertions","ActionDispatch","classes\/ActionDispatch\/Assertions.html"," < ","",1],["DomAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/DomAssertions.html"," < ","",1],["ResponseAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/ResponseAssertions.html"," < ","A small suite of assertions that test responses from \\Rails applications. ",1],["RoutingAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html"," < ","Suite of assertions to test routes generated by \\Rails and the handling of requests made to them. ",1],["SelectorAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html"," < ","Adds the +assert_select+ method for use in Rails functional test cases, which can be used to make assertions",1],["TagAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html"," < ","Pair of assertions to testing elements in the HTML output of the response. ",1],["BestStandardsSupport","ActionDispatch","classes\/ActionDispatch\/BestStandardsSupport.html"," < Object","",1],["BodyProxy","ActionDispatch","classes\/ActionDispatch\/BodyProxy.html"," < Object","",1],["Callbacks","ActionDispatch","classes\/ActionDispatch\/Callbacks.html"," < Object","Provide callbacks to be executed before and after the request dispatch. ",1],["Cookies","ActionDispatch","classes\/ActionDispatch\/Cookies.html"," < Object","\\Cookies are read and written through ActionController#cookies. The cookies being read are the ones received",1],["CookieOverflow","ActionDispatch::Cookies","classes\/ActionDispatch\/Cookies\/CookieOverflow.html"," < StandardError","Raised when storing more than 4K of session data. ",1],["DebugExceptions","ActionDispatch","classes\/ActionDispatch\/DebugExceptions.html"," < Object","This middleware is responsible for logging exceptions and showing a debugging page in case the request",1],["ExceptionWrapper","ActionDispatch","classes\/ActionDispatch\/ExceptionWrapper.html"," < Object","",1],["FileHandler","ActionDispatch","classes\/ActionDispatch\/FileHandler.html"," < Object","",1],["Flash","ActionDispatch","classes\/ActionDispatch\/Flash.html"," < Object","The flash provides a way to pass temporary objects between actions. Anything you place in the flash will",1],["FlashHash","ActionDispatch::Flash","classes\/ActionDispatch\/Flash\/FlashHash.html"," < Object","Implementation detail: please do not change the signature of the FlashHash class. Doing that will likely",1],["Head","ActionDispatch","classes\/ActionDispatch\/Head.html"," < Object","",1],["Http","ActionDispatch","classes\/ActionDispatch\/Http.html"," < ","",1],["Cache","ActionDispatch::Http","classes\/ActionDispatch\/Http\/Cache.html"," < ","",1],["Request","ActionDispatch::Http::Cache","classes\/ActionDispatch\/Http\/Cache\/Request.html"," < ","",1],["Response","ActionDispatch::Http::Cache","classes\/ActionDispatch\/Http\/Cache\/Response.html"," < ","",1],["FilterParameters","ActionDispatch::Http","classes\/ActionDispatch\/Http\/FilterParameters.html"," < ","Allows you to specify sensitive parameters which will be replaced from the request log by looking in",1],["Headers","ActionDispatch::Http","classes\/ActionDispatch\/Http\/Headers.html"," < ::Hash","",1],["MimeNegotiation","ActionDispatch::Http","classes\/ActionDispatch\/Http\/MimeNegotiation.html"," < ","",1],["ParameterFilter","ActionDispatch::Http","classes\/ActionDispatch\/Http\/ParameterFilter.html"," < Object","",1],["Parameters","ActionDispatch::Http","classes\/ActionDispatch\/Http\/Parameters.html"," < ","",1],["URL","ActionDispatch::Http","classes\/ActionDispatch\/Http\/URL.html"," < ","",1],["Upload","ActionDispatch::Http","classes\/ActionDispatch\/Http\/Upload.html"," < ","",1],["UploadedFile","ActionDispatch::Http","classes\/ActionDispatch\/Http\/UploadedFile.html"," < Object","",1],["RequestHelpers","ActionDispatch::Integration","classes\/ActionDispatch\/Integration\/RequestHelpers.html"," < ","",1],["Runner","ActionDispatch::Integration","classes\/ActionDispatch\/Integration\/Runner.html"," < ","",1],["Session","ActionDispatch::Integration","classes\/ActionDispatch\/Integration\/Session.html"," < Object","An instance of this class represents a set of requests and responses performed sequentially by a test",1],["IntegrationTest","ActionDispatch","classes\/ActionDispatch\/IntegrationTest.html"," < ActiveSupport::TestCase","An integration test spans multiple controllers and actions, tying them all together to ensure they work",1],["MiddlewareStack","ActionDispatch","classes\/ActionDispatch\/MiddlewareStack.html"," < Object","",1],["Middleware","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html"," < Object","",1],["ParamsParser","ActionDispatch","classes\/ActionDispatch\/ParamsParser.html"," < Object","",1],["PerformanceTest","ActionDispatch","classes\/ActionDispatch\/PerformanceTest.html"," < ActionDispatch::IntegrationTest","An integration test that runs a code profiler on your test methods. Profiling output for combinations",1],["PublicExceptions","ActionDispatch","classes\/ActionDispatch\/PublicExceptions.html"," < Object","A simple Rack application that renders exceptions in the given public path. ",1],["RailsEntityStore","ActionDispatch","classes\/ActionDispatch\/RailsEntityStore.html"," < Rack::Cache::EntityStore","",1],["RailsMetaStore","ActionDispatch","classes\/ActionDispatch\/RailsMetaStore.html"," < Rack::Cache::MetaStore","",1],["Railtie","ActionDispatch","classes\/ActionDispatch\/Railtie.html"," < Rails::Railtie","",1],["Reloader","ActionDispatch","classes\/ActionDispatch\/Reloader.html"," < Object","ActionDispatch::Reloader provides prepare and cleanup callbacks, intended to assist with code reloading",1],["RemoteIp","ActionDispatch","classes\/ActionDispatch\/RemoteIp.html"," < Object","",1],["GetIp","ActionDispatch::RemoteIp","classes\/ActionDispatch\/RemoteIp\/GetIp.html"," < Object","",1],["IpSpoofAttackError","ActionDispatch::RemoteIp","classes\/ActionDispatch\/RemoteIp\/IpSpoofAttackError.html"," < StandardError","",1],["Request","ActionDispatch","classes\/ActionDispatch\/Request.html"," < Rack::Request","",1],["RequestId","ActionDispatch","classes\/ActionDispatch\/RequestId.html"," < Object","Makes a unique request id available to the action_dispatch.request_id env variable (which is then accessible",1],["Rescue","ActionDispatch","classes\/ActionDispatch\/Rescue.html"," < Object","",1],["Response","ActionDispatch","classes\/ActionDispatch\/Response.html"," < Object","Represents an HTTP response generated by a controller action. Use it to retrieve the current state of",1],["Routing","ActionDispatch","classes\/ActionDispatch\/Routing.html"," < ","The routing module provides URL rewriting in native Ruby. It's a way to redirect incoming requests to",1],["Mapper","ActionDispatch::Routing","classes\/ActionDispatch\/Routing\/Mapper.html"," < Object","",1],["Base","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/Base.html"," < ","",1],["HttpHelpers","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html"," < ","",1],["Resources","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html"," < ","Resource routing allows you to quickly declare all of the common routes for a given resourceful controller.",1],["Scoping","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html"," < ","You may wish to organize groups of controllers under a namespace. Most commonly, you might group a number",1],["PolymorphicRoutes","ActionDispatch::Routing","classes\/ActionDispatch\/Routing\/PolymorphicRoutes.html"," < ","Polymorphic URL helpers are methods for smart resolution to a named route call when given an Active Record",1],["Redirection","ActionDispatch::Routing","classes\/ActionDispatch\/Routing\/Redirection.html"," < ","",1],["MountedHelpers","ActionDispatch::Routing::RouteSet","classes\/ActionDispatch\/Routing\/RouteSet\/MountedHelpers.html"," < ","",1],["UrlFor","ActionDispatch::Routing","classes\/ActionDispatch\/Routing\/UrlFor.html"," < ","In <tt>config\/routes.rb<\/tt> you define URL-to-controller mappings, but the reverse is also possible:",1],["Session","ActionDispatch","classes\/ActionDispatch\/Session.html"," < ","",1],["AbstractStore","ActionDispatch::Session","classes\/ActionDispatch\/Session\/AbstractStore.html"," < Rack::Session::Abstract::ID","",1],["CacheStore","ActionDispatch::Session","classes\/ActionDispatch\/Session\/CacheStore.html"," < AbstractStore","Session store that uses an ActiveSupport::Cache::Store to store the sessions. This store is most useful",1],["Compatibility","ActionDispatch::Session","classes\/ActionDispatch\/Session\/Compatibility.html"," < ","",1],["CookieStore","ActionDispatch::Session","classes\/ActionDispatch\/Session\/CookieStore.html"," < Rack::Session::Cookie","This cookie-based session store is the Rails default. Sessions typically contain at most a user_id and",1],["DestroyableSession","ActionDispatch::Session","classes\/ActionDispatch\/Session\/DestroyableSession.html"," < ","",1],["MemCacheStore","ActionDispatch::Session","classes\/ActionDispatch\/Session\/MemCacheStore.html"," < Rack::Session::Memcache","",1],["StaleSessionCheck","ActionDispatch::Session","classes\/ActionDispatch\/Session\/StaleSessionCheck.html"," < ","",1],["ShowExceptions","ActionDispatch","classes\/ActionDispatch\/ShowExceptions.html"," < Object","This middleware rescues any exception returned by the application and calls an exceptions app that will",1],["Static","ActionDispatch","classes\/ActionDispatch\/Static.html"," < Object","",1],["TestProcess","ActionDispatch","classes\/ActionDispatch\/TestProcess.html"," < ","",1],["TestRequest","ActionDispatch","classes\/ActionDispatch\/TestRequest.html"," < Request","",1],["TestResponse","ActionDispatch","classes\/ActionDispatch\/TestResponse.html"," < Response","Integration test methods such as ActionDispatch::Integration::Session#get and ActionDispatch::Integration::Session#post",1],["Base","ActionMailer","classes\/ActionMailer\/Base.html"," < AbstractController::Base","Action Mailer allows you to send email from your application using a mailer model and views. = Mailer",1],["MailHelper","ActionMailer","classes\/ActionMailer\/MailHelper.html"," < ","",1],["Base","ActionView","classes\/ActionView\/Base.html"," < Object","= Action View Base Action View templates can be written in several ways. If the template file has a <tt>.erb<\/tt>",1],["Context","ActionView","classes\/ActionView\/Context.html"," < ","= Action View Context Action View contexts are supplied to Action Controller to render template. The",1],["FileSystemResolver","ActionView","classes\/ActionView\/FileSystemResolver.html"," < PathResolver","A resolver that loads files from the filesystem. It allows to set your own resolving pattern. Such pattern",1],["FixtureResolver","ActionView","classes\/ActionView\/FixtureResolver.html"," < PathResolver","Use FixtureResolver in your tests to simulate the presence of files on the file system. This is used",1],["ActiveModelHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/ActiveModelHelper.html"," < ","",1],["ActiveModelInstanceTag","ActionView::Helpers","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html"," < ","",1],["AssetTagHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/AssetTagHelper.html"," < ","This module provides methods for generating HTML that links views to assets such as images, javascripts,",1],["AssetIncludeTag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper\/AssetIncludeTag.html"," < Object","",1],["JavascriptIncludeTag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptIncludeTag.html"," < AssetIncludeTag","",1],["JavascriptTagHelpers","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptTagHelpers.html"," < ","",1],["ClassMethods","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptTagHelpers\/ClassMethods.html"," < ","",1],["StylesheetIncludeTag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetIncludeTag.html"," < AssetIncludeTag","",1],["StylesheetTagHelpers","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetTagHelpers.html"," < ","",1],["ClassMethods","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetTagHelpers\/ClassMethods.html"," < ","",1],["AtomFeedHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/AtomFeedHelper.html"," < ","",1],["AtomBuilder","ActionView::Helpers::AtomFeedHelper","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomBuilder.html"," < Object","",1],["AtomFeedBuilder","ActionView::Helpers::AtomFeedHelper","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html"," < AtomBuilder","",1],["CacheHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/CacheHelper.html"," < ","",1],["CaptureHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/CaptureHelper.html"," < ","CaptureHelper exposes methods to let you extract generated markup which can be used in other parts of",1],["CsrfHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/CsrfHelper.html"," < ","",1],["DateHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/DateHelper.html"," < ","= Action View Date Helpers The Date Helper primarily creates select\/option tags for different kinds of",1],["DateHelperInstanceTag","ActionView::Helpers","classes\/ActionView\/Helpers\/DateHelperInstanceTag.html"," < ","",1],["DebugHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/DebugHelper.html"," < ","",1],["FormBuilder","ActionView::Helpers","classes\/ActionView\/Helpers\/FormBuilder.html"," < Object","",1],["FormHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/FormHelper.html"," < ","Form helpers are designed to make working with resources much easier compared to using vanilla HTML.",1],["FormOptionsHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/FormOptionsHelper.html"," < ","Provides a number of methods for turning different kinds of containers into a set of option tags. ==",1],["FormTagHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/FormTagHelper.html"," < ","Provides a number of methods for creating form tags that doesn't rely on an Active Record object assigned",1],["JavaScriptHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/JavaScriptHelper.html"," < ","",1],["NumberHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/NumberHelper.html"," < ","Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers,",1],["InvalidNumberError","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper\/InvalidNumberError.html"," < StandardError","Raised when argument +number+ param given to the helpers is invalid and the option :raise is set to ",1],["OutputSafetyHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/OutputSafetyHelper.html"," < ","",1],["RecordTagHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/RecordTagHelper.html"," < ","",1],["RenderingHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/RenderingHelper.html"," < ","= Action View Rendering Implements methods that allow rendering from a view context. In order to use",1],["SanitizeHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/SanitizeHelper.html"," < ","The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements. These",1],["TagHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/TagHelper.html"," < ","Provides methods to generate HTML tags programmatically when you can't use a Builder. By default, they",1],["TextHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/TextHelper.html"," < ","The TextHelper module provides a set of methods for filtering, formatting and transforming strings, which",1],["TranslationHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/TranslationHelper.html"," < ","",1],["UrlHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/UrlHelper.html"," < ","Provides a set of methods for making links and getting URLs that depend on the routing subsystem (see",1],["LogSubscriber","ActionView","classes\/ActionView\/LogSubscriber.html"," < ActiveSupport::LogSubscriber","= Action View Log Subscriber Provides functionality so that Rails can output logs from Action View. ",1],["DetailsCache","ActionView::LookupContext","classes\/ActionView\/LookupContext\/DetailsCache.html"," < ","Add caching behavior on top of Details. ",1],["ViewPaths","ActionView::LookupContext","classes\/ActionView\/LookupContext\/ViewPaths.html"," < ","Helpers related to template lookup using the lookup context information. ",1],["NullResolver","ActionView","classes\/ActionView\/NullResolver.html"," < PathResolver","",1],["PartialRenderer","ActionView","classes\/ActionView\/PartialRenderer.html"," < AbstractRenderer","= Action View Partials There's also a convenience method for rendering sub templates within the current",1],["Railtie","ActionView","classes\/ActionView\/Railtie.html"," < Rails::Railtie","= Action View Railtie ",1],["Renderer","ActionView","classes\/ActionView\/Renderer.html"," < Object","This is the main entry point for rendering. It basically delegates to other objects like TemplateRenderer",1],["Resolver","ActionView","classes\/ActionView\/Resolver.html"," < Object","= Action View Resolver ",1],["Path","ActionView::Resolver","classes\/ActionView\/Resolver\/Path.html"," < String","Keeps all information about view path and builds virtual path. ",1],["Template","ActionView","classes\/ActionView\/Template.html"," < Object","= Action View Text Template ",1],["Builder","ActionView::Template::Handlers","classes\/ActionView\/Template\/Handlers\/Builder.html"," < Object","",1],["ERB","ActionView::Template::Handlers","classes\/ActionView\/Template\/Handlers\/ERB.html"," < Object","",1],["Erubis","ActionView::Template::Handlers","classes\/ActionView\/Template\/Handlers\/Erubis.html"," < ::Erubis::Eruby","",1],["TestCase","ActionView","classes\/ActionView\/TestCase.html"," < ActiveSupport::TestCase","= Action View Test Case ",1],["Behavior","ActionView::TestCase","classes\/ActionView\/TestCase\/Behavior.html"," < ","",1],["ClassMethods","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html"," < ","",1],["Locals","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior\/Locals.html"," < ","",1],["TestController","ActionView::TestCase","classes\/ActionView\/TestCase\/TestController.html"," < ActionController::Base","",1],["AttributeMethods","ActiveModel","classes\/ActiveModel\/AttributeMethods.html"," < ","== Active Model Attribute Methods <tt>ActiveModel::AttributeMethods<\/tt> provides a way to add prefixes",1],["ClassMethods","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html"," < ","",1],["AttributeMethodMatcher","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html"," < Object","",1],["BlockValidator","ActiveModel","classes\/ActiveModel\/BlockValidator.html"," < EachValidator","+BlockValidator+ is a special +EachValidator+ which receives a block on initialization and call this",1],["Callbacks","ActiveModel","classes\/ActiveModel\/Callbacks.html"," < ","== Active Model Callbacks Provides an interface for any class to have Active Record like callbacks. Like",1],["Conversion","ActiveModel","classes\/ActiveModel\/Conversion.html"," < ","== Active Model Conversions Handles default conversions: to_model, to_key, to_param, and to_partial_path.",1],["Dirty","ActiveModel","classes\/ActiveModel\/Dirty.html"," < ","== Active Model Dirty Provides a way to track changes in your object in the same way as Active Record",1],["EachValidator","ActiveModel","classes\/ActiveModel\/EachValidator.html"," < Validator","+EachValidator+ is a validator which iterates through the attributes given in the options hash invoking",1],["Errors","ActiveModel","classes\/ActiveModel\/Errors.html"," < Object","== Active Model Errors Provides a modified +OrderedHash+ that you can include in your object for handling",1],["Lint","ActiveModel","classes\/ActiveModel\/Lint.html"," < ","",1],["Tests","ActiveModel::Lint","classes\/ActiveModel\/Lint\/Tests.html"," < ","== Active Model Lint Tests You can test whether an object is compliant with the Active Model API by including",1],["MassAssignmentSecurity","ActiveModel","classes\/ActiveModel\/MassAssignmentSecurity.html"," < ","= Active Model Mass-Assignment Security ",1],["BlackList","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/BlackList.html"," < PermissionSet","",1],["ClassMethods","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html"," < ","Mass assignment security provides an interface for protecting attributes from end-user assignment. For",1],["Error","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/Error.html"," < StandardError","",1],["LoggerSanitizer","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/LoggerSanitizer.html"," < Sanitizer","",1],["PermissionSet","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html"," < Set","",1],["Sanitizer","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html"," < Object","",1],["StrictSanitizer","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/StrictSanitizer.html"," < Sanitizer","",1],["WhiteList","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/WhiteList.html"," < PermissionSet","",1],["MissingAttributeError","ActiveModel","classes\/ActiveModel\/MissingAttributeError.html"," < NoMethodError","",1],["Name","ActiveModel","classes\/ActiveModel\/Name.html"," < String","",1],["Naming","ActiveModel","classes\/ActiveModel\/Naming.html"," < ","== Active Model Naming Creates a +model_name+ method on your object. To implement, just extend ActiveModel::Naming",1],["Observer","ActiveModel","classes\/ActiveModel\/Observer.html"," < Object","== Active Model Observers Observer classes respond to life cycle callbacks to implement trigger-like",1],["ObserverArray","ActiveModel","classes\/ActiveModel\/ObserverArray.html"," < Array","Stores the enabled\/disabled state of individual observers for a particular model class. ",1],["Observing","ActiveModel","classes\/ActiveModel\/Observing.html"," < ","",1],["ClassMethods","ActiveModel::Observing","classes\/ActiveModel\/Observing\/ClassMethods.html"," < ","",1],["SecurePassword","ActiveModel","classes\/ActiveModel\/SecurePassword.html"," < ","",1],["ClassMethods","ActiveModel::SecurePassword","classes\/ActiveModel\/SecurePassword\/ClassMethods.html"," < ","",1],["InstanceMethodsOnActivation","ActiveModel::SecurePassword","classes\/ActiveModel\/SecurePassword\/InstanceMethodsOnActivation.html"," < ","",1],["Serialization","ActiveModel","classes\/ActiveModel\/Serialization.html"," < ","== Active Model Serialization Provides a basic serialization to a serializable_hash for your object.",1],["Serializers","ActiveModel","classes\/ActiveModel\/Serializers.html"," < ","== Active Model XML Serializer --- == Active Model JSON Serializer ",1],["JSON","ActiveModel::Serializers","classes\/ActiveModel\/Serializers\/JSON.html"," < ","",1],["Xml","ActiveModel::Serializers","classes\/ActiveModel\/Serializers\/Xml.html"," < ","",1],["StrictValidationFailed","ActiveModel","classes\/ActiveModel\/StrictValidationFailed.html"," < StandardError","",1],["Translation","ActiveModel","classes\/ActiveModel\/Translation.html"," < ","== Active Model Translation Provides integration between your object and the Rails internationalization",1],["Validations","ActiveModel","classes\/ActiveModel\/Validations.html"," < ","== Active Model Validations Provides a full validation framework to your objects. A minimal implementation",1],["AcceptanceValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/AcceptanceValidator.html"," < EachValidator","",1],["Callbacks","ActiveModel::Validations","classes\/ActiveModel\/Validations\/Callbacks.html"," < ","",1],["ClassMethods","ActiveModel::Validations::Callbacks","classes\/ActiveModel\/Validations\/Callbacks\/ClassMethods.html"," < ","",1],["ClassMethods","ActiveModel::Validations","classes\/ActiveModel\/Validations\/ClassMethods.html"," < ","",1],["ConfirmationValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/ConfirmationValidator.html"," < EachValidator","",1],["ExclusionValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/ExclusionValidator.html"," < EachValidator","",1],["FormatValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/FormatValidator.html"," < EachValidator","",1],["HelperMethods","ActiveModel::Validations","classes\/ActiveModel\/Validations\/HelperMethods.html"," < ","",1],["InclusionValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/InclusionValidator.html"," < EachValidator","",1],["LengthValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/LengthValidator.html"," < EachValidator","",1],["NumericalityValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/NumericalityValidator.html"," < EachValidator","",1],["PresenceValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/PresenceValidator.html"," < EachValidator","",1],["WithValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/WithValidator.html"," < EachValidator","",1],["Validator","ActiveModel","classes\/ActiveModel\/Validator.html"," < Object","== Active Model Validator A simple base class that can be used along with ActiveModel::Validations::ClassMethods.validates_with",1],["ActiveRecordError","ActiveRecord","classes\/ActiveRecord\/ActiveRecordError.html"," < StandardError","= Active Record Errors Generic Active Record exception class. ",1],["AdapterNotFound","ActiveRecord","classes\/ActiveRecord\/AdapterNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find database adapter specified in <tt>config\/database.yml<\/tt> or programmatically.",1],["AdapterNotSpecified","ActiveRecord","classes\/ActiveRecord\/AdapterNotSpecified.html"," < ActiveRecordError","Raised when adapter not specified on connection (or configuration file <tt>config\/database.yml<\/tt> misses",1],["ClassMethods","ActiveRecord::Aggregations","classes\/ActiveRecord\/Aggregations\/ClassMethods.html"," < ","Active Record implements aggregation through a macro-like class method called +composed_of+ for representing",1],["AssociationTypeMismatch","ActiveRecord","classes\/ActiveRecord\/AssociationTypeMismatch.html"," < ActiveRecordError","Raised when an object assigned to an association has an incorrect type. class Ticket < ActiveRecord::Base",1],["ClassMethods","ActiveRecord::Associations","classes\/ActiveRecord\/Associations\/ClassMethods.html"," < ","Associations are a set of macro-like class methods for tying objects together through foreign keys. They",1],["AttributeAssignment","ActiveRecord","classes\/ActiveRecord\/AttributeAssignment.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeAssignment","classes\/ActiveRecord\/AttributeAssignment\/ClassMethods.html"," < ","",1],["AttributeAssignmentError","ActiveRecord","classes\/ActiveRecord\/AttributeAssignmentError.html"," < ActiveRecordError","Raised when an error occurred while doing a mass assignment to an attribute through the <tt>attributes=<\/tt>",1],["AttributeMethods","ActiveRecord","classes\/ActiveRecord\/AttributeMethods.html"," < ","",1],["BeforeTypeCast","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/BeforeTypeCast.html"," < ","",1],["DeprecatedUnderscoreRead","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/DeprecatedUnderscoreRead.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead","classes\/ActiveRecord\/AttributeMethods\/DeprecatedUnderscoreRead\/ClassMethods.html"," < ","",1],["Dirty","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Dirty.html"," < ","",1],["PrimaryKey","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::PrimaryKey","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html"," < ","",1],["Query","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Query.html"," < ","",1],["Read","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Read.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::Read","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html"," < ","",1],["Serialization","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Serialization.html"," < ","",1],["Attribute","ActiveRecord::AttributeMethods::Serialization","classes\/ActiveRecord\/AttributeMethods\/Serialization\/Attribute.html"," < Struct.new(:coder, :value, :state)","",1],["ClassMethods","ActiveRecord::AttributeMethods::Serialization","classes\/ActiveRecord\/AttributeMethods\/Serialization\/ClassMethods.html"," < ","",1],["TimeZoneConversion","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/TimeZoneConversion.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::TimeZoneConversion","classes\/ActiveRecord\/AttributeMethods\/TimeZoneConversion\/ClassMethods.html"," < ","",1],["Write","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Write.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::Write","classes\/ActiveRecord\/AttributeMethods\/Write\/ClassMethods.html"," < ","",1],["Base","ActiveRecord","classes\/ActiveRecord\/Base.html"," < Object","= Active Record Active Record objects don't specify their attributes directly, but rather infer them",1],["ConfigurationError","ActiveRecord","classes\/ActiveRecord\/ConfigurationError.html"," < ActiveRecordError","Raised when association is being configured improperly or user tries to use offset and limit together",1],["AbstractAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html"," < Object","Active Record supports multiple database systems. AbstractAdapter and related classes form the abstraction",1],["AbstractMysqlAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html"," < AbstractAdapter","",1],["ConnectionHandler","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html"," < Object","ConnectionHandler is a collection of ConnectionPool objects. It is used for keeping separate connection",1],["ConnectionManagement","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html"," < Object","",1],["ConnectionPool","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html"," < Object","Connection pool base class for managing Active Record database connections. == Introduction A connection",1],["DatabaseLimits","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html"," < ","",1],["DatabaseStatements","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html"," < ","",1],["Mysql2Adapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html"," < AbstractMysqlAdapter","",1],["MysqlAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html"," < AbstractMysqlAdapter","The MySQL adapter will work with both Ruby\/MySQL, which is a Ruby-based MySQL adapter that comes bundled",1],["StatementPool","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html"," < ConnectionAdapters::StatementPool","",1],["PostgreSQLAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html"," < AbstractAdapter","The PostgreSQL adapter works both with the native C (http:\/\/ruby.scripting.ca\/postgres\/) and the pure",1],["StatementPool","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html"," < ConnectionAdapters::StatementPool","",1],["TableDefinition","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/TableDefinition.html"," < ActiveRecord::ConnectionAdapters::TableDefinition","",1],["Utils","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/Utils.html"," < ","",1],["PostgreSQLColumn","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLColumn.html"," < Column","PostgreSQL-specific extensions to column definitions in a table. ",1],["QueryCache","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html"," < ","",1],["Quoting","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html"," < ","",1],["SQLiteAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html"," < AbstractAdapter","The SQLite adapter works with both the 2.x and 3.x series of SQLite with the sqlite-ruby drivers (available",1],["ExplainPrettyPrinter","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/ExplainPrettyPrinter.html"," < Object","",1],["StatementPool","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/StatementPool.html"," < ConnectionAdapters::StatementPool","",1],["Version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html"," < Object","",1],["SchemaCache","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/SchemaCache.html"," < Object","",1],["SchemaStatements","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html"," < ","",1],["StatementPool","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html"," < Object","",1],["Table","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/Table.html"," < Object","Represents an SQL table in an abstract way for updating a table. Also see TableDefinition and SchemaStatements#create_table",1],["TableDefinition","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html"," < Object","Represents the schema of an SQL table in an abstract way. This class provides methods for manipulating",1],["ConnectionNotEstablished","ActiveRecord","classes\/ActiveRecord\/ConnectionNotEstablished.html"," < ActiveRecordError","Raised when connection to the database could not been established (for example when <tt>connection=<\/tt>",1],["ConnectionTimeoutError","ActiveRecord","classes\/ActiveRecord\/ConnectionTimeoutError.html"," < ConnectionNotEstablished","Raised when a connection could not be obtained within the connection acquisition timeout period. ",1],["CounterCache","ActiveRecord","classes\/ActiveRecord\/CounterCache.html"," < ","= Active Record Counter Cache ",1],["DangerousAttributeError","ActiveRecord","classes\/ActiveRecord\/DangerousAttributeError.html"," < ActiveRecordError","Raised when attribute has a name reserved by Active Record (when attribute has name of one of Active",1],["DynamicFinderMatch","ActiveRecord","classes\/ActiveRecord\/DynamicFinderMatch.html"," < Object","= Active Record Dynamic Finder Match Refer to ActiveRecord::Base documentation for Dynamic attribute-based",1],["DynamicMatchers","ActiveRecord","classes\/ActiveRecord\/DynamicMatchers.html"," < ","",1],["Fixtures","ActiveRecord","classes\/ActiveRecord\/Fixtures.html"," < Object","\\Fixtures are a way of organizing data that you want to test against; in short, sample data. They are",1],["File","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures\/File.html"," < Object","",1],["Inheritance","ActiveRecord","classes\/ActiveRecord\/Inheritance.html"," < ","",1],["ClassMethods","ActiveRecord::Inheritance","classes\/ActiveRecord\/Inheritance\/ClassMethods.html"," < ","",1],["InvalidForeignKey","ActiveRecord","classes\/ActiveRecord\/InvalidForeignKey.html"," < WrappedDatabaseException","Raised when a record cannot be inserted or updated because it references a non-existent record. ",1],["IrreversibleMigration","ActiveRecord","classes\/ActiveRecord\/IrreversibleMigration.html"," < ActiveRecordError","Exception that can be raised to stop migrations from going backwards. ",1],["Migration","ActiveRecord","classes\/ActiveRecord\/Migration.html"," < Object","= Active Record Migrations Migrations can manage the evolution of a schema used by several physical databases.",1],["CommandRecorder","ActiveRecord::Migration","classes\/ActiveRecord\/Migration\/CommandRecorder.html"," < Object","<tt>ActiveRecord::Migration::CommandRecorder<\/tt> records commands done during a migration and knows",1],["MigrationProxy","ActiveRecord","classes\/ActiveRecord\/MigrationProxy.html"," < Struct.new(:name, :version, :filename, :scope)","MigrationProxy is used to defer loading of the actual migration classes until they are needed ",1],["ModelSchema","ActiveRecord","classes\/ActiveRecord\/ModelSchema.html"," < ","",1],["ClassMethods","ActiveRecord::ModelSchema","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html"," < ","",1],["MultiparameterAssignmentErrors","ActiveRecord","classes\/ActiveRecord\/MultiparameterAssignmentErrors.html"," < ActiveRecordError","Raised when there are multiple errors while doing a mass assignment through the +attributes+ method.",1],["ClassMethods","ActiveRecord::NestedAttributes","classes\/ActiveRecord\/NestedAttributes\/ClassMethods.html"," < ","= Active Record Nested Attributes Nested attributes allow you to save attributes on associated records",1],["TooManyRecords","ActiveRecord::NestedAttributes","classes\/ActiveRecord\/NestedAttributes\/TooManyRecords.html"," < ActiveRecordError","",1],["Persistence","ActiveRecord","classes\/ActiveRecord\/Persistence.html"," < ","= Active Record Persistence ",1],["ClassMethods","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence\/ClassMethods.html"," < ","",1],["PreparedStatementInvalid","ActiveRecord","classes\/ActiveRecord\/PreparedStatementInvalid.html"," < ActiveRecordError","Raised when number of bind variables in statement given to <tt>:condition<\/tt> key (for example, when",1],["QueryCache","ActiveRecord","classes\/ActiveRecord\/QueryCache.html"," < Object","= Active Record Query Cache ",1],["ClassMethods","ActiveRecord::QueryCache","classes\/ActiveRecord\/QueryCache\/ClassMethods.html"," < ","",1],["Querying","ActiveRecord","classes\/ActiveRecord\/Querying.html"," < ","",1],["ReadOnlyRecord","ActiveRecord","classes\/ActiveRecord\/ReadOnlyRecord.html"," < ActiveRecordError","Raised on attempt to update record that is instantiated as read only. ",1],["RecordInvalid","ActiveRecord","classes\/ActiveRecord\/RecordInvalid.html"," < ActiveRecordError","= Active Record RecordInvalid Raised by <tt>save!<\/tt> and <tt>create!<\/tt> when the record is invalid.",1],["RecordNotFound","ActiveRecord","classes\/ActiveRecord\/RecordNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find record by given id or set of ids. ",1],["RecordNotSaved","ActiveRecord","classes\/ActiveRecord\/RecordNotSaved.html"," < ActiveRecordError","Raised by ActiveRecord::Base.save! and ActiveRecord::Base.create! methods when record cannot be saved",1],["RecordNotUnique","ActiveRecord","classes\/ActiveRecord\/RecordNotUnique.html"," < WrappedDatabaseException","Raised when a record cannot be inserted because it would violate a uniqueness constraint. ",1],["Result","ActiveRecord","classes\/ActiveRecord\/Result.html"," < Object","This class encapsulates a Result returned from calling +exec_query+ on any database connection adapter.",1],["Rollback","ActiveRecord","classes\/ActiveRecord\/Rollback.html"," < ActiveRecordError","ActiveRecord::Transactions::ClassMethods.transaction uses this exception to distinguish a deliberate",1],["Sanitization","ActiveRecord","classes\/ActiveRecord\/Sanitization.html"," < ","",1],["ClassMethods","ActiveRecord::Sanitization","classes\/ActiveRecord\/Sanitization\/ClassMethods.html"," < ","",1],["Scoping","ActiveRecord","classes\/ActiveRecord\/Scoping.html"," < ","= Active Record Named \\Scopes ",1],["Default","ActiveRecord::Scoping","classes\/ActiveRecord\/Scoping\/Default.html"," < ","",1],["ClassMethods","ActiveRecord::Scoping::Default","classes\/ActiveRecord\/Scoping\/Default\/ClassMethods.html"," < ","",1],["Named","ActiveRecord::Scoping","classes\/ActiveRecord\/Scoping\/Named.html"," < ","",1],["ClassMethods","ActiveRecord::Scoping::Named","classes\/ActiveRecord\/Scoping\/Named\/ClassMethods.html"," < ","",1],["Serialization","ActiveRecord","classes\/ActiveRecord\/Serialization.html"," < ","= Active Record Serialization ",1],["SerializationTypeMismatch","ActiveRecord","classes\/ActiveRecord\/SerializationTypeMismatch.html"," < ActiveRecordError","Raised when unserialized object's type mismatches one specified for serializable field. ",1],["StaleObjectError","ActiveRecord","classes\/ActiveRecord\/StaleObjectError.html"," < ActiveRecordError","Raised on attempt to save stale record. Record is stale when it's being saved in another query after",1],["StatementInvalid","ActiveRecord","classes\/ActiveRecord\/StatementInvalid.html"," < ActiveRecordError","Raised when SQL statement cannot be executed by the database (for example, it's often the case for MySQL",1],["Store","ActiveRecord","classes\/ActiveRecord\/Store.html"," < ","Store gives you a thin wrapper around serialize for the purpose of storing hashes in a single column.",1],["ClassMethods","ActiveRecord::Store","classes\/ActiveRecord\/Store\/ClassMethods.html"," < ","",1],["TestFixtures","ActiveRecord","classes\/ActiveRecord\/TestFixtures.html"," < ","",1],["ClassMethods","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html"," < ","",1],["ThrowResult","ActiveRecord","classes\/ActiveRecord\/ThrowResult.html"," < ActiveRecordError","Raised when SQL statement is invalid and the application gets a blank result. ",1],["Transactions","ActiveRecord","classes\/ActiveRecord\/Transactions.html"," < ","See ActiveRecord::Transactions::ClassMethods for documentation. ",1],["ClassMethods","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions\/ClassMethods.html"," < ","= Active Record Transactions Transactions are protective blocks where SQL statements are only permanent",1],["UnknownAttributeError","ActiveRecord","classes\/ActiveRecord\/UnknownAttributeError.html"," < NoMethodError","Raised when unknown attributes are supplied via mass assignment. ",1],["UnknownPrimaryKey","ActiveRecord","classes\/ActiveRecord\/UnknownPrimaryKey.html"," < ActiveRecordError","Raised when a primary key is needed, but there is not one specified in the schema or model. ",1],["Validations","ActiveRecord","classes\/ActiveRecord\/Validations.html"," < ","= Active Record Validations Active Record includes the majority of its validations from <tt>ActiveModel::Validations<\/tt>",1],["AssociatedValidator","ActiveRecord::Validations","classes\/ActiveRecord\/Validations\/AssociatedValidator.html"," < ActiveModel::EachValidator","",1],["ClassMethods","ActiveRecord::Validations","classes\/ActiveRecord\/Validations\/ClassMethods.html"," < ","",1],["UniquenessValidator","ActiveRecord::Validations","classes\/ActiveRecord\/Validations\/UniquenessValidator.html"," < ActiveModel::EachValidator","",1],["WrappedDatabaseException","ActiveRecord","classes\/ActiveRecord\/WrappedDatabaseException.html"," < StatementInvalid","Parent class for all specific exceptions which wrap database driver exceptions provides access to the",1],["Base","ActiveResource","classes\/ActiveResource\/Base.html"," < Object","ActiveResource::Base is the main class for mapping RESTful resources as models in a Rails application.",1],["Connection","ActiveResource","classes\/ActiveResource\/Connection.html"," < Object","Class to handle connections to remote web services. This class is used by ActiveResource::Base to interface",1],["CustomMethods","ActiveResource","classes\/ActiveResource\/CustomMethods.html"," < ","A module to support custom REST methods and sub-resources, allowing you to break out of the \"default\"",1],["ClassMethods","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods\/ClassMethods.html"," < ","",1],["Errors","ActiveResource","classes\/ActiveResource\/Errors.html"," < ActiveModel::Errors","Active Resource validation is reported to and from this object, which is used by Base#save to determine",1],["Formats","ActiveResource","classes\/ActiveResource\/Formats.html"," < ","",1],["JsonFormat","ActiveResource::Formats","classes\/ActiveResource\/Formats\/JsonFormat.html"," < ","",1],["XmlFormat","ActiveResource::Formats","classes\/ActiveResource\/Formats\/XmlFormat.html"," < ","",1],["HttpMock","ActiveResource","classes\/ActiveResource\/HttpMock.html"," < Object","One thing that has always been a pain with remote web services is testing.  The HttpMock class makes",1],["InvalidRequestError","ActiveResource","classes\/ActiveResource\/InvalidRequestError.html"," < StandardError","",1],["LogSubscriber","ActiveResource","classes\/ActiveResource\/LogSubscriber.html"," < ActiveSupport::LogSubscriber","",1],["Observing","ActiveResource","classes\/ActiveResource\/Observing.html"," < ","",1],["Railtie","ActiveResource","classes\/ActiveResource\/Railtie.html"," < Rails::Railtie","",1],["Request","ActiveResource","classes\/ActiveResource\/Request.html"," < Object","",1],["Response","ActiveResource","classes\/ActiveResource\/Response.html"," < Object","",1],["SSLError","ActiveResource","classes\/ActiveResource\/SSLError.html"," < ConnectionError","Raised when a OpenSSL::SSL::SSLError occurs. ",1],["TimeoutError","ActiveResource","classes\/ActiveResource\/TimeoutError.html"," < ConnectionError","Raised when a Timeout::Error occurs. ",1],["Validations","ActiveResource","classes\/ActiveResource\/Validations.html"," < ","Module to support validation and errors with Active Resource objects. The module overrides Base#save",1],["Autoload","ActiveSupport","classes\/ActiveSupport\/Autoload.html"," < ","",1],["BacktraceCleaner","ActiveSupport","classes\/ActiveSupport\/BacktraceCleaner.html"," < Object","Backtraces often include many lines that are not relevant for the context under review. This makes it",1],["Base64","ActiveSupport","classes\/ActiveSupport\/Base64.html"," < ","",1],["Benchmarkable","ActiveSupport","classes\/ActiveSupport\/Benchmarkable.html"," < ","",1],["BufferedLogger","ActiveSupport","classes\/ActiveSupport\/BufferedLogger.html"," < Object","Inspired by the buffered logger idea by Ezra ",1],["Severity","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger\/Severity.html"," < ","",1],["Cache","ActiveSupport","classes\/ActiveSupport\/Cache.html"," < ","See ActiveSupport::Cache::Store for documentation. ",1],["Entry","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/Entry.html"," < Object","Entry that is put into caches. It supports expiration time on entries and can compress values to save",1],["FileStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/FileStore.html"," < Store","A cache store implementation which stores everything on the filesystem. FileStore implements the Strategy::LocalCache",1],["MemCacheStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/MemCacheStore.html"," < Store","A cache store implementation which stores data in Memcached: http:\/\/memcached.org\/ This is currently",1],["MemoryStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/MemoryStore.html"," < Store","A cache store implementation which stores everything into memory in the same process. If you're running",1],["NullStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/NullStore.html"," < Store","A cache store implementation which doesn't actually store anything. Useful in development and test environments",1],["Store","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/Store.html"," < Object","An abstract cache store class. There are multiple cache store implementations, each having its own additional",1],["Strategy","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/Strategy.html"," < ","",1],["LocalCache","ActiveSupport::Cache::Strategy","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache.html"," < ","Caches that implement LocalCache will be backed by an in-memory cache for the duration of a block. Repeated",1],["LocalStore","ActiveSupport::Cache::Strategy::LocalCache","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html"," < Store","Simple memory backed cache. This cache is not thread safe and is intended only for serving as a temporary",1],["Callbacks","ActiveSupport","classes\/ActiveSupport\/Callbacks.html"," < ","\\Callbacks are code hooks that are run at key points in an object's lifecycle. The typical use case is",1],["ClassMethods","ActiveSupport","classes\/ActiveSupport\/ClassMethods.html"," < ","",1],["Concern","ActiveSupport","classes\/ActiveSupport\/Concern.html"," < ","A typical module looks like this: module M def self.included(base) base.extend ClassMethods scope :disabled,",1],["Configurable","ActiveSupport","classes\/ActiveSupport\/Configurable.html"," < ","Configurable provides a <tt>config<\/tt> method to store and retrieve configuration options as an <tt>OrderedHash<\/tt>.",1],["ClassMethods","ActiveSupport::Configurable","classes\/ActiveSupport\/Configurable\/ClassMethods.html"," < ","",1],["Configuration","ActiveSupport::Configurable","classes\/ActiveSupport\/Configurable\/Configuration.html"," < ActiveSupport::InheritableOptions","",1],["ClassCache","ActiveSupport::Dependencies","classes\/ActiveSupport\/Dependencies\/ClassCache.html"," < Object","",1],["WatchStack","ActiveSupport::Dependencies","classes\/ActiveSupport\/Dependencies\/WatchStack.html"," < Object","The WatchStack keeps a stack of the modules being watched as files are loaded. If a file in the process",1],["Deprecation","ActiveSupport","classes\/ActiveSupport\/Deprecation.html"," < ","",1],["DescendantsTracker","ActiveSupport","classes\/ActiveSupport\/DescendantsTracker.html"," < ","This module provides an internal implementation to track descendants which is faster than iterating through",1],["Duration","ActiveSupport","classes\/ActiveSupport\/Duration.html"," < BasicObject","Provides accurate date and time measurements using Date#advance and Time#advance, respectively. It mainly",1],["FileUpdateChecker","ActiveSupport","classes\/ActiveSupport\/FileUpdateChecker.html"," < Object","\\FileUpdateChecker specifies the API used by Rails to watch files and control reloading. The API depends",1],["FileWatcher","ActiveSupport","classes\/ActiveSupport\/FileWatcher.html"," < Object","",1],["Backend","ActiveSupport::FileWatcher","classes\/ActiveSupport\/FileWatcher\/Backend.html"," < Object","",1],["Gzip","ActiveSupport","classes\/ActiveSupport\/Gzip.html"," < ","A convenient wrapper for the zlib standard library that allows compression\/decompression of strings with",1],["Stream","ActiveSupport::Gzip","classes\/ActiveSupport\/Gzip\/Stream.html"," < StringIO","",1],["HashWithIndifferentAccess","ActiveSupport","classes\/ActiveSupport\/HashWithIndifferentAccess.html"," < Hash","",1],["Inflector","ActiveSupport","classes\/ActiveSupport\/Inflector.html"," < ","The Inflector transforms words from singular to plural, class names to table names, modularized class",1],["Inflections","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector\/Inflections.html"," < Object","A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify",1],["InheritableOptions","ActiveSupport","classes\/ActiveSupport\/InheritableOptions.html"," < OrderedOptions","",1],["JSON","ActiveSupport","classes\/ActiveSupport\/JSON.html"," < ","",1],["CircularReferenceError","ActiveSupport::JSON::Encoding","classes\/ActiveSupport\/JSON\/Encoding\/CircularReferenceError.html"," < StandardError","",1],["Encoder","ActiveSupport::JSON::Encoding","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html"," < Object","",1],["Variable","ActiveSupport::JSON","classes\/ActiveSupport\/JSON\/Variable.html"," < String","Deprecated: A string that returns itself as its JSON-encoded form. ",1],["LogSubscriber","ActiveSupport","classes\/ActiveSupport\/LogSubscriber.html"," < Object","ActiveSupport::LogSubscriber is an object set to consume ActiveSupport::Notifications with the sole purpose",1],["TestHelper","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html"," < ","Provides some helpers to deal with testing log subscribers by setting up notifications. Take for instance",1],["MockLogger","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html"," < Object","",1],["Memoizable","ActiveSupport","classes\/ActiveSupport\/Memoizable.html"," < ","",1],["InstanceMethods","ActiveSupport::Memoizable","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html"," < ","",1],["MessageEncryptor","ActiveSupport","classes\/ActiveSupport\/MessageEncryptor.html"," < Object","MessageEncryptor is a simple way to encrypt values which get stored somewhere you don't trust. The cipher",1],["InvalidMessage","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor\/InvalidMessage.html"," < StandardError","",1],["MessageVerifier","ActiveSupport","classes\/ActiveSupport\/MessageVerifier.html"," < Object","+MessageVerifier+ makes it easy to generate and verify messages which are signed to prevent tampering.",1],["InvalidSignature","ActiveSupport::MessageVerifier","classes\/ActiveSupport\/MessageVerifier\/InvalidSignature.html"," < StandardError","",1],["Chars","ActiveSupport::Multibyte","classes\/ActiveSupport\/Multibyte\/Chars.html"," < Object","Chars enables you to work transparently with UTF-8 encoding in the Ruby String class without having extensive",1],["EncodingError","ActiveSupport::Multibyte","classes\/ActiveSupport\/Multibyte\/EncodingError.html"," < StandardError","Raised when a problem with the encoding was found. ",1],["Unicode","ActiveSupport::Multibyte","classes\/ActiveSupport\/Multibyte\/Unicode.html"," < ","",1],["Codepoint","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode\/Codepoint.html"," < Object","Holds data about a codepoint in the Unicode database ",1],["UnicodeDatabase","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html"," < Object","Holds static data from the Unicode database ",1],["Notifications","ActiveSupport","classes\/ActiveSupport\/Notifications.html"," < ","= Notifications +ActiveSupport::Notifications+ provides an instrumentation API for Ruby. == Instrumenters",1],["Event","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications\/Event.html"," < Object","",1],["Fanout","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications\/Fanout.html"," < Object","This is a default queue implementation that ships with Notifications. It just pushes events to all registered",1],["Instrumenter","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications\/Instrumenter.html"," < Object","",1],["OrderedHash","ActiveSupport","classes\/ActiveSupport\/OrderedHash.html"," < ::Hash","The order of iteration over hashes in Ruby 1.8 is undefined. For example, you do not know the order in",1],["OrderedOptions","ActiveSupport","classes\/ActiveSupport\/OrderedOptions.html"," < OrderedHash","",1],["Railtie","ActiveSupport","classes\/ActiveSupport\/Railtie.html"," < Rails::Railtie","",1],["Rescuable","ActiveSupport","classes\/ActiveSupport\/Rescuable.html"," < ","Rescuable module adds support for easier exception handling. ",1],["ClassMethods","ActiveSupport::Rescuable","classes\/ActiveSupport\/Rescuable\/ClassMethods.html"," < ","",1],["SafeBuffer","ActiveSupport","classes\/ActiveSupport\/SafeBuffer.html"," < String","",1],["SafeConcatError","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer\/SafeConcatError.html"," < StandardError","",1],["StringInquirer","ActiveSupport","classes\/ActiveSupport\/StringInquirer.html"," < String","Wrapping a string in this class gives you a prettier way to test for equality. The value returned by",1],["TaggedLogging","ActiveSupport","classes\/ActiveSupport\/TaggedLogging.html"," < Object","Wraps any standard Logger class to provide tagging capabilities. Examples: Logger = ActiveSupport::TaggedLogging.new(Logger.new(STDOUT))",1],["TestCase","ActiveSupport","classes\/ActiveSupport\/TestCase.html"," < ::Test::Unit::TestCase","",1],["Testing","ActiveSupport","classes\/ActiveSupport\/Testing.html"," < ","",1],["Assertions","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Assertions.html"," < ","",1],["Declarative","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Declarative.html"," < ","",1],["Isolation","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Isolation.html"," < ","",1],["Forking","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation\/Forking.html"," < ","",1],["MiniTest","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation\/MiniTest.html"," < ","",1],["Subprocess","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation\/Subprocess.html"," < ","",1],["TestUnit","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation\/TestUnit.html"," < ","",1],["Pending","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Pending.html"," < ","",1],["Performance","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Performance.html"," < ","",1],["Benchmarker","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html"," < Performer","",1],["ForClassicTestUnit","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/ForClassicTestUnit.html"," < ","",1],["ForMiniTest","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/ForMiniTest.html"," < ","",1],["Metrics","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/Metrics.html"," < ","",1],["Amount","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Amount.html"," < Base","",1],["Base","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html"," < Object","",1],["CpuTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html"," < Time","",1],["DigitalInformationUnit","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/DigitalInformationUnit.html"," < Base","",1],["GcRuns","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html"," < Amount","",1],["GcTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html"," < Time","",1],["Memory","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html"," < DigitalInformationUnit","",1],["Objects","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html"," < Amount","",1],["ProcessTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/ProcessTime.html"," < Time","",1],["Time","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html"," < Base","",1],["UserTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/UserTime.html"," < Time","",1],["WallTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/WallTime.html"," < Time","",1],["Performer","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/Performer.html"," < Object","",1],["Profiler","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html"," < Performer","overridden by each implementation ",1],["ProxyTestResult","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/ProxyTestResult.html"," < Object","",1],["RemoteError","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/RemoteError.html"," < StandardError","",1],["SetupAndTeardown","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/SetupAndTeardown.html"," < ","",1],["ClassMethods","ActiveSupport::Testing::SetupAndTeardown","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ClassMethods.html"," < ","",1],["ForClassicTestUnit","ActiveSupport::Testing::SetupAndTeardown","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ForClassicTestUnit.html"," < ","",1],["ForMiniTest","ActiveSupport::Testing::SetupAndTeardown","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ForMiniTest.html"," < ","",1],["TimeWithZone","ActiveSupport","classes\/ActiveSupport\/TimeWithZone.html"," < Object","A Time-like class that can represent a time in any time zone. Necessary because standard Ruby Time instances",1],["TimeZone","ActiveSupport","classes\/ActiveSupport\/TimeZone.html"," < Object","",1],["XmlMini","ActiveSupport","classes\/ActiveSupport\/XmlMini.html"," < ","= XmlMini To use the much faster libxml parser: gem 'libxml-ruby', '=0.9.7' XmlMini.backend = 'LibXML'",1],["XmlMini_LibXMLSAX","ActiveSupport","classes\/ActiveSupport\/XmlMini_LibXMLSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_LibXMLSAX","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html"," < Object","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["XmlMini_NokogiriSAX","ActiveSupport","classes\/ActiveSupport\/XmlMini_NokogiriSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_NokogiriSAX","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html"," < Nokogiri::XML::SAX::Document","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["Error","ArJdbcMySQL","classes\/ArJdbcMySQL\/Error.html"," < StandardError","",1],["Array","activesupport\/lib\/active_support\/core_ext\/array\/random_access.rb","classes\/Array.html"," < Object","",1],["Base64","activesupport\/lib\/active_support\/base64.rb","classes\/Base64.html"," < ","The Base64 module isn't available in earlier versions of Ruby 1.9. ",1],["BigDecimal","activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions.rb","classes\/BigDecimal.html"," < Object","",1],["Css","railties\/lib\/rails\/generators\/css\/assets\/assets_generator.rb","classes\/Css.html"," < ","",1],["Generators","Css","classes\/Css\/Generators.html"," < ","",1],["AssetsGenerator","Css::Generators","classes\/Css\/Generators\/AssetsGenerator.html"," < Rails::Generators::NamedBase","",1],["ScaffoldGenerator","Css::Generators","classes\/Css\/Generators\/ScaffoldGenerator.html"," < Rails::Generators::NamedBase","",1],["DateTime","activesupport\/lib\/active_support\/core_ext\/date_time\/zones.rb","classes\/DateTime.html"," < Object","",1],["ERB","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","classes\/ERB.html"," < Object","",1],["Util","ERB","classes\/ERB\/Util.html"," < ","",1],["Enumerable","activesupport\/lib\/active_support\/core_ext\/enumerable.rb","classes\/Enumerable.html"," < ","",1],["Erb","railties\/lib\/rails\/generators\/erb.rb","classes\/Erb.html"," < ","",1],["Generators","Erb","classes\/Erb\/Generators.html"," < ","",1],["ControllerGenerator","Erb::Generators","classes\/Erb\/Generators\/ControllerGenerator.html"," < Base","",1],["MailerGenerator","Erb::Generators","classes\/Erb\/Generators\/MailerGenerator.html"," < ControllerGenerator","",1],["ScaffoldGenerator","Erb::Generators","classes\/Erb\/Generators\/ScaffoldGenerator.html"," < Base","",1],["FalseClass","activesupport\/lib\/active_support\/core_ext\/object\/blank.rb","classes\/FalseClass.html"," < Object","",1],["File","activesupport\/lib\/active_support\/core_ext\/file\/atomic.rb","classes\/File.html"," < Object","",1],["Float","activesupport\/lib\/active_support\/core_ext\/float\/rounding.rb","classes\/Float.html"," < Object","",1],["Hash","activesupport\/lib\/active_support\/core_ext\/hash\/slice.rb","classes\/Hash.html"," < Object","",1],["I18n","actionpack\/lib\/action_view\/helpers\/translation_helper.rb","classes\/I18n.html"," < ","",1],["ExceptionHandler","I18n","classes\/I18n\/ExceptionHandler.html"," < Object","",1],["Railtie","I18n","classes\/I18n\/Railtie.html"," < Rails::Railtie","",1],["Integer","activesupport\/lib\/active_support\/core_ext\/integer\/time.rb","classes\/Integer.html"," < Object","",1],["Js","railties\/lib\/rails\/generators\/js\/assets\/assets_generator.rb","classes\/Js.html"," < ","",1],["Generators","Js","classes\/Js\/Generators.html"," < ","",1],["AssetsGenerator","Js::Generators","classes\/Js\/Generators\/AssetsGenerator.html"," < Rails::Generators::NamedBase","",1],["Kernel","activesupport\/lib\/active_support\/core_ext\/kernel\/debugger.rb","classes\/Kernel.html"," < ","",1],["LoadError","activesupport\/lib\/active_support\/core_ext\/load_error.rb","classes\/LoadError.html"," < Object","",1],["SimpleFormatter","Logger","classes\/Logger\/SimpleFormatter.html"," < Logger::Formatter","Simple formatter which only displays the message. ",1],["Mime","actionpack\/lib\/action_dispatch\/http\/mime_type.rb","classes\/Mime.html"," < ","",1],["Mimes","Mime","classes\/Mime\/Mimes.html"," < Array","",1],["Type","Mime","classes\/Mime\/Type.html"," < Object","Encapsulates the notion of a mime type. Can be used at render time, for example, with: class PostsController",1],["Module","activesupport\/lib\/active_support\/core_ext\/module\/reachable.rb","classes\/Module.html"," < Object","Extends the API for constants to be able to deal with qualified names. Arguments are assumed to be relative",1],["Mysql","activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter.rb","classes\/Mysql.html"," < Object","",1],["Result","Mysql","classes\/Mysql\/Result.html"," < Object","",1],["Stmt","Mysql","classes\/Mysql\/Stmt.html"," < Object","",1],["Time","Mysql","classes\/Mysql\/Time.html"," < Object","",1],["NameError","activesupport\/lib\/active_support\/core_ext\/name_error.rb","classes\/NameError.html"," < Object","",1],["NilClass","activesupport\/lib\/active_support\/core_ext\/object\/blank.rb","classes\/NilClass.html"," < Object","Extensions to +nil+ which allow for more helpful error messages for people who are new to Rails. NilClass#id",1],["Object","activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics.rb","classes\/Object.html"," < Object"," ",1],["Plugin","railties\/lib\/rails\/commands\/plugin.rb","classes\/Plugin.html"," < Object","",1],["Process","activesupport\/lib\/active_support\/core_ext\/process\/daemon.rb","classes\/Process.html"," < ","",1],["QualifiedConstUtils","activesupport\/lib\/active_support\/core_ext\/module\/qualified_const.rb","classes\/QualifiedConstUtils.html"," < "," ",1],["Rails","railties\/lib\/rails.rb","classes\/Rails.html"," < ","",1],["ActionMethods","Rails","classes\/Rails\/ActionMethods.html"," < ","",1],["AppBuilder","Rails","classes\/Rails\/AppBuilder.html"," < Object","The application builder allows you to override elements of the application generator without being forced",1],["Application","Rails","classes\/Rails\/Application.html"," < Engine","In Rails 3.0, a Rails::Application object was introduced which is nothing more than an Engine but with",1],["Bootstrap","Rails::Application","classes\/Rails\/Application\/Bootstrap.html"," < ","",1],["Configuration","Rails::Application","classes\/Rails\/Application\/Configuration.html"," < ::Rails::Engine::Configuration","",1],["Finisher","Rails::Application","classes\/Rails\/Application\/Finisher.html"," < ","",1],["Railties","Rails::Application","classes\/Rails\/Application\/Railties.html"," < Rails::Engine","",1],["RoutesReloader","Rails::Application","classes\/Rails\/Application\/RoutesReloader.html"," < Object","",1],["BacktraceCleaner","Rails","classes\/Rails\/BacktraceCleaner.html"," < ActiveSupport::BacktraceCleaner","",1],["Commands","Rails","classes\/Rails\/Commands.html"," < ","",1],["Info","Rails::Commands","classes\/Rails\/Commands\/Info.html"," < Object","",1],["Install","Rails::Commands","classes\/Rails\/Commands\/Install.html"," < Object","",1],["Plugin","Rails::Commands","classes\/Rails\/Commands\/Plugin.html"," < Object","",1],["Remove","Rails::Commands","classes\/Rails\/Commands\/Remove.html"," < Object","",1],["Configuration","Rails","classes\/Rails\/Configuration.html"," < ","",1],["Console","Rails","classes\/Rails\/Console.html"," < Object","",1],["ConsoleMethods","Rails","classes\/Rails\/ConsoleMethods.html"," < ","",1],["DBConsole","Rails","classes\/Rails\/DBConsole.html"," < Object","",1],["Engine","Rails","classes\/Rails\/Engine.html"," < Railtie","<tt>Rails::Engine<\/tt> allows you to wrap a specific Rails application or subset of functionality and",1],["Configuration","Rails::Engine","classes\/Rails\/Engine\/Configuration.html"," < ::Rails::Railtie::Configuration","",1],["Railties","Rails::Engine","classes\/Rails\/Engine\/Railties.html"," < Object","",1],["Generators","Rails","classes\/Rails\/Generators.html"," < ","",1],["Actions","Rails::Generators","classes\/Rails\/Generators\/Actions.html"," < ","",1],["ActiveModel","Rails::Generators","classes\/Rails\/Generators\/ActiveModel.html"," < Object","ActiveModel is a class to be implemented by each ORM to allow Rails to generate customized controller",1],["AppBase","Rails::Generators","classes\/Rails\/Generators\/AppBase.html"," < Base","",1],["AppGenerator","Rails::Generators","classes\/Rails\/Generators\/AppGenerator.html"," < AppBase","",1],["AssetsGenerator","Rails::Generators","classes\/Rails\/Generators\/AssetsGenerator.html"," < NamedBase","",1],["Base","Rails::Generators","classes\/Rails\/Generators\/Base.html"," < Thor::Group","",1],["ControllerGenerator","Rails::Generators","classes\/Rails\/Generators\/ControllerGenerator.html"," < NamedBase","",1],["Error","Rails::Generators","classes\/Rails\/Generators\/Error.html"," < Thor::Error","",1],["GeneratedAttribute","Rails::Generators","classes\/Rails\/Generators\/GeneratedAttribute.html"," < Object","",1],["GeneratorGenerator","Rails::Generators","classes\/Rails\/Generators\/GeneratorGenerator.html"," < NamedBase","",1],["HelperGenerator","Rails::Generators","classes\/Rails\/Generators\/HelperGenerator.html"," < NamedBase","",1],["IntegrationTestGenerator","Rails::Generators","classes\/Rails\/Generators\/IntegrationTestGenerator.html"," < NamedBase","",1],["Migration","Rails::Generators","classes\/Rails\/Generators\/Migration.html"," < ","Holds common methods for migrations. It assumes that migrations has the [0-9]*_name format and can be",1],["ClassMethods","Rails::Generators::Migration","classes\/Rails\/Generators\/Migration\/ClassMethods.html"," < ","",1],["MigrationGenerator","Rails::Generators","classes\/Rails\/Generators\/MigrationGenerator.html"," < NamedBase","",1],["ModelGenerator","Rails::Generators","classes\/Rails\/Generators\/ModelGenerator.html"," < NamedBase","",1],["NamedBase","Rails::Generators","classes\/Rails\/Generators\/NamedBase.html"," < Base","",1],["ObserverGenerator","Rails::Generators","classes\/Rails\/Generators\/ObserverGenerator.html"," < NamedBase","",1],["PerformanceTestGenerator","Rails::Generators","classes\/Rails\/Generators\/PerformanceTestGenerator.html"," < NamedBase","",1],["PluginNewGenerator","Rails::Generators","classes\/Rails\/Generators\/PluginNewGenerator.html"," < AppBase","",1],["ResourceGenerator","Rails::Generators","classes\/Rails\/Generators\/ResourceGenerator.html"," < ModelGenerator","",1],["ResourceHelpers","Rails::Generators","classes\/Rails\/Generators\/ResourceHelpers.html"," < ","Deal with controller names on scaffold and add some helpers to deal with ActiveModel. ",1],["ResourceRouteGenerator","Rails::Generators","classes\/Rails\/Generators\/ResourceRouteGenerator.html"," < NamedBase","",1],["ScaffoldControllerGenerator","Rails::Generators","classes\/Rails\/Generators\/ScaffoldControllerGenerator.html"," < NamedBase","",1],["ScaffoldGenerator","Rails::Generators","classes\/Rails\/Generators\/ScaffoldGenerator.html"," < ResourceGenerator","",1],["SessionMigrationGenerator","Rails::Generators","classes\/Rails\/Generators\/SessionMigrationGenerator.html"," < NamedBase","",1],["TaskGenerator","Rails::Generators","classes\/Rails\/Generators\/TaskGenerator.html"," < NamedBase","",1],["TestCase","Rails::Generators","classes\/Rails\/Generators\/TestCase.html"," < ActiveSupport::TestCase","This class provides a TestCase for testing generators. To setup, you need just to configure the destination",1],["Info","Rails","classes\/Rails\/Info.html"," < ","",1],["InfoController","Rails","classes\/Rails\/InfoController.html"," < ActionController::Base","",1],["Initializable","Rails","classes\/Rails\/Initializable.html"," < ","",1],["ClassMethods","Rails::Initializable","classes\/Rails\/Initializable\/ClassMethods.html"," < ","",1],["Collection","Rails::Initializable","classes\/Rails\/Initializable\/Collection.html"," < Array","",1],["Initializer","Rails::Initializable","classes\/Rails\/Initializable\/Initializer.html"," < Object","",1],["Paths","Rails","classes\/Rails\/Paths.html"," < ","",1],["Path","Rails::Paths","classes\/Rails\/Paths\/Path.html"," < Array","",1],["Root","Rails::Paths","classes\/Rails\/Paths\/Root.html"," < ::Hash","This object is an extended hash that behaves as root of the <tt>Rails::Paths<\/tt> system. It allows you",1],["Plugin","Rails","classes\/Rails\/Plugin.html"," < Engine","Rails::Plugin is nothing more than a Rails::Engine, but since it's loaded too late in the boot process,",1],["PluginBuilder","Rails","classes\/Rails\/PluginBuilder.html"," < Object","",1],["Rack","Rails","classes\/Rails\/Rack.html"," < ","",1],["Debugger","Rails::Rack","classes\/Rails\/Rack\/Debugger.html"," < Object","",1],["LogTailer","Rails::Rack","classes\/Rails\/Rack\/LogTailer.html"," < Object","",1],["Logger","Rails::Rack","classes\/Rails\/Rack\/Logger.html"," < ActiveSupport::LogSubscriber","Log the request started and flush all loggers after it. ",1],["Railtie","Rails","classes\/Rails\/Railtie.html"," < Object","Railtie is the core of the Rails framework and provides several hooks to extend Rails and\/or modify the",1],["Configurable","Rails::Railtie","classes\/Rails\/Railtie\/Configurable.html"," < ","",1],["ClassMethods","Rails::Railtie::Configurable","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html"," < ","",1],["Configuration","Rails::Railtie","classes\/Rails\/Railtie\/Configuration.html"," < Object","",1],["ScriptRailsLoader","Rails","classes\/Rails\/ScriptRailsLoader.html"," < ","",1],["Server","Rails","classes\/Rails\/Server.html"," < ::Rack::Server","",1],["Options","Rails::Server","classes\/Rails\/Server\/Options.html"," < Object","",1],["SubTestTask","Rails","classes\/Rails\/SubTestTask.html"," < Rake::TestTask","Silence the default description to cut down on `rake -T` noise. ",1],["TestUnitRailtie","Rails","classes\/Rails\/TestUnitRailtie.html"," < Rails::Railtie","",1],["RailsEnvironment","railties\/lib\/rails\/commands\/plugin.rb","classes\/RailsEnvironment.html"," < Object","",1],["RecursiveHTTPFetcher","railties\/lib\/rails\/commands\/plugin.rb","classes\/RecursiveHTTPFetcher.html"," < Object","",1],["SourceAnnotationExtractor","railties\/lib\/rails\/source_annotation_extractor.rb","classes\/SourceAnnotationExtractor.html"," < Object","Implements the logic behind the rake tasks for annotations like rake notes rake notes:optimize and friends.",1],["Annotation","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor\/Annotation.html"," < Struct.new(:line, :tag, :text)","",1],["String","activesupport\/lib\/active_support\/core_ext\/string\/encoding.rb","classes\/String.html"," < Object","String inflections define new methods on the String class to transform names for different purposes.",1],["Symbol","activesupport\/lib\/active_support\/core_ext\/object\/duplicable.rb","classes\/Symbol.html"," < Object","",1],["Test","activesupport\/lib\/active_support\/testing\/deprecation.rb","classes\/Test.html"," < ","",1],["Unit","Test","classes\/Test\/Unit.html"," < ","",1],["Collector","Test::Unit","classes\/Test\/Unit\/Collector.html"," < ","",1],["ObjectSpace","Test::Unit::Collector","classes\/Test\/Unit\/Collector\/ObjectSpace.html"," < Object","",1],["TestUnit","railties\/lib\/rails\/generators\/test_unit.rb","classes\/TestUnit.html"," < ","",1],["Generators","TestUnit","classes\/TestUnit\/Generators.html"," < ","",1],["ControllerGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/ControllerGenerator.html"," < Base","",1],["HelperGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/HelperGenerator.html"," < Base","",1],["IntegrationGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/IntegrationGenerator.html"," < Base","",1],["MailerGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/MailerGenerator.html"," < Base","",1],["ModelGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/ModelGenerator.html"," < Base","",1],["ObserverGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/ObserverGenerator.html"," < Base","",1],["PerformanceGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/PerformanceGenerator.html"," < Base","",1],["PluginGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/PluginGenerator.html"," < Base","",1],["ScaffoldGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/ScaffoldGenerator.html"," < Base","",1],["Time","activesupport\/lib\/active_support\/core_ext\/time\/zones.rb","classes\/Time.html"," < Object","",1],["TrueClass","activesupport\/lib\/active_support\/core_ext\/object\/blank.rb","classes\/TrueClass.html"," < Object","",1],["URI","activesupport\/lib\/active_support\/core_ext\/uri.rb","classes\/URI.html"," < ","",1],["+","ActiveModel::MassAssignmentSecurity::PermissionSet","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html#M004090","(values)","",2],["+","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M003890","(other)","Adds another Duration or a Numeric to this Duration. Numeric values are treated as seconds. ",2],["+","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003356","(other)","Returns a new Chars object containing the _other_ object concatenated to the string. Example: ('Caf\u00e9'.mb_chars",2],["+","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003078","(other)","",2],["+","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003279","(other)","",2],["+","Rails::Initializable::Collection","classes\/Rails\/Initializable\/Collection.html#M000068","(other)","",2],["-","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M003891","(other)","Subtracts another Duration or a Numeric from this Duration. Numeric values are treated as seconds. ",2],["-","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003280","(other)","",2],["-","Time","classes\/Time.html#M002930","(other)","Alias for #minus_with_coercion",2],["<<","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003077","(value)","Alias for #concat",2],["<=>","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001422","(other_object)","Allows sort on objects ",2],["<=>","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html#M000750","(version_string)","",2],["<=>","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003354","(other)","Returns -1, 0, or 1, depending on whether the Chars object is to be sorted before, equal or after the",2],["<=>","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003272","(other)","Use the time in UTC for comparisons. ",2],["<=>","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003496","(zone)","Compare this time zone to the parameter. The two are compared first on their offsets, and then by name.",2],["<=>","DateTime","classes\/DateTime.html#M003229","(other)","Layers additional behavior on DateTime#<=> so that Time and ActiveSupport::TimeWithZone instances can",2],["<=>","Time","classes\/Time.html#M002934","(other)","Alias for #compare_with_coercion",2],["==","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M002268","(middleware)","",2],["==","ActionView::FileSystemResolver","classes\/ActionView\/FileSystemResolver.html#M002472","(resolver)","Alias for #eql?",2],["==","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001417","(comparison_object)","Returns true if +comparison_object+ is the same exact object, or +comparison_object+ is of the same type",2],["==","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001582","(other)","Test for equality.  Resource are equal if and only if +other+ is the same object or is an instance of",2],["==","ActiveResource::Request","classes\/ActiveResource\/Request.html#M001490","(req)","",2],["==","ActiveResource::Response","classes\/ActiveResource\/Response.html#M001497","(other)","Returns true if the other is a Response with an equal body, equal message and equal headers. Otherwise",2],["==","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M003894","(other)","Returns true if <tt>other<\/tt> is also a Duration instance with the same <tt>value<\/tt>, or if <tt>other",2],["==","Mime::Type","classes\/Mime\/Type.html#M002203","(mime_type)","",2],["===","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001408","(object)","Overwrite the default class equality method to provide support for association proxies. ",2],["===","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M003404","(other)","",2],["===","Mime::Type","classes\/Mime\/Type.html#M002202","(list)","",2],["===","Time","classes\/Time.html#M002867","(other)","Overriding case equality method so that it returns true for ActiveSupport::TimeWithZone instances ",2],["=~","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003370","(other)","",2],["=~","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003357","(other)","Like <tt>String#=~<\/tt> only it returns the character offset (in codepoints) instead of the byte offset.",2],["=~","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003497","(re)","Compare #name and TZInfo identifier to a supplied regexp, returning true if a match is found. ",2],["=~","Mime::Type","classes\/Mime\/Type.html#M002204","(mime_type)","",2],["GET","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002117","()","Override Rack's GET method to support indifferent access ",2],["POST","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002119","()","Override Rack's POST method to support indifferent access ",2],["[]","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002213","(k)","",2],["[]","ActionDispatch::Http::Headers","classes\/ActionDispatch\/Http\/Headers.html#M002127","(header_name)","",2],["[]","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002276","(i)","",2],["[]","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003982","(attribute)","When passed a symbol or a name of a method, returns an array of errors for the method. p.errors[:name]",2],["[]","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html#M000844","(key)","",2],["[]","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001061","(key)","",2],["[]","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/StatementPool.html#M000754","(key)","",2],["[]","ActiveRecord::ConnectionAdapters::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html#M000826","(key)","",2],["[]","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000936","(name)","Returns a ColumnDefinition for the column with name +name+. ",2],["[]","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000600","(x)","",2],["[]","ActiveResource::Formats","classes\/ActiveResource\/Formats.html#M001480","(mime_type_reference)","Lookup the format class from a mime type reference symbol. Example: ActiveResource::Formats[:xml]  #",2],["[]","ActiveResource::Response","classes\/ActiveResource\/Response.html#M001495","(key)","",2],["[]","ActiveSupport::Dependencies::ClassCache","classes\/ActiveSupport\/Dependencies\/ClassCache.html#M003312","(key)","Alias for #get",2],["[]","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003375","(*args)","Alias for #slice",2],["[]","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003680","(*args)","",2],["[]","ActiveSupport::OrderedOptions","classes\/ActiveSupport\/OrderedOptions.html#M003598","(key)","",2],["[]","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003070","(*args)","",2],["[]","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics.html#M003817","(name)","",2],["[]","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003513","(arg)","Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of",2],["[]","Mime","classes\/Mime.html#M002189","(type)","",2],["[]=","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003983","(attribute, error)","Adds to the supplied attribute the supplied error message. p.errors[:name] = \"must be set\" p.errors[:name]",2],["[]=","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html#M000847","(sql, key)","",2],["[]=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001064","(sql, key)","",2],["[]=","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/StatementPool.html#M000756","(sql, key)","",2],["[]=","ActiveRecord::ConnectionAdapters::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html#M000828","(sql, key)","",2],["[]=","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000601","(k,v)","",2],["[]=","ActiveResource::Response","classes\/ActiveResource\/Response.html#M001496","(key, value)","",2],["[]=","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003449","(key, value)","Assigns a new value to the hash: hash = HashWithIndifferentAccess.new hash[:key] = \"value\" ",2],["[]=","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003372","(*args)","Like <tt>String#[]=<\/tt>, except instead of byte offsets you specify character offsets. Example: s =",2],["[]=","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003682","(key, value)","",2],["[]=","ActiveSupport::OrderedOptions","classes\/ActiveSupport\/OrderedOptions.html#M003597","(key, value)","",2],["[]=","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000042","(path, value)","",2],["__callback_runner_name","ActiveSupport::ClassMethods","classes\/ActiveSupport\/ClassMethods.html#M003883","(key, kind)","",2],["__replay__","ActiveSupport::Testing::ProxyTestResult","classes\/ActiveSupport\/Testing\/ProxyTestResult.html#M003785","(result)","",2],["__reset_runner","ActiveSupport::ClassMethods","classes\/ActiveSupport\/ClassMethods.html#M003882","(symbol)","",2],["_all_autoload_once_paths","Rails::Engine","classes\/Rails\/Engine.html#M000514","()","",2],["_all_autoload_paths","Rails::Engine","classes\/Rails\/Engine.html#M000515","()","",2],["_all_load_paths","Rails::Engine","classes\/Rails\/Engine.html#M000516","()","",2],["_attribute","ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead","classes\/ActiveRecord\/AttributeMethods\/DeprecatedUnderscoreRead.html#M001357","(attr_name)","",2],["_dasherize","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M003650","(key)","",2],["_dump","Time","classes\/Time.html#M002941","(*args)","",2],["_dump","Time","classes\/Time.html#M002946","(*args)","",2],["_dump_without_utc_flag","Time","classes\/Time.html#M002942","(*args)","Alias for #_dump",2],["_dump_without_zone","Time","classes\/Time.html#M002945","(*args)","Alias for #_dump",2],["_get","ActiveSupport::OrderedOptions","classes\/ActiveSupport\/OrderedOptions.html#M003599","(key)","Alias for #[]",2],["_handle_method_missing","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M001771","()","",2],["_handle_render_options","ActionController::Renderers","classes\/ActionController\/Renderers.html#M001901","(options)","",2],["_implied_layout_name","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods.html#M001708","()","If no layout is supplied, look for a template named the return value of this method. ==== Returns * <tt>String<\/tt>",2],["_insert_callbacks","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001722","(callbacks, block)","Take callback names and an optional callback proc, normalize them, then call the block with each callback.",2],["_layout_for","ActionView::Context","classes\/ActionView\/Context.html#M002458","(name=nil)","Encapsulates the interaction with the view flow so it returns the correct buffer on yield. This is usually",2],["_layout_for","ActionView::Helpers::RenderingHelper","classes\/ActionView\/Helpers\/RenderingHelper.html#M002709","(*args, &block)","Overwrites _layout_for in the context object so it supports the case a block is passed to a partial.",2],["_load","Time","classes\/Time.html#M002943","(marshaled_time)","",2],["_load","Time","classes\/Time.html#M002939","(marshaled_time)","",2],["_load_without_utc_flag","Time","classes\/Time.html#M002940","(marshaled_time)","Alias for #_load",2],["_load_without_zone","Time","classes\/Time.html#M002944","(marshaled_time)","Alias for #_load",2],["_normalize_callback_options","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001720","(options)","If :only or :except are used, convert the options into the primitive form (:per_key) used by ActiveSupport::Callbacks.",2],["_normalize_options","AbstractController::Layouts","classes\/AbstractController\/Layouts.html#M001710","(options)","",2],["_normalize_options","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M001769","(options)","",2],["_original_to_s","BigDecimal","classes\/BigDecimal.html#M002990","(format = DEFAULT_STRING_FORMAT)","Alias for #to_s",2],["_parse_file","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M003652","(file, entity)","",2],["_prefixes","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M001696","()","The prefixes used in render \"foo\" shortcuts. ",2],["_prepare_context","ActionView::Context","classes\/ActionView\/Context.html#M002457","()","Prepares the context by setting the appropriate instance variables. :api: plugin ",2],["_routes","AbstractController::UrlFor","classes\/AbstractController\/UrlFor.html#M001680","()","",2],["_routes","AbstractController::UrlFor::ClassMethods","classes\/AbstractController\/UrlFor\/ClassMethods.html#M001681","()","",2],["_routes_context","ActionDispatch::Routing::UrlFor","classes\/ActionDispatch\/Routing\/UrlFor.html#M002048","()","",2],["_routes_context","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002573","()","",2],["_run_class_setup","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation.html#M003789","()","",2],["_save_fragment","ActionController::Caching::Actions","classes\/ActionController\/Caching\/Actions.html#M001920","(name, options)","",2],["_set_detail","ActionView::LookupContext::DetailsCache","classes\/ActionView\/LookupContext\/DetailsCache.html#M002445","(key, value)","",2],["_set_wrapper_defaults","ActionController::ParamsWrapper::ClassMethods","classes\/ActionController\/ParamsWrapper\/ClassMethods.html#M001848","(options, model=nil)","",2],["_to_partial_path","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002643","()","",2],["_validates_default_keys","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M004032","()","When creating custom validators, it might be useful to be able to specify additional default keys. This",2],["_with_routes","ActionDispatch::Routing::UrlFor","classes\/ActionDispatch\/Routing\/UrlFor.html#M002047","(routes)","",2],["_write_layout_method","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods.html#M001709","()","Creates a _layout method to be called by _default_layout . If a layout is not explicitly mentioned then",2],["abstract!","AbstractController::Base","classes\/AbstractController\/Base.html#M001663","()","Define a controller as abstract. See internal_methods for more details. ",2],["abstract_class?","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001265","()","Returns whether this class is an abstract class or not. ",2],["abstract_railtie?","Rails::Railtie","classes\/Rails\/Railtie.html#M000387","()","",2],["accept=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002362","(mime_types)","",2],["accepts","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002055","()","Returns the accepted MIME type for the request. ",2],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","classes\/ActiveRecord\/NestedAttributes\/ClassMethods.html#M001274","(*attr_names)","Defines an attributes writer for the specified association(s). If you are using <tt>attr_protected<\/tt>",2],["accessible_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M004062","(role = :default)","",2],["acronym","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003338","(word)","Specifies a new acronym. An acronym must be specified as it will appear in a camelized string.  An underscore",2],["action","ActionController::Metal","classes\/ActionController\/Metal.html#M001756","(name, klass = ActionDispatch::Request)","Return a rack endpoint for the given action. Memoize the endpoint, so multiple calls into MyController.action",2],["action=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002357","(action_name)","",2],["action_has_layout?","AbstractController::Layouts","classes\/AbstractController\/Layouts.html#M001712","()","",2],["action_methods","AbstractController::Base","classes\/AbstractController\/Base.html#M001672","()","",2],["action_methods","AbstractController::Base","classes\/AbstractController\/Base.html#M001666","()","A list of method names that should be considered actions. This includes all public instance methods on",2],["action_methods","AbstractController::UrlFor::ClassMethods","classes\/AbstractController\/UrlFor\/ClassMethods.html#M001682","()","",2],["action_methods","ActionController::HideActions::ClassMethods","classes\/ActionController\/HideActions\/ClassMethods.html#M001788","()","Overrides AbstractController::Base#action_methods to remove any methods that are listed as hidden methods.",2],["active?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000725","()","Checks whether the connection to the database is still active. This includes checking whether the database",2],["active?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001173","()","CONNECTION MANAGEMENT ==================================== ",2],["active?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000857","()","CONNECTION MANAGEMENT ==================================== ",2],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001072","()","Is this connection alive and ready for queries? ",2],["active_authorizer","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M004064","()","Alias for #active_authorizers",2],["active_authorizers","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M004063","()","",2],["active_connection?","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000975","()","Is there an open connection that is being used for the current thread? ",2],["active_connections?","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000997","()","Returns true if there are any active connections among the connection pools that the ConnectionHandler",2],["acts_like?","Object","classes\/Object.html#M003163","(duck)","A duck-type assistant method. For example, Active Support extends Date to define an acts_like_date? method,",2],["acts_like_date?","DateTime","classes\/DateTime.html#M003188","()","Duck-types as a Date-like class. See Object#acts_like?. ",2],["acts_like_string?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003352","()","Enable more predictable duck-typing on String-like classes. See Object#acts_like?. ",2],["acts_like_string?","String","classes\/String.html#M003061","()","Enable more predictable duck-typing on String-like classes. See <tt>Object#acts_like?<\/tt>. ",2],["acts_like_time?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003291","()","So that +self+ <tt>acts_like?(:time)<\/tt>. ",2],["acts_like_time?","DateTime","classes\/DateTime.html#M003189","()","Duck-types as a Time-like class. See Object#acts_like?. ",2],["acts_like_time?","Time","classes\/Time.html#M002859","()","Duck-types as a Time-like class. See Object#acts_like?. ",2],["adapter_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000712","()","Returns the human-readable name of the adapter. Use mixed case - one can always use downcase if needed.",2],["adapter_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001055","()","Returns 'PostgreSQL' as adapter name for identification purposes. ",2],["add","ActionController::Renderers","classes\/ActionController\/Renderers.html#M001902","(key, &block)","Adds a new renderer to call within controller actions. A renderer is invoked by passing its name as an",2],["add","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003995","(attribute, message = nil, options = {})","Adds +message+ to the error messages on +attribute+. More than one error can be added to the same +attribute+.",2],["add","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003591","(severity, message = nil, progname = nil, &block)","",2],["add","ActiveSupport::TaggedLogging","classes\/ActiveSupport\/TaggedLogging.html#M003418","(severity, message = nil, progname = nil, &block)","",2],["add","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000043","(path, options={})","",2],["add_column","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001234","(table_name, column_name, type, options = {})","",2],["add_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001136","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000918","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column_position!","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001240","(sql, options)","",2],["add_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001250","(table_name, column_name, type, options = {})","",2],["add_error","ActiveSupport::Testing::ProxyTestResult","classes\/ActiveSupport\/Testing\/ProxyTestResult.html#M003784","(e)","",2],["add_expr_escaped","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M002476","(src, code)","",2],["add_expr_literal","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M002475","(src, code)","",2],["add_filter","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M003476","(&block)","Adds a filter from the block provided. Each line in the backtrace will be mapped against this filter.",2],["add_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000924","(table_name, column_name, options = {})","Adds a new index to the table. +column_name+ can be a single Symbol, or an Array of Symbols. The index",2],["add_index_length","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001247","(option_strings, column_names, options = {})","",2],["add_index_options","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000970","(table_name, column_name, options = {})","",2],["add_index_sort_order","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000967","(option_strings, column_names, options = {})","",2],["add_index_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001254","(table_name, column_name, options = {})","",2],["add_observer","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M003940","(observer)","Add a new observer to the pool. The new observer needs to respond to 'update', otherwise it raises an",2],["add_on_blank","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003997","(attributes, options = {})","Will add an error message to each of the attributes in +attributes+ that is blank (using Object#blank?).",2],["add_on_empty","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003996","(attributes, options = {})","Will add an error message to each of the attributes in +attributes+ that is empty. ",2],["add_postamble","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M002477","(src)","",2],["add_preamble","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M002473","(src)","",2],["add_resource_route","Rails::Generators::ResourceRouteGenerator","classes\/Rails\/Generators\/ResourceRouteGenerator.html#M000312","()","",2],["add_routes","Rails::Generators::ControllerGenerator","classes\/Rails\/Generators\/ControllerGenerator.html#M000263","()","",2],["add_shared_options_for","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000240","(name)","",2],["add_shebang_option!","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000191","()","Small macro to add ruby as an option to the generator with proper default value plus an instance helper",2],["add_silencer","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M003477","(&block)","Adds a silencer from the block provided. If the silencer returns true for a given line, it will be excluded",2],["add_source","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000147","(source, options={})","Add the given source to Gemfile ==== Example add_source \"http:\/\/gems.github.com\/\" ",2],["add_text","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M002474","(src, text)","",2],["add_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000965","(table_name)","Adds timestamps (created_at and updated_at) columns to the named table. ===== Examples add_timestamps(:suppliers)",2],["add_timestamps_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001256","(table_name)","",2],["add_to_transaction","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M000579","()","Add the record to the current transaction so that the :after_rollback and :after_commit callbacks can",2],["add_transaction_record","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001026","(record)","Register a record with the current transaction so that its after_commit and after_rollback callbacks",2],["add_whiner","NilClass","classes\/NilClass.html#M003483","(klass)","",2],["added?","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003998","(attribute, message = nil, options = {})","Returns true if an error on the attribute with the given message is present, false otherwise. +message+",2],["advance","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003283","(options)","",2],["advance","DateTime","classes\/DateTime.html#M003211","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["advance","Time","classes\/Time.html#M002878","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["after","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M002320","(*args, &block)","",2],["after","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M000063","()","",2],["after_commit","ActiveRecord::Transactions::ClassMethods","classes\/ActiveRecord\/Transactions\/ClassMethods.html#M000570","(*args, &block)","",2],["after_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001727","","Append an after filter. See _insert_callbacks for parameter details. ",2],["after_initialize","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000559","(&block)","Last configurable block to run. Called after frameworks initialize. ",2],["after_rollback","ActiveRecord::Transactions::ClassMethods","classes\/ActiveRecord\/Transactions\/ClassMethods.html#M000571","(*args, &block)","",2],["after_validation","ActiveModel::Validations::Callbacks::ClassMethods","classes\/ActiveModel\/Validations\/Callbacks\/ClassMethods.html#M004043","(*args, &block)","",2],["ago","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M003898","(time = ::Time.current)","Calculates a new Time or Date that is as far in the past as this Duration represents. ",2],["ago","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003282","(other)","",2],["ago","DateTime","classes\/DateTime.html#M003212","(seconds)","Returns a new DateTime representing the time a number of seconds ago Do not use this method in combination",2],["ago","Time","classes\/Time.html#M002879","(seconds)","Returns a new Time representing the time a number of seconds ago, this is basically a wrapper around",2],["alert","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002227","()","Convenience accessor for flash[:alert] ",2],["alert=","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002228","(message)","Convenience accessor for flash[:alert]= ",2],["alias_attribute","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M004109","(new_name, old_name)","",2],["alias_attribute","Module","classes\/Module.html#M002958","(new_name, old_name)","Allows you to make aliases for attributes, which includes getter, setter, and query methods. Example:",2],["alias_method_chain","Module","classes\/Module.html#M002957","(target, feature)","Encapsulates the common pattern of: alias_method :foo_without_feature, :foo alias_method :foo, :foo_with_feature",2],["all","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001559","(*args)","This is an alias for find(:all).  You can pass in all the same arguments to this method as you can to",2],["all","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003511","()","Return an array of all TimeZone objects. There are multiple TimeZone objects per time zone, in many cases,",2],["all","Rails::Application::Railties","classes\/Rails\/Application\/Railties.html#M000488","(&block)","",2],["all","Rails::Engine::Railties","classes\/Rails\/Engine\/Railties.html#M000367","(&block)","",2],["all","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M000137","(klass)","GET index ",2],["all","Rails::Plugin","classes\/Rails\/Plugin.html#M000087","(list, paths)","",2],["all_day","Time","classes\/Time.html#M002922","()","Returns a Range representing the whole day of the current time. ",2],["all_helpers_from_path","ActionController::Helpers::ClassMethods","classes\/ActionController\/Helpers\/ClassMethods.html#M001823","(path)","",2],["all_month","Time","classes\/Time.html#M002924","()","Returns a Range representing the whole month of the current time. ",2],["all_paths","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000044","()","",2],["all_quarter","Time","classes\/Time.html#M002925","()","Returns a Range representing the whole quarter of the current time. ",2],["all_week","Time","classes\/Time.html#M002923","(start_day = :monday)","Returns a Range representing the whole week of the current time. Week starts on start_day (default is",2],["all_year","Time","classes\/Time.html#M002926","()","Returns a Range representing the whole year of the current time. ",2],["announce","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001375","(message)","",2],["anonymous?","Module","classes\/Module.html#M002959","()","A module may or may not have a name. module M; end M.name # => \"M\" m = Module.new m.name # => \"\" A module",2],["api_behavior","ActionController::Responder","classes\/ActionController\/Responder.html#M001796","(error)","This is the common behavior for formats associated with APIs, such as :xml and :json. ",2],["api_location","ActionController::Responder","classes\/ActionController\/Responder.html#M001800","()","Alias for #resource_location",2],["app","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M002387","()","",2],["app","ActionDispatch::IntegrationTest","classes\/ActionDispatch\/IntegrationTest.html#M002398","()","",2],["app","ActionDispatch::IntegrationTest","classes\/ActionDispatch\/IntegrationTest.html#M002396","()","",2],["app","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000320","()","",2],["app","Rails::ConsoleMethods","classes\/Rails\/ConsoleMethods.html#M000075","(create=false)","reference the global \"app\" instance, created on demand. To recreate the instance, pass a non-false value",2],["app","Rails::Engine","classes\/Rails\/Engine.html#M000500","()","",2],["app","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000269","()","",2],["app","Rails::Server","classes\/Rails\/Server.html#M000401","()","",2],["app=","ActionDispatch::IntegrationTest","classes\/ActionDispatch\/IntegrationTest.html#M002397","(app)","",2],["app_const","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000359","()","",2],["app_const_base","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000357","()","",2],["app_generators","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000555","()","This allows you to modify application's generators from Railties. Values set on app_generators will become",2],["app_middleware","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000554","()","This allows you to modify the application's middlewares from Engines. All operations you run on the app_middleware",2],["app_name","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000353","()","",2],["app_secret","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000361","()","",2],["app_templates_dir","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000296","()","",2],["append_after_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001730","","Append an after filter. See _insert_callbacks for parameter details. ",2],["append_around_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001734","","Append an around filter. See _insert_callbacks for parameter details. ",2],["append_before_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001726","","Append a before filter. See _insert_callbacks for parameter details. ",2],["append_features","ActiveSupport::Concern","classes\/ActiveSupport\/Concern.html#M003486","(base)","",2],["append_view_path","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M001699","(path)","",2],["append_view_path","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M001701","(path)","Append a path to the list of view paths for this controller. ==== Parameters * <tt>path<\/tt> - If a String",2],["application","Rails","classes\/Rails.html#M000011","()","",2],["application","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000149","(data=nil, options={}, &block)","Alias for #environment",2],["application=","Rails","classes\/Rails.html#M000012","(application)","",2],["application_definition","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000305","()","",2],["application_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000118","()","Tries to retrieve the application name or simple return application. ",2],["application_trace","ActionDispatch::ExceptionWrapper","classes\/ActionDispatch\/ExceptionWrapper.html#M002259","()","",2],["apply_rails_template","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000245","()","",2],["arel_engine","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001410","()","",2],["arel_table","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001409","()","",2],["arguments","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000220","(array)","Sets default arguments on generator invocation. This can be overwritten when invoking it. arguments %w(app_name",2],["around_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001731","","Append an around filter. See _insert_callbacks for parameter details. ",2],["as_json","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003993","(options=nil)","Returns an ActiveSupport::OrderedHash that can be used as the JSON representation for this object. ",2],["as_json","ActiveModel::Serializers::JSON","classes\/ActiveModel\/Serializers\/JSON.html#M004131","(options = nil)","Returns a hash representing the model. Some configuration can be passed through +options+. The option",2],["as_json","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M003621","(value, use_options = true)","like encode, but only calls as_json, without encoding to string ",2],["as_json","ActiveSupport::JSON::Variable","classes\/ActiveSupport\/JSON\/Variable.html#M003644","(options = nil)","",2],["as_json","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003263","(options = nil)","Coerces time to a string for JSON encoding. The default format is ISO 8601. You can get %Y\/%m\/%d %H:%M:%S",2],["as_json","BigDecimal","classes\/BigDecimal.html#M003635","(options = nil)","A BigDecimal would be naturally represented as a JSON number. Most libraries, however, parse non-integer",2],["as_json","FalseClass","classes\/FalseClass.html#M003628","(options = nil)","",2],["as_json","NilClass","classes\/NilClass.html#M003630","(options = nil)","",2],["as_json","String","classes\/String.html#M003632","(options = nil)","",2],["as_json","Symbol","classes\/Symbol.html#M003634","(options = nil)","",2],["as_json","TrueClass","classes\/TrueClass.html#M003626","(options = nil)","",2],["assert_blank","ActiveSupport::Testing::Assertions","classes\/ActiveSupport\/Testing\/Assertions.html#M003780","(object, message=nil)","Test if an expression is blank. Passes if object.blank? is true. assert_blank [] # => true ",2],["assert_class_method","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000228","(method, content, &block)","Asserts the given class method exists in the given content. This method does not detect class methods",2],["assert_difference","ActiveSupport::Testing::Assertions","classes\/ActiveSupport\/Testing\/Assertions.html#M003778","(expression, difference = 1, message = nil, &block)","Test numeric difference between the return value of an expression as a result of what is evaluated in",2],["assert_directory","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000223","(relative, *contents)","Alias for #assert_file",2],["assert_dom_equal","ActionDispatch::Assertions::DomAssertions","classes\/ActionDispatch\/Assertions\/DomAssertions.html#M002400","(expected, actual, message = \"\")","\\Test two HTML strings for equivalency (e.g., identical up to reordering of attributes) ==== Examples",2],["assert_dom_not_equal","ActionDispatch::Assertions::DomAssertions","classes\/ActionDispatch\/Assertions\/DomAssertions.html#M002401","(expected, actual, message = \"\")","The negated form of +assert_dom_equivalent+. ==== Examples # assert that the referenced method does not",2],["assert_field_default_value","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000232","(attribute_type, value)","Asserts the given attribute type gets a proper default value: assert_field_default_value :string, \"MyString\"",2],["assert_field_type","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000231","(attribute_type, field_type)","Asserts the given attribute type gets translated to a field type properly: assert_field_type :date, :date_select",2],["assert_file","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000222","(relative, *contents)","Asserts a given file exists. You need to supply an absolute path or a path relative to the configured",2],["assert_generates","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M002403","(expected_path, options, defaults={}, extras = {}, message=nil)","Asserts that the provided options can be used to generate the provided path. This is the inverse of +assert_recognizes+.",2],["assert_index","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002285","(index, where)","",2],["assert_instance_method","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000229","(method, content)","Asserts the given method exists in the given content. When a block is given, it yields the content of",2],["assert_method","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000230","(method, content)","Alias for #assert_instance_method",2],["assert_migration","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000226","(relative, *contents, &block)","Asserts a given migration exists. You need to supply an absolute path or a path relative to the configured",2],["assert_no_difference","ActiveSupport::Testing::Assertions","classes\/ActiveSupport\/Testing\/Assertions.html#M003779","(expression, message = nil, &block)","Assertion that the numeric result of evaluating an expression is not changed before and after invoking",2],["assert_no_directory","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000225","(relative)","Alias for #assert_no_file",2],["assert_no_file","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000224","(relative)","Asserts a given file does not exist. You need to supply an absolute path or a path relative to the configured",2],["assert_no_migration","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000227","(relative)","Asserts a given migration does not exist. You need to supply an absolute path or a path relative to the",2],["assert_no_tag","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M002414","(*opts)","Identical to +assert_tag+, but asserts that a matching tag does _not_ exist. (See +assert_tag+ for a",2],["assert_present","ActiveSupport::Testing::Assertions","classes\/ActiveSupport\/Testing\/Assertions.html#M003781","(object, message=nil)","Test if an expression is not blank. Passes if object.present? is true. assert_present {:data => 'x' }",2],["assert_recognizes","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M002402","(expected_options, path, extras={}, message=nil)","Asserts that the routing of the given +path+ was handled correctly and that the parsed options (given",2],["assert_redirected_to","ActionDispatch::Assertions::ResponseAssertions","classes\/ActionDispatch\/Assertions\/ResponseAssertions.html#M002409","(options = {}, message=nil)","Assert that the redirection options passed in match those of the redirect called in the latest action.",2],["assert_response","ActionDispatch::Assertions::ResponseAssertions","classes\/ActionDispatch\/Assertions\/ResponseAssertions.html#M002408","(type, message = nil)","Asserts that the response is one of the following types: * <tt>:success<\/tt>   - Status code was 200",2],["assert_routing","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M002404","(path, options, defaults={}, extras={}, message=nil)","Asserts that path and options match both ways; in other words, it verifies that <tt>path<\/tt> generates",2],["assert_select","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M002425","(*args, &block)","An assertion that selects elements and makes one or more equality tests. If the first argument is an",2],["assert_select_email","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M002428","(&block)","Extracts the body of an email and runs nested assertions on it. You must enable deliveries for this assertion",2],["assert_select_encoded","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M002427","(element = nil, &block)","Extracts the content of an element, treats it as encoded HTML and runs nested assertion on it. You typically",2],["assert_tag","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M002413","(*opts)","Asserts that there is a tag\/node\/element in the body of the response that meets all of the given conditions.",2],["assert_template","ActionController::TemplateAssertions","classes\/ActionController\/TemplateAssertions.html#M001941","(options = {}, message = nil)","Asserts that the request was rendered with the appropriate template file or partials. ==== Examples #",2],["assert_valid_keys","Hash","classes\/Hash.html#M003000","(*valid_keys)","Validate all keys in a hash match *valid keys, raising ArgumentError on a mismatch. Note that keys are",2],["asset_name","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/AssetIncludeTag.html#M002736","()","",2],["asset_name","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptIncludeTag.html#M002716","()","",2],["asset_name","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetIncludeTag.html#M002726","()","",2],["asset_name","Rails::Generators::AssetsGenerator","classes\/Rails\/Generators\/AssetsGenerator.html#M000267","()","",2],["asset_tag","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/AssetIncludeTag.html#M002739","(source, options)","",2],["asset_tag","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptIncludeTag.html#M002718","(source, options)","",2],["asset_tag","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetIncludeTag.html#M002728","(source, options)","",2],["assets_gemfile_entry","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000254","()","",2],["assign_attributes","ActiveRecord::AttributeAssignment","classes\/ActiveRecord\/AttributeAssignment.html#M000690","(new_attributes, options = {})","Allows you to set all the attributes for a particular mass-assignment security role by passing in a hash",2],["assign_shortcuts","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M001768","(*)","",2],["assigns","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M002418","(key = nil)","",2],["assume_migrated_upto_version","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000961","(version, migrations_paths = ActiveRecord::Migrator.migrations_paths)","",2],["at","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003500","(secs)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from number of seconds",2],["at","String","classes\/String.html#M003094","(position)","",2],["at","String","classes\/String.html#M003089","(position)","Returns the character at the +position+ treating the string as an array (where 0 is the first character).",2],["at_beginning_of_day","DateTime","classes\/DateTime.html#M003218","()","Alias for #beginning_of_day",2],["at_beginning_of_day","Time","classes\/Time.html#M002903","()","Alias for #beginning_of_day",2],["at_beginning_of_hour","DateTime","classes\/DateTime.html#M003221","()","Alias for #beginning_of_hour",2],["at_beginning_of_hour","Time","classes\/Time.html#M002906","()","Alias for #beginning_of_hour",2],["at_beginning_of_month","Time","classes\/Time.html#M002909","()","Alias for #beginning_of_month",2],["at_beginning_of_quarter","Time","classes\/Time.html#M002913","()","Alias for #beginning_of_quarter",2],["at_beginning_of_week","Time","classes\/Time.html#M002893","(start_day = :monday)","Alias for #beginning_of_week",2],["at_beginning_of_year","Time","classes\/Time.html#M002917","()","Alias for #beginning_of_year",2],["at_end_of_month","Time","classes\/Time.html#M002911","()","Alias for #end_of_month",2],["at_end_of_quarter","Time","classes\/Time.html#M002915","()","Alias for #end_of_quarter",2],["at_end_of_week","Time","classes\/Time.html#M002896","(start_day = :monday)","Alias for #end_of_week",2],["at_end_of_year","Time","classes\/Time.html#M002919","()","Alias for #end_of_year",2],["at_midnight","DateTime","classes\/DateTime.html#M003217","()","Alias for #beginning_of_day",2],["at_midnight","Time","classes\/Time.html#M002902","()","Alias for #beginning_of_day",2],["atom_feed","ActionView::Helpers::AtomFeedHelper","classes\/ActionView\/Helpers\/AtomFeedHelper.html#M002658","(options = {}, &block)","Adds easy defaults to writing Atom feeds with the Builder template engine (this does not work on ERB",2],["atomic_write","File","classes\/File.html#M002982","(file_name, temp_dir = Dir.tmpdir)","Write to a file atomically. Useful for situations where you don't want other processes or threads to",2],["attach_to","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M003668","(namespace, log_subscriber=new, notifier=ActiveSupport::Notifications)","",2],["attachments","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002815","()","Allows you to add attachments to an email, like so: mail.attachments['filename.jpg'] = File.read('\/path\/to\/filename.jpg')",2],["attachments","ActionMailer::MailHelper","classes\/ActionMailer\/MailHelper.html#M002826","()","Access the message attachments list. ",2],["attr_accessible","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M004060","(*args)","Specifies a white list of model attributes that can be set via mass-assignment. Like +attr_protected+,",2],["attr_internal","Module","classes\/Module.html#M002979","(*attrs)","Alias for #attr_internal_accessor",2],["attr_internal_accessor","Module","classes\/Module.html#M002978","(*attrs)","Declares an attribute reader and writer backed by an internally-named instance variable. ",2],["attr_internal_reader","Module","classes\/Module.html#M002976","(*attrs)","Declares an attribute reader backed by an internally-named instance variable. ",2],["attr_internal_writer","Module","classes\/Module.html#M002977","(*attrs)","Declares an attribute writer backed by an internally-named instance variable. ",2],["attr_protected","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M004059","(*args)","Attributes named in this macro are protected from mass-assignment whenever attributes are sanitized before",2],["attribute_cast_code","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/TimeZoneConversion\/ClassMethods.html#M001358","(attr_name)","The enhanced read method automatically converts the UTC time stored in the database to the time zone",2],["attribute_method?","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M004126","(attr_name)","",2],["attribute_method?","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M003963","(attribute)","Check if method is an attribute method or not. ",2],["attribute_method_affix","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M004108","(*affixes)","Declares a method available for all attributes with the given prefix and suffix. Uses +method_missing+",2],["attribute_method_prefix","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M004106","(*prefixes)","Declares a method available for all attributes with the given prefix. Uses +method_missing+ and <tt>respond_to?<\/tt>",2],["attribute_method_suffix","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M004107","(*suffixes)","Declares a method available for all attributes with the given suffix. Uses +method_missing+ and <tt>respond_to?<\/tt>",2],["attribute_missing","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M004123","(match, *args, &block)","attribute_missing is like method_missing, but for attributes. When method_missing is called we check",2],["attributes=","ActiveRecord::AttributeAssignment","classes\/ActiveRecord\/AttributeAssignment.html#M000689","(new_attributes)","Allows you to set all the attributes at once by passing in a hash with keys matching the attribute names",2],["attributes_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","classes\/ActiveRecord\/AttributeMethods\/BeforeTypeCast.html#M001364","()","Returns a hash of attributes before typecasting and deserialization. ",2],["attributes_protected_by_default","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M004065","()","",2],["attributes_protected_by_default","ActiveModel::SecurePassword::ClassMethods","classes\/ActiveModel\/SecurePassword\/ClassMethods.html#M004072","()","",2],["audio_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002757","(source)","Computes the path to an audio asset in the public audios directory. Full paths from the document root",2],["audio_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002764","(source, options = {})","Returns an html audio tag for the +source+. The +source+ can be full path or file that exists in your",2],["auth_type","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001535","()","",2],["auth_type=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001536","(auth_type)","",2],["auth_type=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001623","(auth_type)","Sets the auth type for remote service. ",2],["authenticate","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M001870","(request, &login_procedure)","",2],["authenticate","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001878","(request, realm, &password_procedure)","Returns false on a valid response, true otherwise ",2],["authenticate","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token.html#M001894","(controller, &login_procedure)","If token Authorization header is present, call the login procedure with the present token and options.",2],["authenticate","ActiveModel::SecurePassword::InstanceMethodsOnActivation","classes\/ActiveModel\/SecurePassword\/InstanceMethodsOnActivation.html#M004073","(unencrypted_password)","Returns self if the password is correct, otherwise false. ",2],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M001867","(realm = \"Application\", &login_procedure)","",2],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M001875","(realm = \"Application\", &password_procedure)","",2],["authenticate_or_request_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Token\/ControllerMethods.html#M001891","(realm = \"Application\", &login_procedure)","",2],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M001868","(&login_procedure)","",2],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M001876","(realm = \"Application\", &password_procedure)","Authenticate with HTTP Digest, returns true or false ",2],["authenticate_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Token\/ControllerMethods.html#M001892","(&login_procedure)","",2],["authentication_header","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001885","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M001874","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001886","(controller, realm, message = nil)","",2],["authentication_request","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token.html#M001897","(controller, realm)","Sets a WWW-Authenticate to let the client know a token is desired. controller - ActionController::Base",2],["authorization","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002121","()","Returns the authorization header regardless of whether it was specified directly or through one of the",2],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002751","(type = :rss, url_options = {}, tag_options = {})","Returns a link tag that browsers and news readers can use to auto-detect an RSS or ATOM feed. The +type+",2],["auto_flushing=","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003592","(period)","Set the auto-flush period. Set to true to flush after every log message, to an integer to flush every",2],["autoload","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M003467","(const_name, path = @@at_path)","",2],["autoload_at","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M003469","(path)","",2],["autoload_once","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000045","()","",2],["autoload_once_paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M000377","()","",2],["autoload_paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M000378","()","",2],["autoload_paths","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000047","()","",2],["autoload_under","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M003468","(path)","",2],["autoloads","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M003472","()","",2],["available_action?","AbstractController::Base","classes\/AbstractController\/Base.html#M001673","(action_name)","Returns true if a method for the action is available and can be dispatched, false otherwise. Notice that",2],["available_views","Erb::Generators::ScaffoldGenerator","classes\/Erb\/Generators\/ScaffoldGenerator.html#M000166","()","",2],["backend=","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M003646","(name)","",2],["backtrace_cleaner","Rails","classes\/Rails.html#M000019","()","",2],["bang?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M001442","()","",2],["banner","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000351","()","",2],["banner","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000183","()","Use Rails default banner. ",2],["banner","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000300","()","",2],["base_class","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001264","()","Returns the base AR subclass that this class descends from. If A extends AR::Base, A.base_class will",2],["base_name","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000184","()","Sets the base_name taking into account the current class namespace. ",2],["base_root","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000180","()","Returns the base root for a common set of generators. This is used to dynamically guess the default source",2],["basename","ActiveRecord::MigrationProxy","classes\/ActiveRecord\/MigrationProxy.html#M001384","()","",2],["becomes","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000647","(klass)","Returns an instance of the specified +klass+ with the attributes of the current record. This is mostly",2],["before","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M002319","(*args, &block)","",2],["before","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M000062","()","",2],["before_configuration","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000556","(&block)","First configurable block to run. Called before any initializers are run. ",2],["before_eager_load","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000557","(&block)","Third configurable block to run. Does not run if config.cache_classes set to false. ",2],["before_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001723","","Append a before filter. See _insert_callbacks for parameter details. ",2],["before_filters","ActionController::Testing::ClassMethods","classes\/ActionController\/Testing\/ClassMethods.html#M001764","()","",2],["before_initialize","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000558","(&block)","Second configurable block to run. Called before frameworks initialize. ",2],["before_validation","ActiveModel::Validations::Callbacks::ClassMethods","classes\/ActiveModel\/Validations\/Callbacks\/ClassMethods.html#M004042","(*args, &block)","",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001213","()","",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001027","()","Begins the transaction (and turns off auto-committing). ",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001108","()","Begins a transaction. ",2],["beginning_of_day","DateTime","classes\/DateTime.html#M003215","()","Returns a new DateTime representing the start of the day (0:00) ",2],["beginning_of_day","Time","classes\/Time.html#M002900","()","Returns a new Time representing the start of the day (0:00) ",2],["beginning_of_hour","DateTime","classes\/DateTime.html#M003220","()","Returns a new DateTime representing the start of the hour (hh:00:00) ",2],["beginning_of_hour","Time","classes\/Time.html#M002905","()","Returns a new Time representing the start of the hour (x:00) ",2],["beginning_of_month","Time","classes\/Time.html#M002908","()","Returns a new Time representing the start of the month (1st of the month, 0:00) ",2],["beginning_of_quarter","Time","classes\/Time.html#M002912","()","Returns  a new Time representing the start of the quarter (1st of january, april, july, october, 0:00)",2],["beginning_of_week","Time","classes\/Time.html#M002892","(start_day = :monday)","Returns a new Time representing the \"start\" of this week, week starts on start_day (default is :monday,",2],["beginning_of_year","Time","classes\/Time.html#M002916","()","Returns a new Time representing the start of the year (1st of january, 0:00) ",2],["behavior","ActiveSupport::Deprecation","classes\/ActiveSupport\/Deprecation.html#M003910","()","Returns the set behavior or if one isn't set, defaults to +:stderr+ ",2],["behavior=","ActiveSupport::Deprecation","classes\/ActiveSupport\/Deprecation.html#M003911","(behavior)","Sets the behavior to the specified value. Can be a single value or an array. Examples ActiveSupport::Deprecation.behavior",2],["belongs_to","ActiveRecord::Associations::ClassMethods","classes\/ActiveRecord\/Associations\/ClassMethods.html#M000747","(name, options = {})","Specifies a one-to-one association with another class. This method should only be used if this class",2],["belongs_to","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000957","(*args)","Alias for #references",2],["belongs_to","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000940","(*args)","Alias for #references",2],["belongs_to?","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M000064","(group)","",2],["benchmark","ActiveSupport::Benchmarkable","classes\/ActiveSupport\/Benchmarkable.html#M003441","(message = \"Benchmarking\", options = {})","Allows you to measure the execution time of a block in a template and records the result to the log.",2],["benchmark","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003820","()","",2],["best_install_method","RailsEnvironment","classes\/RailsEnvironment.html#M000417","()","",2],["between?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003273","(min, max)","",2],["bind","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M000066","(context)","",2],["blank?","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003991","()","Alias for #empty?",2],["blank?","FalseClass","classes\/FalseClass.html#M003152","()","+false+ is blank: false.blank? # => true ",2],["blank?","NilClass","classes\/NilClass.html#M003151","()","+nil+ is blank: nil.blank? # => true ",2],["blank?","Object","classes\/Object.html#M003148","()","An object is blank if it's false, empty, or a whitespace string. For example, \"\", \"   \", +nil+, [], and",2],["blank?","String","classes\/String.html#M003154","()","A string is blank if it's empty or contains whitespaces only: \"\".blank?                 # => true \" ",2],["blank?","TrueClass","classes\/TrueClass.html#M003153","()","+true+ is not blank: true.blank? # => false ",2],["block_format","ActionMailer::MailHelper","classes\/ActionMailer\/MailHelper.html#M002823","(text)","Uses Text::Format to take the text and format it, indented two spaces for each line, and wrapped at 72",2],["body","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002111","()","The request body is an IO input stream. If the RAW_POST_DATA environment variable is already set, wrap",2],["body","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002162","()","",2],["body=","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002163","(body)","",2],["body_parts","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002164","()","",2],["breakpoint","Kernel","classes\/Kernel.html#M002840","()","Alias for #debugger",2],["build","ActionController::Middleware","classes\/ActionController\/Middleware.html#M001914","(app)","Alias for #new",2],["build","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002284","(app = nil, &block)","",2],["build","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M002270","(app)","",2],["build","ActionView::Resolver::Path","classes\/ActionView\/Resolver\/Path.html#M002459","(name, prefix, partial)","",2],["build","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001554","(attributes = {})","Builds a new, unsaved record using the default values from the remote server so that it can be used with",2],["build","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M000139","(klass, params=nil)","GET new POST create ",2],["build","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000243","(meth, *args)","",2],["build_mem_cache","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M003560","(*addresses)","",2],["build_original_fullpath","Rails::Application","classes\/Rails\/Application.html#M000037","(env)","",2],["builder","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000242","()","",2],["bundle_command","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000257","(command)","",2],["button","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002654","(value=nil, options={})","Add the submit button for the given form. When no value is given, it checks if the object is a new resource",2],["button_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002556","(content_or_options = nil, options = nil, &block)","Creates a button element that defines a <tt>submit<\/tt> button, <tt>reset<\/tt>button or a generic button",2],["button_to","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002577","(name, options = {}, html_options = {})","Generates a form containing a single button that submits to the URL created by the set of +options+.",2],["button_to_function","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M002617","(name, function=nil, html_options={})","Returns a button whose +onclick+ handler triggers the passed JavaScript. The helper receives a name,",2],["cache","ActionController::Caching","classes\/ActionController\/Caching.html#M001955","(key, options = {}, &block)","Convenience accessor ",2],["cache","ActionView::Helpers::CacheHelper","classes\/ActionView\/Helpers\/CacheHelper.html#M002607","(name = {}, options = nil, &block)","This helper exposes a method for caching fragments of a view  rather than an entire action or page. This",2],["cache","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000879","()","Enable the query cache within the block. ",2],["cache","ActiveRecord::QueryCache::ClassMethods","classes\/ActiveRecord\/QueryCache\/ClassMethods.html#M001275","(&block)","Enable the query cache within the block if Active Record is configured. ",2],["cache","Rails","classes\/Rails.html#M000023","()","",2],["cache_attribute?","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M001310","(attr_name)","Returns +true+ if the provided attribute is being cached. ",2],["cache_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M001308","(*attribute_names)","+cache_attributes+ allows you to declare which converted attribute values should be cached. Usually caching",2],["cache_fixtures","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000593","(connection, fixtures_map)","",2],["cache_for_connection","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000590","(connection)","",2],["cache_page","ActionController::Caching::Pages","classes\/ActionController\/Caching\/Pages.html#M001931","(content = nil, options = nil, gzip = Zlib::BEST_COMPRESSION)","Manually cache the +content+ in the key determined by +options+. If no content is provided, the contents",2],["cache_page","ActionController::Caching::Pages::ClassMethods","classes\/ActionController\/Caching\/Pages\/ClassMethods.html#M001925","(content, path, extension = nil, gzip = Zlib::BEST_COMPRESSION)","Manually cache the +content+ in the key determined by +path+. Example: cache_page \"I'm the cached content\",",2],["cache_store","ActionController::Caching::ConfigMethods","classes\/ActionController\/Caching\/ConfigMethods.html#M001951","()","",2],["cache_store=","ActionController::Caching::ConfigMethods","classes\/ActionController\/Caching\/ConfigMethods.html#M001952","(store)","",2],["cache_template_loading","ActionView::Base","classes\/ActionView\/Base.html#M002506","()","",2],["cache_template_loading=","ActionView::Base","classes\/ActionView\/Base.html#M002507","(value)","",2],["cached_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M001309","()","Returns the attributes which are cached. By default time related columns with datatype <tt>:datetime,",2],["cached_fixtures","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000592","(connection, keys_to_fetch = nil)","",2],["caches_action","ActionController::Caching::Actions::ClassMethods","classes\/ActionController\/Caching\/Actions\/ClassMethods.html#M001919","(*actions)","Declares that +actions+ should be cached. See ActionController::Caching::Actions for details. ",2],["caches_page","ActionController::Caching::Pages::ClassMethods","classes\/ActionController\/Caching\/Pages\/ClassMethods.html#M001926","(*actions)","Caches the +actions+ using the page-caching approach that'll store the cache in a path within the page_cache_directory",2],["caching_allowed?","ActionController::Caching","classes\/ActionController\/Caching.html#M001954","()","",2],["calculate_ip","ActionDispatch::RemoteIp::GetIp","classes\/ActionDispatch\/RemoteIp\/GetIp.html#M002289","()","Determines originating IP address. REMOTE_ADDR is the standard but will be wrong if the user is behind",2],["call","ActionController::Metal","classes\/ActionController\/Metal.html#M001755","(env)","Makes the controller a rack endpoint that points to the action in the given env's action_dispatch.request.path_parameters",2],["call","ActionController::Middleware::ActionMiddleware","classes\/ActionController\/Middleware\/ActionMiddleware.html#M001912","(env)","",2],["call","ActionController::Responder","classes\/ActionController\/Responder.html#M001790","(*args)","Initializes a new responder an invoke the proper format. If the format is not defined, call to_format.",2],["call","ActionDispatch::BestStandardsSupport","classes\/ActionDispatch\/BestStandardsSupport.html#M002348","(env)","",2],["call","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M002322","(env)","",2],["call","ActionDispatch::Cookies","classes\/ActionDispatch\/Cookies.html#M002318","(env)","",2],["call","ActionDispatch::DebugExceptions","classes\/ActionDispatch\/DebugExceptions.html#M002293","(env)","",2],["call","ActionDispatch::FileHandler","classes\/ActionDispatch\/FileHandler.html#M002311","(env)","",2],["call","ActionDispatch::Flash","classes\/ActionDispatch\/Flash.html#M002234","(env)","",2],["call","ActionDispatch::Head","classes\/ActionDispatch\/Head.html#M002246","(env)","",2],["call","ActionDispatch::ParamsParser","classes\/ActionDispatch\/ParamsParser.html#M002343","(env)","",2],["call","ActionDispatch::PublicExceptions","classes\/ActionDispatch\/PublicExceptions.html#M002236","(env)","",2],["call","ActionDispatch::Reloader","classes\/ActionDispatch\/Reloader.html#M002252","(env)","",2],["call","ActionDispatch::RemoteIp","classes\/ActionDispatch\/RemoteIp.html#M002287","(env)","",2],["call","ActionDispatch::RequestId","classes\/ActionDispatch\/RequestId.html#M002300","(env)","",2],["call","ActionDispatch::Rescue","classes\/ActionDispatch\/Rescue.html#M002340","(env)","",2],["call","ActionDispatch::ShowExceptions","classes\/ActionDispatch\/ShowExceptions.html#M002241","(env)","",2],["call","ActionDispatch::Static","classes\/ActionDispatch\/Static.html#M002316","(env)","",2],["call","ActionView::Template::Handlers::Builder","classes\/ActionView\/Template\/Handlers\/Builder.html#M002483","(template)","",2],["call","ActionView::Template::Handlers::ERB","classes\/ActionView\/Template\/Handlers\/ERB.html#M002481","(template)","",2],["call","ActionView::Template::Handlers::ERB","classes\/ActionView\/Template\/Handlers\/ERB.html#M002478","(template)","",2],["call","ActiveRecord::ConnectionAdapters::ConnectionManagement","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html#M001007","(env)","",2],["call","ActiveRecord::QueryCache","classes\/ActiveRecord\/QueryCache.html#M001278","(env)","",2],["call","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M003672","(message, *args)","",2],["call","I18n::ExceptionHandler","classes\/I18n\/ExceptionHandler.html#M002767","(exception, locale, key, options)","",2],["call","Logger::SimpleFormatter","classes\/Logger\/SimpleFormatter.html#M002830","(severity, timestamp, progname, msg)","This method is invoked when a log event occurs ",2],["call","Rails::Application","classes\/Rails\/Application.html#M000032","(env)","",2],["call","Rails::Engine","classes\/Rails\/Engine.html#M000502","(env)","",2],["call","Rails::Rack::Debugger","classes\/Rails\/Rack\/Debugger.html#M000483","(env)","",2],["call","Rails::Rack::LogTailer","classes\/Rails\/Rack\/LogTailer.html#M000485","(env)","",2],["call","Rails::Rack::Logger","classes\/Rails\/Rack\/Logger.html#M000479","(env)","",2],["call_app","Rails::Rack::Logger","classes\/Rails\/Rack\/Logger.html#M000480","(env)","",2],["camelcase","String","classes\/String.html#M003105","(first_letter = :upper)","Alias for #camelize",2],["camelize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003320","(term, uppercase_first_letter = true)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to +camelize+ is set to <tt>:lower<\/tt>",2],["camelize","String","classes\/String.html#M003104","(first_letter = :upper)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to camelize is set to <tt>:lower<\/tt>",2],["camelized","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000358","()","Alias for #app_const_base",2],["camelized","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000303","()","",2],["capify!","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000157","()","Just run the capify command in root ==== Example capify! ",2],["capitalize","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003379","()","Converts the first character to uppercase and the remainder to lowercase. Example: '\u00fcber'.mb_chars.capitalize.to_s",2],["capture","ActionView::Helpers::CaptureHelper","classes\/ActionView\/Helpers\/CaptureHelper.html#M002702","(*args)","The capture method allows you to extract part of a template into a variable. You can then use this variable",2],["capture","Kernel","classes\/Kernel.html#M002848","(stream)","Captures the given stream and returns it: stream = capture(:stdout) { puts \"Cool\" } stream # => \"Cool\\n\"",2],["case_insensitive_comparison","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000740","(table, attribute, column, value)","",2],["case_insensitive_comparison","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001245","(table, attribute, column, value)","",2],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001034","()","",2],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000739","(node)","",2],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001244","(node)","",2],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M003926","(string)","Alias for #characters",2],["cdata_section","ActionView::Helpers::TagHelper","classes\/ActionView\/Helpers\/TagHelper.html#M002696","(content)","Returns a CDATA section with the given +content+. CDATA sections are used to escape blocks of text containing",2],["center","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003369","(integer, padstr=' ')","Works just like <tt>String#center<\/tt>, only integer specifies characters instead of bytes. Example:",2],["change","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000950","(column_name, type, options = {})","Changes the column's definition according to the new options. See TableDefinition#column for details",2],["change","DateTime","classes\/DateTime.html#M003210","(options)","Returns a new DateTime where one or more of the elements have been changed according to the +options+",2],["change","Time","classes\/Time.html#M002877","(options)","Returns a new Time where one or more of the elements have been changed according to the +options+ parameter.",2],["change_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001137","(table_name, column_name, type, options = {})","Changes the column of a table. ",2],["change_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000921","(table_name, column_name, type, options = {})","Changes the column's definition according to the new options. See TableDefinition#column for details",2],["change_column_default","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001235","(table_name, column_name, default)","",2],["change_column_default","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001138","(table_name, column_name, default)","Changes the default value of a table column. ",2],["change_column_default","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000922","(table_name, column_name, default)","Sets a new default value for a column. ===== Examples change_column_default(:suppliers, :qualification,",2],["change_column_null","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001236","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001139","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000809","(table_name, column_name, null, default = nil)","",2],["change_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001251","(table_name, column_name, type, options = {})","",2],["change_default","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000951","(column_name, default)","Sets a new default value for a column. See SchemaStatements#change_column_default ===== Examples t.change_default(:qualification,",2],["change_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000905","(table_name, options = {})","A block for changing columns in +table+. === Example # change_table() yields a Table instance change_table(:suppliers)",2],["changed","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M004004","()","List of attributes with unsaved changes. person.changed # => [] person.name = 'bob' person.changed #",2],["changed?","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M004003","()","Returns true if any attribute have unsaved changes, false otherwise. person.changed? # => false person.name",2],["changed_attributes","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M004007","()","Map of change <tt>attr => original value<\/tt>. ",2],["changes","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M004005","()","Map of changed attrs => [original value, new value]. person.changes # => {} person.name = 'bob' person.changes",2],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M003925","(string)","",2],["charset","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001225","()","Returns the database character set. ",2],["check_box","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002649","(method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","",2],["check_box","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002631","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","Returns a checkbox tag tailored for accessing a specified attribute (identified by +method+) on an object",2],["check_box_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002553","(name, value = \"1\", checked = false, options = {})","Creates a check box form input tag. ==== Options * <tt>:disabled<\/tt> - If set to true, the user will",2],["check_class_collision","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000122","(options={})","Add a class collisions name to be checked on class initialization. You can supply a hash with a :prefix",2],["check_validity!","ActiveModel::EachValidator","classes\/ActiveModel\/EachValidator.html#M004152","()","Hook method that gets called by the initializer allowing verification that the arguments supplied are",2],["check_validity!","ActiveModel::Validations::ExclusionValidator","classes\/ActiveModel\/Validations\/ExclusionValidator.html#M004045","()","",2],["check_validity!","ActiveModel::Validations::FormatValidator","classes\/ActiveModel\/Validations\/FormatValidator.html#M004050","()","",2],["check_validity!","ActiveModel::Validations::InclusionValidator","classes\/ActiveModel\/Validations\/InclusionValidator.html#M004055","()","",2],["check_validity!","ActiveModel::Validations::LengthValidator","classes\/ActiveModel\/Validations\/LengthValidator.html#M004022","()","",2],["check_validity!","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M004013","()","",2],["checkin","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000988","(conn)","Check-in a database connection back into the pool, indicating that you no longer need this connection.",2],["checkout","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000987","()","Check-out a database connection from the pool, indicating that you want to use it. You should call #checkin",2],["children","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M000051","()","",2],["civil_from_format","DateTime","classes\/DateTime.html#M003200","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0)","",2],["class_eval","Kernel","classes\/Kernel.html#M002852","(*args, &block)","class_eval on an object acts like singleton_class.class_eval. ",2],["class_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000107","()","",2],["class_of_active_record_descendant","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001268","(klass)","Returns the class descending directly from ActiveRecord::Base or an abstract class, if any, in the inheritance",2],["class_path","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000103","()","",2],["classify","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003325","(table_name)","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["classify","String","classes\/String.html#M003114","()","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["clean","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M003475","(backtrace, kind = :silent)","Returns the backtrace after all filters and silencers have been run against it. Filters run first, then",2],["cleanup","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003547","(options = nil)","",2],["cleanup","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M003574","(options = nil)","",2],["cleanup","ActiveSupport::Cache::NullStore","classes\/ActiveSupport\/Cache\/NullStore.html#M003538","(options = nil)","",2],["cleanup","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003853","(options = nil)","Cleanup the cache by removing expired entries. Options are passed to the underlying cache implementation.",2],["cleanup!","ActionDispatch::Reloader","classes\/ActionDispatch\/Reloader.html#M002250","()","Execute all cleanup callbacks. ",2],["clear","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002220","()","",2],["clear","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003976","()","Clear the messages ",2],["clear","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html#M000848","()","",2],["clear","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001065","()","",2],["clear","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/StatementPool.html#M000757","()","",2],["clear","ActiveRecord::ConnectionAdapters::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html#M000829","()","",2],["clear","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003546","(options = nil)","",2],["clear","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M003565","(options = nil)","Clear the entire cache on all memcached servers. This method should be used with care when shared cache",2],["clear","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M003573","(options = nil)","",2],["clear","ActiveSupport::Cache::NullStore","classes\/ActiveSupport\/Cache\/NullStore.html#M003537","(options = nil)","",2],["clear","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003854","(options = nil)","Clear the entire cache. Be careful with this method since it could affect other processes if shared cache",2],["clear","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M003520","(options = nil)","",2],["clear","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M003411","()","",2],["clear","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003344","(scope = :all)","Clears the loaded inflections within a given scope (default is <tt>:all<\/tt>). Give the scope as a symbol",2],["clear","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003695","()","",2],["clear!","ActiveRecord::ConnectionAdapters::SchemaCache","classes\/ActiveRecord\/ConnectionAdapters\/SchemaCache.html#M001164","()","Clears out internal caches ",2],["clear!","ActiveSupport::Dependencies::ClassCache","classes\/ActiveSupport\/Dependencies\/ClassCache.html#M003315","()","",2],["clear_action_methods!","AbstractController::Base","classes\/AbstractController\/Base.html#M001667","()","action_methods are cached and there is sometimes need to refresh them. clear_action_methods! allows you",2],["clear_active_connections!","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000897","()","",2],["clear_active_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000998","()","Returns any connections in use by the current thread back to the pool. ",2],["clear_all_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M001000","()","",2],["clear_cache","ActionView::Resolver","classes\/ActionView\/Resolver.html#M002462","()","",2],["clear_cache!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000729","()","Clear any caching the database adapter may be doing, for example clearing the prepared statement cache.",2],["clear_cache!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000985","()","",2],["clear_cache!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000862","()","Clears the prepared statements cache. ",2],["clear_cache!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001071","()","Clears the prepared statements cache. ",2],["clear_cache!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000771","()","Clears the prepared statements cache. ",2],["clear_helpers","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M001690","()","Clears up all existing helpers in this class, only keeping the helper with the same name as this class.",2],["clear_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000883","()","Clears the query cache. One reason you may wish to call this method explicitly is between queries that",2],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000999","()","Clears the cache which maps classes. ",2],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000980","()","Clears the cache which maps classes. ",2],["clear_respond_to","ActionController::MimeResponds::ClassMethods","classes\/ActionController\/MimeResponds\/ClassMethods.html#M001855","()","Clear all mime types in <tt>respond_to<\/tt>. ",2],["clear_stale_cached_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000986","()","Return any checked-out connections back to the pool by threads that are no longer alive. ",2],["clear_table_cache!","ActiveRecord::ConnectionAdapters::SchemaCache","classes\/ActiveRecord\/ConnectionAdapters\/SchemaCache.html#M001165","(table_name)","Clear out internal caches for table with +table_name+. ",2],["client_encoding","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000863","()","Get the client encoding for this database ",2],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001128","()","Returns the current client message level. ",2],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001129","(level)","Set the client message level. ",2],["clone","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001576","()","Returns a \\clone of the resource that hasn't been assigned an +id+ yet and is treated as a \\new resource.",2],["clone_empty","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003074","()","",2],["close","ActionDispatch::BodyProxy","classes\/ActionDispatch\/BodyProxy.html#M002305","()","",2],["close","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002170","()","",2],["close","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000742","()","Check the connection back in to the connection pool ",2],["close","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003595","()","",2],["close","ActiveSupport::Gzip::Stream","classes\/ActiveSupport\/Gzip\/Stream.html#M003489","()","",2],["closed?","ActionDispatch::BodyProxy","classes\/ActionDispatch\/BodyProxy.html#M002306","()","",2],["code","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002157","()","Returns a String to ensure compatibility with Net::HTTPResponse ",2],["collation","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001226","()","Returns the database collation strategy. ",2],["collection","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002004","()","To add a route to the collection: resources :photos do collection do get 'search' end end This will enable",2],["collection_name","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001546","()","",2],["collection_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001553","(prefix_options = {}, query_options = nil)","Gets the collection path for the REST resources.  If the +query_options+ parameter is omitted, Rails",2],["collection_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001606","(options = nil)","",2],["collection_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002604","(method, collection, value_method, text_method, options = {}, html_options = {})","",2],["collection_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002590","(object, method, collection, value_method, text_method, options = {}, html_options = {})","Returns <tt><select><\/tt> and <tt><option><\/tt> tags for the collection of existing return values of",2],["color","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M003673","(text, color, bold=false)","Set color by using a string or one of the defined constants. If a third option is set to true, it also",2],["colorize_logging","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000524","()","",2],["colorize_logging=","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000525","(val)","",2],["column","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000945","(column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["column","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000937","(name, type, options = {})","Instantiates a new column for the table. The +type+ parameter is normally one of the migrations native",2],["column_defaults","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001456","()","Returns a hash where the keys are column names and the values are default values when instantiating the",2],["column_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000903","(table_name, column_name, type = nil, options = {})","Checks to see if a column exists in a given table. === Examples # Check a column exists column_exists?(:suppliers,",2],["column_exists?","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000946","(column_name, type = nil, options = {})","Checks to see if a column exists. See SchemaStatements#column_exists? ",2],["column_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000909","()","Returns the maximum length of a column name. ",2],["column_names","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001457","()","Returns an array of column names as strings. ",2],["columns","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000982","()","",2],["columns","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001122","(table_name, name = nil)","Returns the list of all column definitions for a table. ",2],["columns","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000902","(table_name, name = nil)","Returns an array of Column objects for the table specified by +table_name+. See the concrete implementation",2],["columns","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001454","()","Returns an array of column objects for the table associated with this class. ",2],["columns_for_remove","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000972","(table_name, *column_names)","",2],["columns_hash","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000983","()","",2],["columns_hash","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001455","()","Returns a hash of column objects for the table associated with this class. ",2],["columns_per_multicolumn_index","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000914","()","Returns the maximum number of columns in a multicolumn index. ",2],["columns_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000912","()","Returns the maximum number of columns per table. ",2],["comment_if","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000249","(value)","",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001028","()","Commits the transaction (and turns on auto-committing). ",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001109","()","Commits a transaction. ",2],["commit_transaction_records","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001043","()","Send a commit message to all records after they have been committed. ",2],["comparable_time","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003243","()","Alias for #utc",2],["compare_with_coercion","Time","classes\/Time.html#M002933","(other)","Layers additional behavior on Time#<=> so that DateTime and ActiveSupport::TimeWithZone instances can",2],["compare_without_coercion","Time","classes\/Time.html#M002935","(other)","Alias for #<=>",2],["compile_methods!","ActiveSupport::Configurable::Configuration","classes\/ActiveSupport\/Configurable\/Configuration.html#M003904","()","",2],["compile_methods!","ActiveSupport::Configurable::Configuration","classes\/ActiveSupport\/Configurable\/Configuration.html#M003905","(keys)","compiles reader methods so we don't have to go through method_missing ",2],["compiled_asset_path","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000518","()","",2],["compose","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003384","()","Performs composition on all the characters. Example: '\u00e9'.length                       # => 3 '\u00e9'.mb_chars.compose.to_s.length",2],["compose_codepoints","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003398","(codepoints)","Compose decomposed characters to the composed form. ",2],["composed_of","ActiveRecord::Aggregations::ClassMethods","classes\/ActiveRecord\/Aggregations\/ClassMethods.html#M001284","(part_id, options = {})","Adds reader and writer methods for manipulating a value object: <tt>composed_of :address<\/tt> adds <tt>address<\/tt>",2],["compress","ActiveSupport::Gzip","classes\/ActiveSupport\/Gzip.html#M003491","(source)","Compresses a string using gzip. ",2],["compressed?","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003868","()","",2],["compute_tags","Rails::Rack::Logger","classes\/Rails\/Rack\/Logger.html#M000481","(env)","",2],["compute_type","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001269","(type_name)","Returns the class type of the record using the current module as a prefix. So descendants of MyApp::Business::Account",2],["concat","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002681","(string)","The preferred method of outputting text in your views is to use the <%= \"text\" %> eRuby syntax. The regular",2],["concat","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003075","(value)","",2],["conditional_layout?","AbstractController::Layouts","classes\/AbstractController\/Layouts.html#M001713","()","",2],["conditional_layout?","AbstractController::Layouts::ClassMethods::LayoutConditions","classes\/AbstractController\/Layouts\/ClassMethods\/LayoutConditions.html#M001706","()","Determines whether the current action has a layout by checking the action name against the :only and",2],["config","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior.html#M002527","()","",2],["config","ActiveSupport::Configurable","classes\/ActiveSupport\/Configurable.html#M003909","()","Reads and writes attributes from a configuration <tt>OrderedHash<\/tt>. require 'active_support\/configurable'",2],["config","ActiveSupport::Configurable::ClassMethods","classes\/ActiveSupport\/Configurable\/ClassMethods.html#M003906","()","",2],["config","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000321","()","",2],["config","Rails::Engine","classes\/Rails\/Engine.html#M000507","()","",2],["config","Rails::Plugin","classes\/Rails\/Plugin.html#M000090","()","",2],["config","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000276","()","",2],["config","Rails::Railtie","classes\/Rails\/Railtie.html#M000390","()","",2],["config_accessor","ActiveSupport::Configurable::ClassMethods","classes\/ActiveSupport\/Configurable\/ClassMethods.html#M003908","(*names)","Allows you to add shortcut so that you don't have to refer to attribute through config. Also look at",2],["configru","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000318","()","",2],["configuration","Rails","classes\/Rails.html#M000013","()","The Configuration instance used to configure the Rails environment ",2],["configurations","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001400","","Contains the database configuration - as is typically stored in config\/database.yml - as a Hash. For",2],["configure","ActiveSupport::Configurable::ClassMethods","classes\/ActiveSupport\/Configurable\/ClassMethods.html#M003907","()","",2],["configure","Rails::Railtie::Configurable::ClassMethods","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html#M000567","(&block)","",2],["connected?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000895","()","Returns true if Active Record is connected. ",2],["connected?","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M001003","(klass)","Returns true if a connection that's accessible to this class has already been opened. ",2],["connected?","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000978","()","Returns true if a connection has already been opened. ",2],["connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000887","()","Returns the connection currently associated with the class. This can also be used to \"borrow\" the connection",2],["connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000889","()","Returns the connection currently associated with the class. This can also be used to \"borrow\" the connection",2],["connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000974","()","Retrieve the connection associated with the current thread, or call #checkout to obtain one if necessary.",2],["connection","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001379","()","",2],["connection","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001543","(refresh = false)","An instance of ActiveResource::Connection that is the base \\connection to the remote service. The +refresh+",2],["connection","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001599","(refresh = false)","",2],["connection_config","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000892","()","Returns the configuration of the associated connection as a hash: ActiveRecord::Base.connection_config",2],["connection_handler","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000886","","The connection handler ",2],["connection_id","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000890","()","",2],["connection_id=","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000891","(connection_id)","",2],["connection_pool","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000893","()","",2],["consider_all_requests_local?","Rails::InfoController","classes\/Rails\/InfoController.html#M000397","()","",2],["console","Rails::Railtie","classes\/Rails\/Railtie.html#M000385","(&blk)","",2],["constantize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003330","(camel_cased_word)","Tries to find a constant with the name specified in the argument string: \"Module\".constantize     # =>",2],["constantize","String","classes\/String.html#M003102","()","+constantize+ tries to find a declared constant with the name specified in the string. It raises a NameError",2],["constraints","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M001985","(constraints = {})","=== Parameter Restriction Allows you to constrain the nested routes based on a set of rules. For instance,",2],["consumes?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003353","(string)","Returns +true+ when the proxy class can handle the string. Returns +false+ otherwise. ",2],["content_columns","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001458","()","Returns an array of column objects where the primary id, all columns ending in \"_id\" or \"_count\", and",2],["content_for","ActionView::Helpers::CaptureHelper","classes\/ActionView\/Helpers\/CaptureHelper.html#M002703","(name, content = nil, &block)","Calling content_for stores a block of markup in an identifier for later use. You can make subsequent",2],["content_for?","ActionView::Helpers::CaptureHelper","classes\/ActionView\/Helpers\/CaptureHelper.html#M002705","(name)","content_for? simply checks whether any content has been captured yet using content_for Useful to render",2],["content_length","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002103","()","Returns the content length of the request as an integer. ",2],["content_mime_type","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002053","()","The MIME type of the HTTP request, such as Mime::XML. For backward compatibility, the post \\format is",2],["content_tag","ActionView::Helpers::TagHelper","classes\/ActionView\/Helpers\/TagHelper.html#M002695","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","Returns an HTML block tag of type +name+ surrounding the +content+. Add HTML attributes by passing an",2],["content_tag_for","ActionView::Helpers::RecordTagHelper","classes\/ActionView\/Helpers\/RecordTagHelper.html#M002678","(tag_name, single_or_multiple_records, prefix = nil, options = nil, &block)","content_tag_for creates an HTML element with id and class parameters that relate to the specified Active",2],["content_type","ActionController::Metal","classes\/ActionController\/Metal.html#M001742","()","",2],["content_type","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002054","()","",2],["content_type=","ActionController::Metal","classes\/ActionController\/Metal.html#M001741","(type)","Basic implementations for content_type=, location=, and headers are provided to reduce the dependency",2],["controller","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M001983","(controller, options={})","Scopes routes to a specific controller Example: controller \"food\" do match \"bacon\", :action => \"bacon\"",2],["controller","Rails::ConsoleMethods","classes\/Rails\/ConsoleMethods.html#M000079","()","",2],["controller_class","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M001945","()","",2],["controller_class=","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M001944","(new_class)","",2],["controller_class_name","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M000214","()","",2],["controller_class_path","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M000211","()","",2],["controller_file_name","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M000212","()","",2],["controller_file_path","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M000213","()","",2],["controller_i18n_scope","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M000215","()","",2],["controller_name","ActionController::Metal","classes\/ActionController\/Metal.html#M001737","()","Delegates to the class' <tt>controller_name<\/tt> ",2],["controller_name","ActionController::Metal","classes\/ActionController\/Metal.html#M001736","()","Returns the last part of the controller's name, underscored, without the ending <tt>Controller<\/tt>.",2],["controller_path","AbstractController::Base","classes\/AbstractController\/Base.html#M001668","()","Returns the full controller name, underscored, without the ending Controller. For instance, MyApp::MyPostsController",2],["controller_path","AbstractController::Base","classes\/AbstractController\/Base.html#M001671","()","Delegates to the class' #controller_path ",2],["controller_path","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002813","()","Alias for #mailer_name",2],["controller_path=","ActionView::TestCase::TestController","classes\/ActionView\/TestCase\/TestController.html#M002518","(path)","",2],["convert_database_option_for_jruby","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000252","()","",2],["convert_key","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003465","(key)","",2],["convert_to_model","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002619","(object)","Converts the given object to an ActiveModel compliant one. ",2],["convert_value","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003466","(value)","",2],["cookie_jar","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002308","()","",2],["cookies","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M002379","()","A map of the cookies returned by the last response, and which will be sent with the next request. ",2],["cookies","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002174","()","Returns the response cookies, converted to a Hash of (name => value) pairs assert_equal 'AuthorOfNewPage',",2],["cookies","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M002421","()","",2],["cookies","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002363","()","",2],["copy","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001381","(destination, sources, options = {})","",2],["copy_javascript","Js::Generators::AssetsGenerator","classes\/Js\/Generators\/AssetsGenerator.html#M000218","()","",2],["copy_stylesheet","Css::Generators::AssetsGenerator","classes\/Css\/Generators\/AssetsGenerator.html#M000194","()","",2],["copy_stylesheet","Css::Generators::ScaffoldGenerator","classes\/Css\/Generators\/ScaffoldGenerator.html#M000195","()","In order to allow the Sass generators to pick up the default Rails CSS and transform it, we leave it",2],["copy_view_files","Erb::Generators::ControllerGenerator","classes\/Erb\/Generators\/ControllerGenerator.html#M000162","()","",2],["copy_view_files","Erb::Generators::ScaffoldGenerator","classes\/Erb\/Generators\/ScaffoldGenerator.html#M000165","()","",2],["count","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003989","()","Returns the number of error messages. p.errors.add(:name, \"can't be blank\") p.errors.count # => 1 p.errors.add(:name,",2],["count_by_sql","ActiveRecord::Querying","classes\/ActiveRecord\/Querying.html#M001307","(sql)","Returns the result of an SQL statement that should only include a COUNT(*) in the SELECT part. The use",2],["count_observers","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M003942","()","Total number of observers. ",2],["create","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001184","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Alias for #insert_sql",2],["create","ActiveRecord::Persistence::ClassMethods","classes\/ActiveRecord\/Persistence\/ClassMethods.html#M000639","(attributes = nil, options = {}, &block)","Creates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["create","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001601","()","Create (i.e., \\save to the remote service) the \\new resource. ",2],["create","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001555","(attributes = {})","Creates a new resource instance and makes a request to the remote service that it be saved, making it",2],["create","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003864","(raw_value, created_at, options = {})","Create an entry with internal attributes set. This method is intended to be used by implementations that",2],["create","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003510","(name)","Alias for #new",2],["create!","ActiveRecord::Validations::ClassMethods","classes\/ActiveRecord\/Validations\/ClassMethods.html#M000683","(attributes = nil, options = {}, &block)","Creates an object just like Base.create but calls <tt>save!<\/tt> instead of +save+ so an exception is",2],["create_active_record_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000340","()","",2],["create_app_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000337","()","",2],["create_app_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000286","()","",2],["create_boot_file","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000339","()","",2],["create_config_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000338","()","",2],["create_config_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000287","()","",2],["create_controller_files","Rails::Generators::ControllerGenerator","classes\/Rails\/Generators\/ControllerGenerator.html#M000262","()","",2],["create_controller_files","Rails::Generators::ScaffoldControllerGenerator","classes\/Rails\/Generators\/ScaffoldControllerGenerator.html#M000364","()","",2],["create_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001222","(name, options = {})","Create a new MySQL database with optional <tt>:charset<\/tt> and <tt>:collation<\/tt>. Charset defaults",2],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001116","(name, options = {})","Create a new PostgreSQL database. Options include <tt>:owner<\/tt>, <tt>:template<\/tt>, <tt>:encoding<\/tt>,",2],["create_db_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000341","()","",2],["create_doc_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000342","()","",2],["create_dummy_app","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000297","(path = nil)","",2],["create_fixture_file","TestUnit::Generators::ModelGenerator","classes\/TestUnit\/Generators\/ModelGenerator.html#M000207","()","",2],["create_fixtures","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000597","(fixtures_directory, table_names, class_names = {})","",2],["create_fixtures","Object","classes\/Object.html#M000365","(*table_names, &block)","",2],["create_generated_attribute","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000235","(attribute_type, name = 'test', index = nil)","Create a Rails::Generators::GeneratedAttribute by supplying the attribute type and, optionally, the attribute",2],["create_generator_files","Rails::Generators::GeneratorGenerator","classes\/Rails\/Generators\/GeneratorGenerator.html#M000265","()","",2],["create_helper_files","Rails::Generators::HelperGenerator","classes\/Rails\/Generators\/HelperGenerator.html#M000311","()","",2],["create_helper_files","TestUnit::Generators::HelperGenerator","classes\/TestUnit\/Generators\/HelperGenerator.html#M000199","()","",2],["create_images_directory","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000291","()","",2],["create_javascript_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000290","()","",2],["create_lib_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000343","()","",2],["create_lib_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000288","()","",2],["create_log_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000344","()","",2],["create_path_and_open_file","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003770","(printer_name)","",2],["create_public_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000345","()","",2],["create_public_stylesheets_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000289","()","",2],["create_root","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000244","()","",2],["create_root_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000336","()","",2],["create_root_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000285","()","",2],["create_root_folder","Erb::Generators::ScaffoldGenerator","classes\/Erb\/Generators\/ScaffoldGenerator.html#M000164","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000736","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001216","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001112","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000792","()","",2],["create_script_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000346","()","",2],["create_script_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000292","()","",2],["create_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000904","(table_name, options = {})","Creates a new table with the name +table_name+. +table_name+ may either be a String or a Symbol. There",2],["create_task_files","Rails::Generators::TaskGenerator","classes\/Rails\/Generators\/TaskGenerator.html#M000264","()","",2],["create_test_dummy_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000294","()","",2],["create_test_file","TestUnit::Generators::ModelGenerator","classes\/TestUnit\/Generators\/ModelGenerator.html#M000206","()","",2],["create_test_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000347","()","",2],["create_test_files","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000293","()","",2],["create_test_files","TestUnit::Generators::ControllerGenerator","classes\/TestUnit\/Generators\/ControllerGenerator.html#M000198","()","",2],["create_test_files","TestUnit::Generators::IntegrationGenerator","classes\/TestUnit\/Generators\/IntegrationGenerator.html#M000208","()","",2],["create_test_files","TestUnit::Generators::MailerGenerator","classes\/TestUnit\/Generators\/MailerGenerator.html#M000200","()","",2],["create_test_files","TestUnit::Generators::ObserverGenerator","classes\/TestUnit\/Generators\/ObserverGenerator.html#M000205","()","",2],["create_test_files","TestUnit::Generators::PerformanceGenerator","classes\/TestUnit\/Generators\/PerformanceGenerator.html#M000197","()","",2],["create_test_files","TestUnit::Generators::PluginGenerator","classes\/TestUnit\/Generators\/PluginGenerator.html#M000196","()","",2],["create_test_files","TestUnit::Generators::ScaffoldGenerator","classes\/TestUnit\/Generators\/ScaffoldGenerator.html#M000201","()","",2],["create_tmp_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000348","()","",2],["create_vendor_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000349","()","",2],["creator?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M001441","()","",2],["csrf_meta_tag","ActionView::Helpers::CsrfHelper","classes\/ActionView\/Helpers\/CsrfHelper.html#M002622","()","Alias for #csrf_meta_tags",2],["csrf_meta_tags","ActionView::Helpers::CsrfHelper","classes\/ActionView\/Helpers\/CsrfHelper.html#M002621","()","Returns meta tags \"csrf-param\" and \"csrf-token\" with the name of the cross-site request forgery protection",2],["css_select","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M002424","(*args)","Select and return all matching elements. If called with a single argument, uses that argument as a selector",2],["current","DateTime","classes\/DateTime.html#M003206","()","Returns <tt>Time.zone.now.to_datetime<\/tt> when <tt>Time.zone<\/tt> or <tt>config.time_zone<\/tt> are set,",2],["current","Time","classes\/Time.html#M002872","()","Returns <tt>Time.zone.now<\/tt> when <tt>Time.zone<\/tt> or <tt>config.time_zone<\/tt> are set, otherwise",2],["current_cycle","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002690","(name = \"default\")","Returns the current cycle string after a cycle has been started. Useful for complex table highlighting",2],["current_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001224","()","",2],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001123","()","Returns the current database name. ",2],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M003928","()","",2],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M003919","()","",2],["current_page?","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002582","(options)","True if the current request URI was generated by the given +options+. ==== Examples Let's say we're in",2],["current_savepoint_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000741","()","",2],["current_schema","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001124","()","Returns the current schema name. ",2],["current_tags","ActiveSupport::TaggedLogging","classes\/ActiveSupport\/TaggedLogging.html#M003422","()","",2],["custom_dir","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/AssetIncludeTag.html#M002738","()","",2],["custom_dir","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptIncludeTag.html#M002719","()","",2],["custom_dir","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetIncludeTag.html#M002729","()","",2],["custom_method_collection_url","ActiveResource::CustomMethods::ClassMethods","classes\/ActiveResource\/CustomMethods\/ClassMethods.html#M001508","(method_name, options = {})","",2],["cycle","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002689","(first_value, *values)","Creates a Cycle object whose _to_s_ method cycles through elements of an array every time it is called.",2],["daemon","Process","classes\/Process.html#M003016","(nochdir = nil, noclose = nil)","",2],["dangerous_attribute_method?","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M001332","(method_name)","",2],["dasherize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003326","(underscored_word)","Replaces underscores with dashes in the string. Example: \"puni_puni\" # => \"puni-puni\" ",2],["dasherize","String","classes\/String.html#M003109","()","Replaces underscores with dashes in the string. \"puni_puni\" # => \"puni-puni\" ",2],["database_configuration","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000522","()","Loads and returns the contents of the #database_configuration_file. The contents of the file are processed",2],["database_gemfile_entry","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000247","()","",2],["database_yml","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000322","()","",2],["date_select","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002777","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, and day) pre-selected for accessing a specified date-based",2],["date_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002796","(method, options = {}, html_options = {})","",2],["datetime_select","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002779","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, day, hour, and minute) pre-selected for accessing",2],["datetime_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002798","(method, options = {}, html_options = {})","",2],["days_in_month","Time","classes\/Time.html#M002868","(month, year = now.year)","Return the number of days in the given month. If no year is specified, it will use the current year.",2],["days_to_week_start","Time","classes\/Time.html#M002891","(start_day = :monday)","Returns number of days to start of this week, week starts on start_day (default is :monday). ",2],["db","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000323","()","",2],["debug","ActionView::Helpers::DebugHelper","classes\/ActionView\/Helpers\/DebugHelper.html#M002790","(object)","Returns a YAML representation of +object+ wrapped with <pre> and <\/pre>. If the object cannot be converted",2],["debug_protected_attribute_removal","ActiveModel::MassAssignmentSecurity::Sanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html#M004098","(attributes, sanitized_attributes)","",2],["debugger","Kernel","classes\/Kernel.html#M002839","()","Starts a debugging session if ruby-debug has been loaded (call rails server --debugger to do load it).",2],["decode","ActiveResource::Formats::JsonFormat","classes\/ActiveResource\/Formats\/JsonFormat.html#M001522","(json)","",2],["decode","ActiveResource::Formats::XmlFormat","classes\/ActiveResource\/Formats\/XmlFormat.html#M001518","(xml)","",2],["decode","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M003612","(json, options ={})","",2],["decode64","ActiveSupport::Base64","classes\/ActiveSupport\/Base64.html#M003439","(value)","",2],["decode64","Base64","classes\/Base64.html#M003436","(data)","Decodes a base 64 encoded string to its original representation. ActiveSupport::Base64.decode64(\"T3JpZ2luYWwgdW5lbmNvZGVkIHN0cmluZw==\")",2],["decode_credentials","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M001872","(request)","",2],["decode_credentials","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001884","(header)","",2],["decode_credentials_header","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001883","(request)","",2],["decompose","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003383","()","Performs canonical decomposition on all the characters. Example: '\u00e9'.length                         #",2],["decompose_codepoints","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003397","(type, codepoints)","Decompose composed characters to the decomposed form. ",2],["decompress","ActiveSupport::Gzip","classes\/ActiveSupport\/Gzip.html#M003490","(source)","Decompresses a gzipped string. ",2],["deconstantize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003328","(path)","Removes the rightmost segment from the constant expression in the string: \"Net::HTTP\".deconstantize ",2],["deconstantize","String","classes\/String.html#M003111","()","Removes the rightmost segment from the constant expression in the string. \"Net::HTTP\".deconstantize ",2],["decrement","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000671","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and subtracts the value passed as +by+ (default is 1). The decrement",2],["decrement","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003549","(name, amount = 1, options = nil)","",2],["decrement","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M003578","(name, amount = 1, options = nil)","Decrement an integer value in the cache. ",2],["decrement","ActiveSupport::Cache::NullStore","classes\/ActiveSupport\/Cache\/NullStore.html#M003540","(name, amount = 1, options = nil)","",2],["decrement","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003852","(name, amount = 1, options = nil)","Increment an integer value in the cache. Options are passed to the underlying cache implementation. All",2],["decrement!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000672","(attribute, by = 1)","Wrapper around +decrement+ that saves the record. This method differs from its non-bang version in that",2],["decrement_counter","ActiveRecord::CounterCache","classes\/ActiveRecord\/CounterCache.html#M001398","(counter_name, id)","Decrement a number field by one, usually representing a count. This works the same as increment_counter",2],["decrement_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000734","()","",2],["decrypt","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M003232","(value)","",2],["decrypt_and_verify","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M003234","(value)","Decrypt and verify a message. We need to verify the message in order to avoid padding attacks. Reference:",2],["deep_dup","Hash","classes\/Hash.html#M003004","()","Returns a deep copy of hash. hash = { :a => { :b => 'b' } } dup  = hash.deep_dup dup[:a][:c] = 'c' hash[:a][:c]",2],["deep_merge","Hash","classes\/Hash.html#M003005","(other_hash)","Returns a new hash with +self+ and +other_hash+ merged recursively. h1 = {:x => {:y => [4,5,6]}, :z =>",2],["deep_merge!","Hash","classes\/Hash.html#M003006","(other_hash)","Same as +deep_merge+, but modifies +self+. ",2],["deep_munge","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002123","(hash)","Remove nils from the params hash ",2],["default","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002804","(value = nil)","",2],["default","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003447","(key = nil)","",2],["default","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000128","()","",2],["default","RailsEnvironment","classes\/RailsEnvironment.html#M000411","()","",2],["default=","RailsEnvironment","classes\/RailsEnvironment.html#M000412","(rails_env)","",2],["default_action","ActionController::Responder","classes\/ActionController\/Responder.html#M001805","()","By default, render the <code>:edit<\/code> action for HTML requests with failure, unless the verb is POST.",2],["default_aliases_for_option","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000187","(name, options)","Return default aliases for the option name given doing a lookup in Rails::Generators.aliases. ",2],["default_charset=","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M001765","(new_charset)","",2],["default_for_option","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000188","(config, name, options, default)","Return default for the option name given doing a lookup in config. ",2],["default_generator_root","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000193","()","",2],["default_inspect","DateTime","classes\/DateTime.html#M003196","()","Alias for #inspect",2],["default_middleware_stack","Rails::Application","classes\/Rails\/Application.html#M000034","()","",2],["default_middleware_stack","Rails::Engine","classes\/Rails\/Engine.html#M000513","()","",2],["default_options","Rails::Server","classes\/Rails\/Server.html#M000407","()","",2],["default_primary_key_type","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000821","()","",2],["default_render","ActionController::ImplicitRender","classes\/ActionController\/ImplicitRender.html#M001861","(*args)","",2],["default_render","ActionController::Responder","classes\/ActionController\/Responder.html#M001801","()","If a response block was given, use it, otherwise call render on controller. ",2],["default_scope","ActiveRecord::Scoping::Default::ClassMethods","classes\/ActiveRecord\/Scoping\/Default\/ClassMethods.html#M001294","(scope = {})","Use this macro in your model to set a default scope for all operations on the model. class Article <",2],["default_sequence_name","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001030","(table, column)","",2],["default_source_root","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000179","()","Returns the default source root for a given generator. This is used internally by rails to set its generators",2],["default_timezone","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001401","","Determines whether to use Time.local (using :local) or Time.utc (using :utc) when pulling dates and times",2],["default_url_options","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M002391","()","",2],["default_url_options","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M001973","(options)","Alias for #default_url_options=",2],["default_url_options=","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M002392","(options)","",2],["default_url_options=","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M001972","(options)","",2],["default_value_for_option","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000186","(name, options)","Return the default value for the option name given doing a lookup in Rails::Generators.options. ",2],["defaults","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M001986","(defaults = {})","Allows you to set default parameters for a route, such as this: defaults :id => 'home' do match 'scoped_pages\/(:id)',",2],["define_attribute_method","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M004111","(attr_name)","",2],["define_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M004110","(attr_names)","Declares the attributes that should be prefixed and suffixed by ActiveModel::AttributeMethods. To use,",2],["define_callbacks","ActiveSupport::ClassMethods","classes\/ActiveSupport\/ClassMethods.html#M003888","(*callbacks)","Define sets of events in the object lifecycle that support callbacks. define_callbacks :validate define_callbacks",2],["define_method__attribute","ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/DeprecatedUnderscoreRead\/ClassMethods.html#M001356","(attr_name)","",2],["define_method_attribute","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M001331","(attr_name)","",2],["define_method_attribute","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M001313","(attr_name)","We want to generate the methods via module_eval rather than define_method, because define_method is slower",2],["define_method_attribute=","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/TimeZoneConversion\/ClassMethods.html#M001359","(attr_name)","Defined for all +datetime+ and +timestamp+ attributes when +time_zone_aware_attributes+ are enabled.",2],["define_method_attribute=","ActiveRecord::AttributeMethods::Write::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Write\/ClassMethods.html#M001321","(attr_name)","",2],["define_model_callbacks","ActiveModel::Callbacks","classes\/ActiveModel\/Callbacks.html#M004169","(*callbacks)","define_model_callbacks accepts the same options define_callbacks does, in case you want to overwrite",2],["defined_app_const_base","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000355","()","",2],["defined_app_const_base?","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000356","()","Alias for #defined_app_const_base",2],["defined_app_name","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000354","()","",2],["delegate","Module","classes\/Module.html#M002972","(*methods)","Provides a delegate class method to easily expose contained objects' methods as your own. Pass one or",2],["delete","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001956","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating DELETE HTTP method and set\/volley the response ",2],["delete","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002217","(key)","",2],["delete","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002368","(path, parameters = nil, headers = nil)","Performs a DELETE request with the given parameters. See +#get+ for more details. ",2],["delete","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002282","(target)","",2],["delete","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M001980","(*args, &block)","Define a route that only recognizes HTTP PUT. For supported arguments, see <tt>Base#match<\/tt>. Example:",2],["delete","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003981","(key)","Delete messages for +key+ ",2],["delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001022","(arel, name = nil, binds = [])","Executes the delete statement and returns the number of rows affected. ",2],["delete","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html#M000846","(key)","",2],["delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001066","(sql_key)","",2],["delete","ActiveRecord::ConnectionAdapters::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html#M000830","(key)","",2],["delete","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000645","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["delete","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001560","(id, options = {})","Deletes the resources with the ID in the +id+ parameter. ==== Options All options specify \\prefix and",2],["delete","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001627","(path, headers = {})","Executes a DELETE request (see HTTP protocol documentation if unfamiliar). Used to delete resources.",2],["delete","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001506","(custom_method_name, options = {})","",2],["delete","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001512","(method_name, options = {})","",2],["delete","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003848","(name, options = nil)","Deletes an entry in the cache. Returns +true+ if an entry is deleted. Options are passed to the underlying",2],["delete","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003459","(key)","Removes a specified key from the hash. ",2],["delete","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003683","(key)","",2],["delete?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002096","()","Is this a DELETE request? Equivalent to <tt>request.request_method_symbol == :delete<\/tt>. ",2],["delete_cookie","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002166","(key, value={})","",2],["delete_entry","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003553","(key, options)","",2],["delete_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M003523","(key, options)","",2],["delete_if","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003684","()","",2],["delete_matched","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003550","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M003579","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::NullStore","classes\/ActiveSupport\/Cache\/NullStore.html#M003541","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003850","(matcher, options = nil)","Delete all entries with keys matching the pattern. Options are passed to the underlying cache implementation.",2],["delete_responses_to_replace","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M001485","(new_responses)","",2],["delete_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001041","(sql, name = nil)","Executes the delete statement and returns the number of rows affected. ",2],["delete_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002377","(path, parameters = nil, headers = nil)","Performs a DELETE request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["demodulize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003327","(path)","Removes the module part from the expression in the string: \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["demodulize","String","classes\/String.html#M003110","()","Removes the module part from the constant expression in the string. \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["deny?","ActiveModel::MassAssignmentSecurity::BlackList","classes\/ActiveModel\/MassAssignmentSecurity\/BlackList.html#M004095","(key)","",2],["deny?","ActiveModel::MassAssignmentSecurity::PermissionSet","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html#M004092","(key)","",2],["deny?","ActiveModel::MassAssignmentSecurity::WhiteList","classes\/ActiveModel\/MassAssignmentSecurity\/WhiteList.html#M004094","(key)","",2],["deprecate","Module","classes\/Module.html#M002975","(*method_names)","Declare that a method has been deprecated. deprecate :foo deprecate :bar => 'message' deprecate :foo,",2],["deprecated_method_warning","ActiveSupport::Deprecation","classes\/ActiveSupport\/Deprecation.html#M003915","(method_name, message = nil)","",2],["desc","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000174","(description=nil)","Tries to get the description from a USAGE file one folder above the source root otherwise uses a default",2],["desc","Rails::SubTestTask","classes\/Rails\/SubTestTask.html#M000381","(string)","",2],["descendants","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M003410","(klass)","",2],["descendants","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M003414","()","",2],["descends_from_active_record?","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001260","()","True if this isn't a concrete subclass needing a STI type condition. ",2],["describe","ActiveSupport::Testing::Declarative","classes\/ActiveSupport\/Testing\/Declarative.html#M003828","(text)","",2],["destination","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000221","(path)","Sets the destination of generator files: destination File.expand_path(\"..\/tmp\", File.dirname(__FILE__))",2],["destroy","ActionDispatch::Session::DestroyableSession","classes\/ActionDispatch\/Session\/DestroyableSession.html#M002326","()","",2],["destroy","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000646","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["destroy","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001588","()","Deletes the resource from the remote service. ==== Examples my_id = 3 my_person = Person.find(my_id)",2],["destroy","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M000143","()","DELETE destroy ",2],["destroy_session","ActionDispatch::Session::CacheStore","classes\/ActionDispatch\/Session\/CacheStore.html#M002337","(env, sid, options)","Remove a session from the cache. ",2],["destroyed?","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000641","()","Returns true if this object has been destroyed, otherwise returns false. ",2],["detail_args_for","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M002454","(options)","Compute details hash and key according to user options (e.g. passed from #render). ",2],["details_for_lookup","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M001698","()","",2],["determine_default_controller_class","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M001946","(name)","",2],["determine_default_helper_class","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M002521","(name)","",2],["determine_install_method","Rails::Commands::Install","classes\/Rails\/Commands\/Install.html#M000447","()","",2],["diff","Hash","classes\/Hash.html#M003007","(h2)","Returns a hash that represents the difference between two hashes. Examples: {1 => 2}.diff(1 => 2)   ",2],["direct_descendants","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M003413","()","",2],["direct_descendants","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M003409","(klass)","",2],["dirname","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M003405","()","Returns the directory in which the data files are stored ",2],["dirties_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000878","(base, *method_names)","",2],["disable","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004077","(*observers, &block)","Disables one or more observers. This supports multiple forms: ORM.observers.disable :user_observer #",2],["disable_cache","ActionView::LookupContext::DetailsCache","classes\/ActionView\/LookupContext\/DetailsCache.html#M002444","()","Temporary skip passing the details_key forward. ",2],["disable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000881","()","",2],["disable_referential_integrity","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000724","()","Override to turn off referential integrity while executing <tt>&block<\/tt>. ",2],["disabled_for?","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M003954","(object)","",2],["disabled_for?","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004076","(observer)","Returns true if the given observer is disabled for the model class. ",2],["disabled_observer_stack","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004082","()","",2],["disabled_observers","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004079","()","",2],["discard","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002225","(k = nil)","Marks the entire flash or a single flash entry to be discarded by the end of the current action: flash.discard",2],["disconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000727","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000979","()","Disconnects all connections in the pool, and clears the pool. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001175","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000859","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001075","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000770","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["dispatch","ActionController::RackDelegation","classes\/ActionController\/RackDelegation.html#M001815","(action, request, response = ActionDispatch::Response.new)","",2],["display","ActionController::Responder","classes\/ActionController\/Responder.html#M001802","(resource, given_options={})","Display is just a shortcut to render a resource with the current format. display @user, :status => :ok",2],["display","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M000477","(results, options={})","Prints the mapping from filenames to annotations in +results+ ordered by filename. The +options+ hash",2],["display_errors","ActionController::Responder","classes\/ActionController\/Responder.html#M001803","()","",2],["distance_of_time_in_words","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002774","(from_time, to_time = 0, include_seconds = false, options = {})","Reports the approximate distance in time between two Time, Date or DateTime objects or integers as seconds.",2],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002776","(from_time, include_seconds = false)","Alias for #time_ago_in_words",2],["distinct","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000964","(columns, order_by)","SELECT DISTINCT clause for a given set of columns and a given ORDER BY clause. Both PostgreSQL and Oracle",2],["div_for","ActionView::Helpers::RecordTagHelper","classes\/ActionView\/Helpers\/RecordTagHelper.html#M002677","(record, *args, &block)","Produces a wrapper DIV element with id and class parameters that relate to the specified Active Record",2],["doc","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000324","()","",2],["dom_class","ActionController::RecordIdentifier","classes\/ActionController\/RecordIdentifier.html#M001757","(record_or_class, prefix = nil)","The DOM class convention is to use the singular form of an object or class. Examples: dom_class(post)",2],["dom_id","ActionController::RecordIdentifier","classes\/ActionController\/RecordIdentifier.html#M001758","(record, prefix = nil)","The DOM id convention is to use the singular form of an object or class with the id following an underscore.",2],["domain","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002085","(tld_length = @@tld_length)","Returns the \\domain part of a \\host, such as \"rubyonrails.org\" in \"www.rubyonrails.org\". You can specify",2],["down","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001372","()","",2],["downcase","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003378","()","Convert characters in the string to lowercase. Example: 'V\u011aDA A V\u00ddZKUM'.mb_chars.downcase.to_s # => \"v\u011bda",2],["download","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M000460","(link)","",2],["drop_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000907","(table_name, options = {})","Drops a table from the database. ",2],["dst?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003251","()","",2],["dummy_path","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000309","(path = nil)","",2],["dup","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001585","()","Duplicates the current resource without saving it. ==== Examples my_invoice = Invoice.create(:customer",2],["dup","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003455","()","Returns an exact copy of the hash. ",2],["duplicable?","BigDecimal","classes\/BigDecimal.html#M003171","()","",2],["duplicable?","FalseClass","classes\/FalseClass.html#M003167","()","+false+ is not duplicable: false.duplicable? # => false false.dup         # => TypeError: can't dup FalseClass",2],["duplicable?","Module","classes\/Module.html#M003170","()","Modules are not duplicable: m = Module.new # => #<Module:0x10328b6e0> m.dup          # => #<Module:0x10328b6e0>",2],["duplicable?","NilClass","classes\/NilClass.html#M003166","()","+nil+ is not duplicable: nil.duplicable? # => false nil.dup         # => TypeError: can't dup NilClass",2],["duplicable?","Object","classes\/Object.html#M003165","()","Can you safely dup this object? False for +nil+, +false+, +true+, symbols, numbers, class and module",2],["duplicable?","Symbol","classes\/Symbol.html#M003169","()","Symbols are not duplicable: :my_symbol.duplicable? # => false :my_symbol.dup         # => TypeError:",2],["duplicable?","TrueClass","classes\/TrueClass.html#M003168","()","+true+ is not duplicable: true.duplicable? # => false true.dup         # => TypeError: can't dup TrueClass",2],["each","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002221","(&block)","",2],["each","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002273","()","",2],["each","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003984","()","Iterates through each error key, value pair in the error messages hash. Yields the attribute and the",2],["each","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html#M000842","(&block)","",2],["each","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001059","(&block)","",2],["each","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/StatementPool.html#M000752","(&block)","",2],["each","ActiveRecord::ConnectionAdapters::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html#M000824","()","",2],["each","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000602","(&block)","",2],["each","ActiveRecord::Fixtures::File","classes\/ActiveRecord\/Fixtures\/File.html#M001461","(&block)","",2],["each","ActiveRecord::Result","classes\/ActiveRecord\/Result.html#M001280","()","",2],["each","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M003303","(&block)","",2],["each","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003693","()","",2],["each_key","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003691","()","",2],["each_pair","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003694","()","",2],["each_subclass_array","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004085","()","",2],["each_value","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003692","()","",2],["each_with_object","Enumerable","classes\/Enumerable.html#M003181","(memo)","Iterates over a collection, passing the current element *and* the +memo+ to the block. Handy for building",2],["eager_autoload","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M003470","()","",2],["eager_autoload!","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M003471","()","",2],["eager_load","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000046","()","",2],["eager_load!","Rails::Engine","classes\/Rails\/Engine.html#M000495","()","",2],["eager_load!","Rails::Railtie","classes\/Rails\/Railtie.html#M000391","()","",2],["eager_load_paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M000376","()","",2],["element_name","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001545","()","",2],["element_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001551","(id, prefix_options = {}, query_options = nil)","Gets the element path for the given ID in +id+.  If the +query_options+ parameter is omitted, Rails will",2],["element_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001604","(options = nil)","",2],["email_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002637","(object_name, method, options = {})","Returns a text_field of type \"email\". email_field(\"user\", \"address\") # => <input id=\"user_address\" size=\"30\"",2],["email_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002563","(name, value = nil, options = {})","Creates a text field of type \"email\". ==== Options * Accepts the same options as text_field_tag. ",2],["emitted_hidden_id?","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002655","()","",2],["empty?","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002219","()","",2],["empty?","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003990","()","Returns true if no errors are found, false otherwise. If the error message is a string it can be empty.",2],["empty?","ActiveSupport::Dependencies::ClassCache","classes\/ActiveSupport\/Dependencies\/ClassCache.html#M003309","()","",2],["empty_directory_with_gitkeep","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000259","(destination, config = {})","",2],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001033","()","",2],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000812","()","",2],["emulate_booleans","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001192","","By default, the MysqlAdapter will consider all columns of type <tt>tinyint(1)<\/tt> as boolean. If you",2],["enable","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004078","(*observers, &block)","Enables one or more observers. This supports multiple forms: ORM.observers.enable :user_observer # =>",2],["enable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000880","()","",2],["enable_warnings","Kernel","classes\/Kernel.html#M002843","()","Sets $VERBOSE to true for the duration of the block and back to its original value afterwards. ",2],["encode","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001590","(options={})","Returns the serialized string representation of the resource in the configured serialization format specified",2],["encode","ActiveResource::Formats::JsonFormat","classes\/ActiveResource\/Formats\/JsonFormat.html#M001521","(hash, options = nil)","",2],["encode","ActiveResource::Formats::XmlFormat","classes\/ActiveResource\/Formats\/XmlFormat.html#M001517","(hash, options={})","",2],["encode","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M003618","(value, options = nil)","Dumps object in JSON (JavaScript Object Notation). See www.json.org for more info. ",2],["encode","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M003620","(value, use_options = true)","",2],["encode!","ActionView::Template","classes\/ActionView\/Template.html#M002436","()","This method is responsible for properly setting the encoding of the source. Until this point, we assume",2],["encode64","ActiveSupport::Base64","classes\/ActiveSupport\/Base64.html#M003438","(value)","",2],["encode64","Base64","classes\/Base64.html#M003435","(data)","Encodes a string to its base 64 representation. Each 60 characters of output is separated by a newline",2],["encode64s","ActiveSupport::Base64","classes\/ActiveSupport\/Base64.html#M003440","(value)","",2],["encode_credentials","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M001873","(user_name, password)","",2],["encode_credentials","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001882","(http_method, credentials, password, password_is_ha1)","",2],["encode_credentials","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token.html#M001896","(token, options = {})","Encodes the given token and options into an Authorization header value. token   - String token. options",2],["encode_json","ActiveSupport::JSON::Variable","classes\/ActiveSupport\/JSON\/Variable.html#M003645","(encoder)","",2],["encode_json","FalseClass","classes\/FalseClass.html#M003629","(encoder)","",2],["encode_json","Hash","classes\/Hash.html#M003640","(encoder)","",2],["encode_json","NilClass","classes\/NilClass.html#M003631","(encoder)","",2],["encode_json","String","classes\/String.html#M003633","(encoder)","",2],["encode_json","TrueClass","classes\/TrueClass.html#M003627","(encoder)","",2],["encode_with","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001416","(coder)","Populate +coder+ with attributes about this record that should be serialized. The structure of +coder+",2],["encode_with","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003675","(coder)","",2],["encode_with","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003082","(coder)","",2],["encode_with","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003264","(coder)","",2],["encode_with","BigDecimal","classes\/BigDecimal.html#M002986","(coder)","",2],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001125","()","Returns the current database encoding format. ",2],["encoding=","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000519","(value)","",2],["encoding_aware?","String","classes\/String.html#M003052","()","",2],["encoding_aware?","String","classes\/String.html#M003051","()","",2],["encrypt","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M003231","(value)","",2],["encrypt_and_sign","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M003233","(value)","Encrypt and sign a message. We need to sign the message in order to avoid padding attacks. Reference:",2],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M003921","()","",2],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M003924","(name)","",2],["end_of_day","DateTime","classes\/DateTime.html#M003219","()","Returns a new DateTime representing the end of the day (23:59:59) ",2],["end_of_day","Time","classes\/Time.html#M002904","()","Returns a new Time representing the end of the day, 23:59:59.999999 (.999999999 in ruby1.9) ",2],["end_of_hour","DateTime","classes\/DateTime.html#M003222","()","Returns a new DateTime representing the end of the hour (hh:59:59) ",2],["end_of_hour","Time","classes\/Time.html#M002907","()","Returns a new Time representing the end of the hour, x:59:59.999999 (.999999999 in ruby1.9) ",2],["end_of_month","Time","classes\/Time.html#M002910","()","Returns a new Time representing the end of the month (end of the last day of the month) ",2],["end_of_quarter","Time","classes\/Time.html#M002914","()","Returns a new Time representing the end of the quarter (end of the last day of march, june, september,",2],["end_of_week","Time","classes\/Time.html#M002895","(start_day = :monday)","Returns a new Time representing the end of this week, week starts on start_day (default is :monday, i.e.",2],["end_of_year","Time","classes\/Time.html#M002918","()","Returns a new Time representing the end of the year (end of the 31st of december) ",2],["end_transaction","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004083","()","",2],["endpoint","Rails::Engine","classes\/Rails\/Engine.html#M000501","()","",2],["endpoint","Rails::Engine","classes\/Rails\/Engine.html#M000490","(endpoint = nil)","",2],["engine","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M003613","()","",2],["engine=","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M003614","(name)","",2],["engines","Rails::Engine::Railties","classes\/Rails\/Engine\/Railties.html#M000370","()","",2],["enlist_fixture_connections","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures.html#M000635","()","",2],["entry","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M002664","(record, options = {})","Creates an entry tag for a specific record and prefills the id using class and id. Options: * <tt>:published<\/tt>:",2],["enumerate","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M000472","(tag, options={})","Prints all annotations with tag +tag+ under the root directories +app+, +config+, +lib+, +script+, and",2],["env","ActionController::Metal","classes\/ActionController\/Metal.html#M001735","()","",2],["env","Rails","classes\/Rails.html#M000021","()","",2],["env=","Rails","classes\/Rails.html#M000022","(environment)","",2],["env_config","Rails::Application","classes\/Rails\/Application.html#M000010","()","Rails.application.env_config stores some of the Rails initial environment parameters. Currently stores:",2],["env_config","Rails::Engine","classes\/Rails\/Engine.html#M000503","()","",2],["env_filter","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M002141","()","",2],["environment","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003814","()","",2],["environment","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000148","(data=nil, options={}, &block)","Adds a line inside the Application class for config\/application.rb. If options :env is specified, the",2],["environment=","Rails::Commands::Plugin","classes\/Rails\/Commands\/Plugin.html#M000440","(value)","",2],["eql?","ActionView::FileSystemResolver","classes\/ActionView\/FileSystemResolver.html#M002471","(resolver)","",2],["eql?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001418","(comparison_object)","Alias for #==",2],["eql?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001583","(other)","Tests for equality (delegates to ==). ",2],["eql?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003277","(other)","",2],["eql?","Time","classes\/Time.html#M002937","(other)","Alias for #eql_with_coercion",2],["eql_with_coercion","Time","classes\/Time.html#M002936","(other)","Layers additional behavior on Time#eql? so that ActiveSupport::TimeWithZone instances can be eql? to",2],["eql_without_coercion","Time","classes\/Time.html#M002938","(other)","Alias for #eql?",2],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M003922","(error_message)","",2],["error_message","ActionView::Helpers::ActiveModelInstanceTag","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html#M002713","()","",2],["error_number","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001171","(exception)","",2],["error_wrapping","ActionView::Helpers::ActiveModelInstanceTag","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html#M002712","(html_tag)","",2],["errors","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M003967","()","Returns the +Errors+ object that holds all information about attribute error messages. ",2],["errors","ActiveResource::Validations","classes\/ActiveResource\/Validations.html#M001479","()","Returns the Errors object that holds all information about attribute error messages. ",2],["errors","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M000142","()","POST create PUT update ",2],["escape","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M003623","(string)","",2],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001085","(value)","Escapes binary strings for bytea input to the database. ",2],["escape_glob_chars","ActionDispatch::FileHandler","classes\/ActionDispatch\/FileHandler.html#M002314","(path)","",2],["escape_javascript","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M002613","(javascript)","Escapes carriage returns and single and double quotes for JavaScript segments. Also available through",2],["escape_once","ActionView::Helpers::TagHelper","classes\/ActionView\/Helpers\/TagHelper.html#M002697","(html)","Returns an escaped version of +html+ without affecting existing escaped entities. ==== Examples escape_once(\"1",2],["establish_connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000888","(spec = ENV[\"DATABASE_URL\"])","Establishes the connection to the database. Accepts a hash as input where the <tt>:adapter<\/tt> key must",2],["establish_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000996","(name, spec)","",2],["etag=","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M002184","(etag)","",2],["etag_matches?","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M002179","(etag)","",2],["evaluate_default_scope","ActiveRecord::Scoping::Default::ClassMethods","classes\/ActiveRecord\/Scoping\/Default\/ClassMethods.html#M001298","()","The ignore_default_scope flag is used to prevent an infinite recursion situation where a default scope",2],["except","Hash","classes\/Hash.html#M003012","(*keys)","Return a hash that includes everything but the given keys. This is useful for limiting a set of parameters",2],["except!","Hash","classes\/Hash.html#M003013","(*keys)","Replaces the hash without the given keys. ",2],["excerpt","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002685","(text, phrase, *args)","Extracts an excerpt from +text+ that matches the first instance of +phrase+. The <tt>:radius<\/tt> option",2],["exclude?","Enumerable","classes\/Enumerable.html#M003184","(object)","The negative of the <tt>Enumerable#include?<\/tt>. Returns true if the collection does not include the",2],["exclude?","String","classes\/String.html#M003117","(string)","The inverse of <tt>String#include?<\/tt>. Returns true if the string does not include the other string.",2],["exec_delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001018","(sql, name, binds)","Executes delete +sql+ statement in the context of this connection using +binds+ as the bind substitutes.",2],["exec_delete","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001186","(sql, name, binds)","",2],["exec_delete","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000869","(sql, name, binds)","",2],["exec_delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001104","(sql, name = 'SQL', binds = [])","",2],["exec_delete","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000784","(sql, name = 'SQL', binds = [])","",2],["exec_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001017","(sql, name, binds)","Executes insert +sql+ statement in the context of this connection using +binds+ as the bind substitutes.",2],["exec_insert","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001185","(sql, name, binds)","",2],["exec_query","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001016","(sql, name = 'SQL', binds = [])","Executes +sql+ statement in the context of this connection using +binds+ as the bind substitutes. +name+",2],["exec_query","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001180","(sql, name = 'SQL', binds = [])","",2],["exec_query","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000864","(sql, name = 'SQL', binds = [])","",2],["exec_query","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001103","(sql, name = 'SQL', binds = [])","",2],["exec_query","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000783","(sql, name = nil, binds = [])","",2],["exec_script_rails!","Rails::ScriptRailsLoader","classes\/Rails\/ScriptRailsLoader.html#M000038","()","",2],["exec_update","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001019","(sql, name, binds)","Executes update +sql+ statement in the context of this connection using +binds+ as the bind substitutes.",2],["exec_update","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001187","(sql, name, binds)","Alias for #exec_delete",2],["exec_update","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000870","(sql, name, binds)","Alias for #exec_delete",2],["exec_update","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001105","(sql, name = 'SQL', binds = [])","Alias for #exec_delete",2],["exec_update","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000785","(sql, name = 'SQL', binds = [])","Alias for #exec_delete",2],["exec_without_stmt","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001181","(sql, name = 'SQL', binds = [])","Alias for #exec_query",2],["execute","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001210","(sql, name = nil)","Executes the SQL statement in the context of this connection. ",2],["execute","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001015","(sql, name = nil)","Executes the SQL statement in the context of this connection. ",2],["execute","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001179","(sql, name = nil)","Executes the SQL statement in the context of this connection. ",2],["execute","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001101","(sql, name = nil)","Executes an SQL statement, returning a PGresult object on success or raising a PGError exception otherwise.",2],["execute","ActiveSupport::FileUpdateChecker","classes\/ActiveSupport\/FileUpdateChecker.html#M003661","()","Executes the given block and updates the counter to latest timestamp. ",2],["execute_and_free","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000867","(sql, name = nil)","",2],["execute_if_updated","ActiveSupport::FileUpdateChecker","classes\/ActiveSupport\/FileUpdateChecker.html#M003662","()","Execute the block given if updated. ",2],["exist?","ActionDispatch::RailsEntityStore","classes\/ActionDispatch\/RailsEntityStore.html#M002150","(key)","",2],["exist?","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003849","(name, options = nil)","Return true if the cache contains an entry for the given key. Options are passed to the underlying cache",2],["existent","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M000055","()","Returns all expanded paths but only if they exist in the filesystem. ",2],["existent_directories","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M000056","()","",2],["exists?","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M002450","(name, prefixes = [], partial = false, keys = [], options = {})","",2],["exists?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001561","(id, options = {})","Asserts the existence of a resource, returning <tt>true<\/tt> if the resource is found. ==== Examples",2],["exists?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001589","()","Evaluates to <tt>true<\/tt> if this resource is not <tt>new?<\/tt> and is found on the remote service.",2],["exit_on_failure?","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000398","()","We want to exit on failure to be kind to other libraries This is only when accessing via CLI ",2],["expand_cache_key","ActiveSupport::Cache","classes\/ActiveSupport\/Cache.html#M003837","(key, namespace = nil)","",2],["expand_hash_conditions_for_aggregates","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000656","(attrs)","Accepts a hash of SQL conditions and replaces those attributes that correspond to a +composed_of+ relationship",2],["expanded","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M000054","()","Expands all paths against the root and return all unique values. ",2],["expected_response","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001880","(http_method, uri, credentials, password, password_is_ha1=true)","Returns the expected response for a request of +http_method+ to +uri+ with the decoded +credentials+",2],["expire","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000711","()","",2],["expire_action","ActionController::Caching::Actions","classes\/ActionController\/Caching\/Actions.html#M001921","(options = {})","",2],["expire_fragment","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M001936","(key, options = nil)","Removes fragments from the cache. +key+ can take one of three forms: * String - This would normally take",2],["expire_page","ActionController::Caching::Pages","classes\/ActionController\/Caching\/Pages.html#M001930","(options = {})","Expires the page that was cached with the +options+ as a key. Example: expire_page :controller => \"lists\",",2],["expire_page","ActionController::Caching::Pages::ClassMethods","classes\/ActionController\/Caching\/Pages\/ClassMethods.html#M001924","(path)","Expires the page that was cached with the +path+ as a key. Example: expire_page \"\/lists\/show\" ",2],["expired?","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003869","()","Check if the entry is expired. The +expires_in+ parameter can override the value set when the entry was",2],["expires_at","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003871","()","Seconds since the epoch when the entry will expire. ",2],["expires_at=","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003870","(time)","Set a new time when the entry will expire. ",2],["expires_in","ActionController::ConditionalGet","classes\/ActionController\/ConditionalGet.html#M001782","(seconds, options = {})","Sets a HTTP 1.1 Cache-Control header. Defaults to issuing a <tt>private<\/tt> instruction, so that intermediate",2],["expires_now","ActionController::ConditionalGet","classes\/ActionController\/ConditionalGet.html#M001783","()","Sets a HTTP 1.1 Cache-Control header of <tt>no-cache<\/tt> so no caching should occur by the browser or",2],["explain","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001177","(arel, binds = [])","DATABASE STATEMENTS ====================================== ",2],["explain","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001096","(arel, binds = [])","DATABASE STATEMENTS ====================================== ",2],["explain","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000781","(arel, binds = [])","DATABASE STATEMENTS ====================================== ",2],["ext","ActionDispatch::FileHandler","classes\/ActionDispatch\/FileHandler.html#M002312","()","",2],["extended","ActiveModel::Callbacks","classes\/ActiveModel\/Callbacks.html#M004168","(base)","",2],["extended","ActiveSupport::Concern","classes\/ActiveSupport\/Concern.html#M003485","(base)","",2],["extended","ActiveSupport::Memoizable","classes\/ActiveSupport\/Memoizable.html#M003703","(base)","",2],["extended","ActiveSupport::Testing::Declarative","classes\/ActiveSupport\/Testing\/Declarative.html#M003827","(klass)","",2],["extension","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/AssetIncludeTag.html#M002737","()","",2],["extension","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptIncludeTag.html#M002717","()","",2],["extension","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetIncludeTag.html#M002727","()","",2],["extension","ActiveResource::Formats::JsonFormat","classes\/ActiveResource\/Formats\/JsonFormat.html#M001519","()","",2],["extension","ActiveResource::Formats::XmlFormat","classes\/ActiveResource\/Formats\/XmlFormat.html#M001515","()","",2],["externals","RailsEnvironment","classes\/RailsEnvironment.html#M000418","()","",2],["externals=","RailsEnvironment","classes\/RailsEnvironment.html#M000419","(items)","",2],["extify","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000161","(name)","Add an extension to the given name based on the platform. ",2],["extract!","Hash","classes\/Hash.html#M002993","(*keys)","Removes and returns the key\/value pairs matching the given keys. {:a => 1, :b => 2, :c => 3, :d => 4}.extract!(:a,",2],["extract_annotations_from","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M000476","(file, pattern)","If +file+ is the filename of a file that contains annotations this method returns a hash with a single",2],["extract_domain","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002067","(host, tld_length = @@tld_length)","",2],["extract_options!","Array","classes\/Array.html#M003035","()","Extracts options from a set of arguments. Removes and returns the last element in the array if it's a",2],["extract_schema_and_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Utils","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/Utils.html#M001146","(name)","Returns an array of <tt>[schema_name, table_name]<\/tt> extracted from +name+. +schema_name+ is nil if",2],["extract_session_id","ActionDispatch::Session::StaleSessionCheck","classes\/ActionDispatch\/Session\/StaleSessionCheck.html#M002331","(env)","",2],["extract_subdomain","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002069","(host, tld_length = @@tld_length)","",2],["extract_subdomains","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002068","(host, tld_length = @@tld_length)","",2],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003443","()","Always returns true, so that <tt>Array#extract_options!<\/tt> finds members of this class. ",2],["extractable_options?","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003678","()","Returns true to make sure that this hash is extractable via <tt>Array#extract_options!<\/tt> ",2],["extractable_options?","Hash","classes\/Hash.html#M003034","()","By default, only instances of Hash itself are extractable. Subclasses of Hash may implement this method",2],["fallbacks","Rails::Generators","classes\/Rails\/Generators.html#M000538","()","Hold configured generators fallbacks. If a plugin developer wants a generator group to fallback to another",2],["favicon_link_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002752","(source='\/favicon.ico', options={})","<%= favicon_link_tag %> generates <link href=\"\/favicon.ico\" rel=\"shortcut icon\" type=\"image\/vnd.microsoft.icon\"",2],["fetch","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003844","(name, options = nil)","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["fetch","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003453","(key, *extras)","Fetches the value for the specified key, same as doing hash[key] ",2],["fetch","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M000461","(links = @urls_to_fetch)","",2],["fetch_dir","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M000462","(url)","",2],["field_set_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002558","(legend = nil, options = nil, &block)","Creates a field set for grouping HTML form elements. <tt>legend<\/tt> will become the fieldset's title",2],["field_type","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000127","()","",2],["fields_for","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002647","(record_name, record_object = nil, fields_options = {}, &block)","",2],["fields_for","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002624","(record_name, record_object = nil, options = {}, &block)","Creates a scope around a specific model object like form_for, but doesn't create the form tags themselves.",2],["fifth","Array","classes\/Array.html#M003032","()","Equal to <tt>self[4]<\/tt>. ",2],["file","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000352","(*args, &block)","Define file as an alias to create_file for backwards compatibility. ",2],["file_field","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002652","(method, options = {})","",2],["file_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002629","(object_name, method, options = {})","Returns a file upload input tag tailored for accessing a specified attribute (identified by +method+)",2],["file_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002550","(name, options = {})","Creates a file upload field. If you are using file uploads then you will also need to set the multipart",2],["file_path","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000102","()","",2],["filename","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M003406","()","Returns the filename for the data file for this version ",2],["filter","ActionDispatch::Http::ParameterFilter","classes\/ActionDispatch\/Http\/ParameterFilter.html#M002063","(params)","",2],["filter_by","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000049","(constraint)","",2],["filtered_env","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M002138","()","Return a hash of request.env with all sensitive data replaced. ",2],["filtered_options","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M004017","(value)","",2],["filtered_parameters","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M002137","()","Return a hash of parameters with all sensitive data replaced. ",2],["filtered_path","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M002139","()","Reconstructed a path with all sensitive GET parameters replaced. ",2],["filtered_query_string","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M002143","()","",2],["find","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M002447","(name, prefixes = [], partial = false, keys = [], options = {})","",2],["find","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001556","(*arguments)","Core method for finding resources.  Used similarly to Active Record's +find+ method. ==== Arguments The",2],["find","Plugin","classes\/Plugin.html#M000421","(name)","",2],["find","Rails::Engine","classes\/Rails\/Engine.html#M000492","(path)","Finds engine with given path ",2],["find","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M000138","(klass, params=nil)","GET show GET edit PUT update DELETE destroy ",2],["find","RailsEnvironment","classes\/RailsEnvironment.html#M000410","(dir=nil)","",2],["find","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M000474","(dirs=%w(app config lib script test))","Returns a hash that maps filenames under +dirs+ (recursively) to arrays with their annotations. ",2],["find_all","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M002449","(name, prefixes = [], partial = false, keys = [], options = {})","",2],["find_all","ActionView::Resolver","classes\/ActionView\/Resolver.html#M002463","(name, prefix=nil, partial=false, details={}, key=nil, locals=[])","Normalizes the arguments and passes it on to find_template. ",2],["find_all_tag","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M002416","(conditions)","",2],["find_by_sql","ActiveRecord::Querying","classes\/ActiveRecord\/Querying.html#M001299","(sql, binds = [])","Executes a custom SQL query against your database and returns all the results. The results will be returned",2],["find_cmd","Rails::DBConsole","classes\/Rails\/DBConsole.html#M000466","(*commands)","",2],["find_in","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M000475","(dir)","Returns a hash that maps filenames under +dir+ (recursively) to arrays with their annotations. Only files",2],["find_root_with_flag","Rails::Engine","classes\/Rails\/Engine.html#M000512","(flag, default=nil)","",2],["find_tag","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M002415","(conditions)","",2],["find_template","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M002448","(name, prefixes = [], partial = false, keys = [], options = {})","Alias for #find",2],["find_tzinfo","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003508","(name)","",2],["find_zone","Time","classes\/Time.html#M002857","(time_zone)","",2],["find_zone!","Time","classes\/Time.html#M002856","(time_zone)","Returns a TimeZone instance or nil, or raises an ArgumentError for invalid timezones. ",2],["finder?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M001439","()","",2],["finish_template","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000350","()","",2],["finish_template","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000295","()","",2],["first","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001557","(*args)","A convenience wrapper for <tt>find(:first, *args)<\/tt>. You can pass in all the same arguments to this",2],["first","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M000052","()","",2],["first","String","classes\/String.html#M003097","(limit = 1)","",2],["first","String","classes\/String.html#M003092","(limit = 1)","Returns the first character of the string or the first +limit+ characters. Examples: \"hello\".first  ",2],["fixture_file_upload","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M002423","(path, mime_type = nil, binary = false)","Shortcut for <tt>Rack::Test::UploadedFile.new(ActionController::TestCase.fixture_path + path, type)<\/tt>:",2],["fixture_is_cached?","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000591","(connection, table_name)","",2],["fixtures","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000626","(*fixture_names)","",2],["flash","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002209","()","Access the contents of the flash. Use <tt>flash[\"notice\"]<\/tt> to read a notice you put there or <tt>flash[\"notice\"]",2],["flash","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M002420","()","",2],["flush","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003593","()","",2],["flush","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html#M003722","()","",2],["flush","ActiveSupport::TaggedLogging","classes\/ActiveSupport\/TaggedLogging.html#M003419","()","",2],["flush_all!","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M003671","()","Flush all log_subscribers' logger. ",2],["flush_cache","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M003710","(*syms)","",2],["flushable_loggers","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M003670","()","",2],["follow_redirect!","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002372","()","Follow a single redirect response. If the last response was not a redirect, an exception will be raised.",2],["font_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002759","(source)","Computes the path to a font asset in the public fonts directory. Full paths from the document root will",2],["for_tag","ActiveSupport::TestCase","classes\/ActiveSupport\/TestCase.html#M003725","(tag)","",2],["force_ssl","ActionController::ForceSSL::ClassMethods","classes\/ActionController\/ForceSSL\/ClassMethods.html#M001809","(options = {})","Force the request to this particular controller or specified actions to be under HTTPS protocol. Note",2],["foreign_key","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003329","(class_name, separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["foreign_key","String","classes\/String.html#M003116","(separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["forking_env?","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation.html#M003787","()","",2],["form_authenticity_param","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M001837","()","The form's authenticity parameter. Override to provide your own. ",2],["form_authenticity_token","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M001836","()","Sets the token value for the current session. ",2],["form_data?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002112","()","",2],["form_for","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002620","(record, options = {}, &proc)","Creates a form and a scope around a specific model object that is used as a base for questioning about",2],["form_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002545","(url_for_options = {}, options = {}, &block)","Starts a form tag that points the action to an url configured with <tt>url_for_options<\/tt> just like",2],["format","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002056","(view_path = [])","Returns the MIME type for the \\format used in the request. GET \/posts\/5.xml   | request.format => Mime::XML",2],["format","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001538","()","Returns the current format, default is ActiveResource::Formats::JsonFormat. ",2],["format","ActiveSupport::Testing::Performance::Metrics::Amount","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Amount.html#M003825","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::DigitalInformationUnit","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/DigitalInformationUnit.html#M003826","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Time","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html#M003824","(measurement)","",2],["format","Erb::Generators::MailerGenerator","classes\/Erb\/Generators\/MailerGenerator.html#M000163","()","",2],["format=","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002058","(extension)","Sets the \\format by string extension, which can be used to force custom formats that are not controlled",2],["format=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001537","(mime_type_reference_or_format)","Sets the format that attributes are sent and received in from a mime type reference: Person.format =",2],["format_paragraph","ActionMailer::MailHelper","classes\/ActionMailer\/MailHelper.html#M002827","(text, len = 72, indent = 2)","Returns +text+ wrapped at +len+ columns and indented +indent+ spaces. === Examples my_text = \"Here is",2],["formats","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002057","()","",2],["formatted_offset","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003258","(colon = true, alternate_utc_string = nil)","",2],["formatted_offset","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003495","(colon=true, alternate_utc_string = nil)","Returns the offset of this time zone as a formatted string, of the format \"+HH:MM\". ",2],["formatted_offset","DateTime","classes\/DateTime.html#M003193","(colon = true, alternate_utc_string = nil)","Returns the +utc_offset+ as an +HH:MM formatted string. Examples: datetime = DateTime.civil(2000, 1,",2],["formatted_offset","Time","classes\/Time.html#M002863","(colon = true, alternate_utc_string = nil)","Returns the UTC offset as an +HH:MM formatted string. Time.local(2000).formatted_offset         # =>",2],["forty_two","Array","classes\/Array.html#M003033","()","Equal to <tt>self[41]<\/tt>. Also known as accessing \"the reddit\". ",2],["fourth","Array","classes\/Array.html#M003031","()","Equal to <tt>self[3]<\/tt>. ",2],["fragment_cache_key","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M001932","(key)","Given a key (as described in <tt>expire_fragment<\/tt>), returns a key suitable for use in reading, writing,",2],["fragment_exist?","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M001935","(key, options = nil)","Check if a cached fragment from the location signified by  <tt>key<\/tt> exists (see <tt>expire_fragment<\/tt>",2],["framework_trace","ActionDispatch::ExceptionWrapper","classes\/ActionDispatch\/ExceptionWrapper.html#M002260","()","",2],["framework_version","Rails::Info","classes\/Rails\/Info.html#M000084","(framework)","",2],["frameworks","Rails::Info","classes\/Rails\/Info.html#M000083","()","",2],["freeze","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001420","()","Freeze the attributes hash such that associations are still accessible, even on destroyed records. ",2],["freeze","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003294","()","",2],["freeze_with_memoizable","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M003706","()","",2],["fresh?","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M002180","(response)","Check response freshness (Last-Modified and ETag) against request If-Modified-Since and If-None-Match",2],["fresh_when","ActionController::ConditionalGet","classes\/ActionController\/ConditionalGet.html#M001780","(record_or_options, additional_options = {})","Sets the etag, last_modified, or both on the response and renders a <tt>304 Not Modified<\/tt> response",2],["from","Array","classes\/Array.html#M003027","(position)","Returns the tail of the array from +position+. %w( a b c d ).from(0)  # => %w( a b c d ) %w( a b c d",2],["from","String","classes\/String.html#M003090","(position)","Returns the remaining of the string from the +position+ treating the string as an array (where 0 is the",2],["from","String","classes\/String.html#M003095","(position)","",2],["from_array","ActiveResource::Errors","classes\/ActiveResource\/Errors.html#M001473","(messages, save_cache = false)","Grabs errors from an array of messages (like ActiveRecord::Validations). The second parameter directs",2],["from_json","ActiveModel::Serializers::JSON","classes\/ActiveModel\/Serializers\/JSON.html#M004132","(json, include_root=include_root_in_json)","",2],["from_json","ActiveResource::Errors","classes\/ActiveResource\/Errors.html#M001474","(json, save_cache = false)","Grabs errors from a json response. ",2],["from_now","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M003897","(time = ::Time.current)","Alias for #since",2],["from_rails_root","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M002517","(string)","",2],["from_response","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse.html#M002349","(response)","",2],["from_xml","ActiveModel::Serializers::Xml","classes\/ActiveModel\/Serializers\/Xml.html#M004130","(xml)","",2],["from_xml","ActiveResource::Errors","classes\/ActiveResource\/Errors.html#M001475","(xml, save_cache = false)","Grabs errors from an XML response. ",2],["from_xml","Hash","classes\/Hash.html#M003009","(xml)","",2],["frozen?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001421","()","Returns +true+ if the attributes hash has been frozen. ",2],["full?","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000298","()","",2],["full_message","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M004000","(attribute, message)","Returns a full message for a given attribute. company.errors.full_message(:name, \"is invalid\")  # =>",2],["full_messages","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003999","()","Returns all the full error messages in an array. class Company validates_presence_of :name, :address,",2],["full_profile_options","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M003796","()","",2],["full_test_name","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M003797","()","",2],["full_trace","ActionDispatch::ExceptionWrapper","classes\/ActionDispatch\/ExceptionWrapper.html#M002261","()","",2],["fullpath","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002100","()","",2],["future?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003276","()","",2],["future?","DateTime","classes\/DateTime.html#M003208","()","Tells whether the DateTime object's datetime lies in the future ",2],["future?","Time","classes\/Time.html#M002875","()","Tells whether the Time object's time lies in the future ",2],["g_length","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003385","()","Returns the number of grapheme clusters in the string. Example: '\u0915\u094d\u0937\u093f'.mb_chars.length   # => 4 '\u0915\u094d\u0937\u093f'.mb_chars.g_length",2],["g_pack","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003395","(unpacked)","Reverse operation of g_unpack. Example: Unicode.g_pack(Unicode.g_unpack('\u0915\u094d\u0937\u093f')) # => '\u0915\u094d\u0937\u093f' ",2],["g_unpack","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003394","(string)","Unpack the string at grapheme boundaries. Returns a list of character lists. Example: Unicode.g_unpack('\u0915\u094d\u0937\u093f')",2],["gem","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000145","(*args)","Adds an entry into Gemfile for the supplied gem. If env is specified, add the gem to the given environment.",2],["gem_for_database","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000251","()","",2],["gem_group","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000146","(*names, &block)","Wraps gem entries inside a group. ==== Example gem_group :development, :test do gem \"rspec-rails\" end",2],["gemfile","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000317","()","",2],["gemfile","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000271","()","",2],["gemspec","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000273","()","",2],["generate","ActiveSupport::MessageVerifier","classes\/ActiveSupport\/MessageVerifier.html#M003609","(value)","",2],["generate","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000155","(what, *args)","Generate something using a generator from Rails or a plugin. The second parameter is the argument string",2],["generate_message","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M004001","(attribute, type = :invalid, options = {})","Translates an error message in its default scope (<tt>activemodel.errors.messages<\/tt>). Error messages",2],["generate_method_for_mime","AbstractController::Collector","classes\/AbstractController\/Collector.html#M001660","(mime)","",2],["generate_railtie_name","Rails::Railtie","classes\/Rails\/Railtie.html#M000389","(class_or_module)","",2],["generate_sid","ActionDispatch::Session::Compatibility","classes\/ActionDispatch\/Session\/Compatibility.html#M002328","()","",2],["generate_test_dummy","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000278","(force = false)","",2],["generated_feature_methods","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001406","()","",2],["generator","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000234","(args=self.default_arguments, options={}, config={})","Instantiate the generator. ",2],["generator_dir","Rails::Generators::GeneratorGenerator","classes\/Rails\/Generators\/GeneratorGenerator.html#M000266","()","",2],["generator_name","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000185","()","Removes the namespaces and get the generator name. For example, Rails::Generators::ModelGenerator will",2],["generators","Rails::Railtie","classes\/Rails\/Railtie.html#M000386","(&blk)","",2],["get","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001948","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating GET HTTP method and set\/volley the response ",2],["get","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002365","(path, parameters = nil, headers = nil)","Performs a GET request with the given parameters. - +path+: The URI (as a String) on which you want to",2],["get","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M001977","(*args, &block)","Define a route that only recognizes HTTP GET. For supported arguments, see <tt>Base#match<\/tt>. Example:",2],["get","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003979","(key)","Get messages for +key+ ",2],["get","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001626","(path, headers = {})","Executes a GET request. Used to get (find) resources. ",2],["get","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001503","(custom_method_name, options = {})","Invokes a GET to a given custom REST method. For example: Person.get(:active)  # GET \/people\/active.json",2],["get","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001509","(method_name, options = {})","",2],["get","ActiveSupport::Dependencies::ClassCache","classes\/ActiveSupport\/Dependencies\/ClassCache.html#M003311","(key)","",2],["get?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002093","()","Is this a GET (or HEAD) request? Equivalent to <tt>request.request_method_symbol == :get<\/tt>. ",2],["get_builder_class","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000363","()","",2],["get_builder_class","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000307","()","",2],["get_session","ActionDispatch::Session::CacheStore","classes\/ActionDispatch\/Session\/CacheStore.html#M002335","(env, sid)","Get a session from the cache. ",2],["get_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002374","(path, parameters = nil, headers = nil)","Performs a GET request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["getgm","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003244","()","Alias for #utc",2],["getlocal","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003250","()","Alias for #localtime",2],["getutc","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003245","()","Alias for #utc",2],["getutc","DateTime","classes\/DateTime.html#M003226","()","Alias for #utc",2],["git","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000150","(commands={})","Run a command in git. ==== Examples git :init git :add => \"this.file that.rb\" git :add => \"onefile.rb\",",2],["git_keep","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000260","(destination)","",2],["git_url?","Plugin","classes\/Plugin.html#M000424","()","",2],["gitignore","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000319","()","",2],["gitignore","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000274","()","",2],["global_plugins","Rails::Plugin","classes\/Rails\/Plugin.html#M000085","()","",2],["gmt?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003254","()","Alias for #utc?",2],["gmt_offset","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003256","()","Alias for #utc_offset",2],["gmtime","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003246","()","Alias for #utc",2],["gmtoff","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003257","()","Alias for #utc_offset",2],["group_by","Enumerable","classes\/Enumerable.html#M003179","()","Collect an enumerable into sets, grouped by the result of a block. Useful, for example, for grouping",2],["grouped_collection_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002605","(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","",2],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002591","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","Returns <tt><select><\/tt>, <tt><optgroup><\/tt> and <tt><option><\/tt> tags for the collection of existing",2],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002596","(grouped_options, selected_key = nil, prompt = nil)","Returns a string of <tt><option><\/tt> tags, like <tt>options_for_select<\/tt>, but wraps them with <tt><optgroup><\/tt>",2],["groups","Rails","classes\/Rails.html#M000024","(*groups)","Returns all rails groups for loading based on: * The Rails environment; * The environment variable RAILS_GROUPS;",2],["h","ERB::Util","classes\/ERB\/Util.html#M003064","(s)","Alias for #html_escape",2],["ha1","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001881","(credentials, password)","",2],["halted_callback","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M001906","(event)","",2],["handle_unverified_request","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M001834","()","This is the method that defines the application behavior when a request is found to be unverified. By",2],["handler_for_rescue","ActiveSupport::Rescuable","classes\/ActiveSupport\/Rescuable.html#M003606","(exception)","",2],["handles_encoding?","ActionView::Template::Handlers::ERB","classes\/ActionView\/Template\/Handlers\/ERB.html#M002480","()","",2],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","classes\/ActiveRecord\/Associations\/ClassMethods.html#M000748","(name, options = {}, &extension)","Specifies a many-to-many relationship with another class. This associates two classes via an intermediate",2],["has_errors?","ActionController::Responder","classes\/ActionController\/Responder.html#M001804","()","Check whether the resource has errors. ",2],["has_index?","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000132","()","",2],["has_key?","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003978","(error)","Alias for #include?",2],["has_many","ActiveRecord::Associations::ClassMethods","classes\/ActiveRecord\/Associations\/ClassMethods.html#M000745","(name, options = {}, &extension)","Specifies a one-to-many association. The following methods for retrieval and query of collections of",2],["has_migrations?","Rails::Engine","classes\/Rails\/Engine.html#M000511","()","",2],["has_one","ActiveRecord::Associations::ClassMethods","classes\/ActiveRecord\/Associations\/ClassMethods.html#M000746","(name, options = {})","Specifies a one-to-one association with another class. This method should only be used if the other class",2],["has_secure_password","ActiveModel::SecurePassword::ClassMethods","classes\/ActiveModel\/SecurePassword\/ClassMethods.html#M004071","()","Adds methods to set and authenticate against a BCrypt password. This mechanism requires you to have a",2],["has_uniq_index?","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000133","()","",2],["hash","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001419","()","Delegates to id in order to allow two records of the same type and id to work with something like: [",2],["hash","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001584","()","Delegates to id in order to allow two resources of the same type and \\id to work with something like:",2],["hash","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003278","()","",2],["head","ActionController::Head","classes\/ActionController\/Head.html#M001810","(status, options = {})","Return a response that has no content (merely headers). The options argument is interpreted to be a hash",2],["head","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001957","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating HEAD HTTP method and set\/volley the response ",2],["head","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002369","(path, parameters = nil, headers = nil)","Performs a HEAD request with the given parameters. See +#get+ for more details. ",2],["head","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001630","(path, headers = {})","Executes a HEAD request. Used to obtain meta-information about resources, such as whether they exist",2],["head?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002097","()","Is this a HEAD request? Equivalent to <tt>request.method_symbol == :head<\/tt>. ",2],["headers","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002098","()","Provides access to the request's HTTP headers, for example: request.headers[\"Content-Type\"] # => \"text\/plain\"",2],["headers","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002814","(args=nil)","Allows you to pass random and unusual headers to the new +Mail::Message+ object which will add them to",2],["headers","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001544","()","",2],["headers=","ActionController::Testing","classes\/ActionController\/Testing.html#M001763","(new_headers)","TODO : Rewrite tests using controller.headers= to use Rack env ",2],["help","Rails::Generators","classes\/Rails\/Generators.html#M000545","(command = 'generate')","Show help message with available generators. ",2],["helper","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M001689","(*args, &block)","The +helper+ class method can take a series of helper module names, a block, or both. ==== Parameters",2],["helper","Rails::ConsoleMethods","classes\/Rails\/ConsoleMethods.html#M000078","()","",2],["helper_attr","ActionController::Helpers::ClassMethods","classes\/ActionController\/Helpers\/ClassMethods.html#M001820","(*attrs)","Declares helper accessors for controller attributes. For example, the following adds new +name+ and <tt>name=<\/tt>",2],["helper_class","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M002523","()","",2],["helper_method","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M001688","(*meths)","Declare a controller method as a helper. For example, the following makes the +current_user+ controller",2],["helper_method","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M002522","(*methods)","",2],["helpers","ActionController::Helpers::ClassMethods","classes\/ActionController\/Helpers\/ClassMethods.html#M001821","()","Provides a proxy to access helpers methods from outside the view. ",2],["helpers","Rails::Engine","classes\/Rails\/Engine.html#M000497","()","",2],["helpers_paths","Rails::Engine","classes\/Rails\/Engine.html#M000498","()","",2],["hidden_actions","AbstractController::Base","classes\/AbstractController\/Base.html#M001665","()","The list of hidden actions to an empty array. Defaults to an empty array. This can be modified by other",2],["hidden_field","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002651","(method, options = {})","",2],["hidden_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002628","(object_name, method, options = {})","Returns a hidden input tag tailored for accessing a specified attribute (identified by +method+) on an",2],["hidden_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002549","(name, value = nil, options = {})","Creates a hidden form input field used to transmit data that would be lost due to HTTP's statelessness",2],["hidden_namespaces","Rails::Generators","classes\/Rails\/Generators.html#M000543","()","",2],["hide_action","ActionController::HideActions::ClassMethods","classes\/ActionController\/HideActions\/ClassMethods.html#M001785","(*args)","Sets all of the actions passed in as hidden actions. ==== Parameters * <tt>args<\/tt> - A list of actions",2],["hide_namespaces","Rails::Generators","classes\/Rails\/Generators.html#M000544","(*namespaces)","",2],["highlight","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002684","(text, phrases, *args)","Highlights one or more +phrases+ everywhere in +text+ by inserting it into a <tt>:highlighter<\/tt> string.",2],["hook_for","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000176","(*names, &block)","Invoke a generator based on the value supplied by the user to the given option named \"name\". A class",2],["host","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002077","()","Returns the host for this request, such as example.com. ",2],["host","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M002378","()","The hostname used in the last request. ",2],["host=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002353","(host)","",2],["host_with_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002078","()","Returns a \\host:\\port string for this request, such as \"example.com\" or \"example.com:8080\". ",2],["html?","Mime::Type","classes\/Mime\/Type.html#M002206","()","",2],["html_document","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M002417","()","",2],["html_escape","ERB::Util","classes\/ERB\/Util.html#M003062","(s)","A utility method for escaping HTML tag characters. This method is also aliased as <tt>h<\/tt>. In your",2],["html_safe","String","classes\/String.html#M003084","()","",2],["html_safe?","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003079","()","",2],["html_safe?","Object","classes\/Object.html#M003067","()","",2],["http_basic_authenticate_with","ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods\/ClassMethods.html#M001866","(options = {})","",2],["httpdate","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003266","()","",2],["https!","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M002383","(flag = true)","Specify whether or not the session should mimic a secure HTTPS request. session.https! session.https!(false)",2],["https?","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M002384","()","Return +true+ if the session is mimicking a secure HTTPS request. if session.https? ... end ",2],["human","ActiveModel::Name","classes\/ActiveModel\/Name.html#M004134","(options={})","Transform the model name into a more humane format, using I18n. By default, it will underscore then humanize",2],["human","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003343","(rule, replacement)","Specifies a humanized form of a string by a regular expression rule or by a string mapping. When using",2],["human_attribute_name","ActiveModel::Translation","classes\/ActiveModel\/Translation.html#M004089","(attribute, options = {})","Transforms attribute names into a more human format, such as \"First name\" instead of \"first_name\". Person.human_attribute_name(\"first_name\")",2],["human_name","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000129","()","",2],["human_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000108","()","",2],["humanize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003322","(lower_case_and_underscored_word)","Capitalizes the first word and turns underscores into spaces and strips a trailing \"_id\", if any. Like",2],["humanize","String","classes\/String.html#M003115","()","Capitalizes the first word, turns underscores into spaces, and strips '_id'. Like +titleize+, this is",2],["i18n_scope","ActiveModel::Translation","classes\/ActiveModel\/Translation.html#M004087","()","Returns the +i18n_scope+ for the class. Overwrite if you want custom lookup. ",2],["i18n_scope","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000110","()","",2],["id","ActiveRecord::AttributeMethods::PrimaryKey","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey.html#M001328","()","Returns the primary key value ",2],["id","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001580","()","Gets the <tt>\\id<\/tt> attribute of the resource. ",2],["id","NilClass","classes\/NilClass.html#M003484","()","Raises a RuntimeError when you attempt to call +id+ on +nil+. ",2],["id=","ActiveRecord::AttributeMethods::PrimaryKey","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey.html#M001329","(value)","Sets the primary key value ",2],["id=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001581","(id)","Sets the <tt>\\id<\/tt> attribute of the resource. ",2],["id?","ActiveRecord::AttributeMethods::PrimaryKey","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey.html#M001330","()","Queries the primary key value ",2],["id_from_response","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001603","(response)","Takes a response from a typical create post and pulls the ID out ",2],["identify","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000598","(label)","Returns a consistent, platform-independent identifier for +label+. Identifiers are positive integers",2],["if_modified_since","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M002176","()","",2],["if_modified_since=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002358","(last_modified)","",2],["if_none_match","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M002177","()","",2],["if_none_match=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002359","(etag)","",2],["image_alt","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002762","(src)","",2],["image_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002753","(source)","Computes the path to an image asset in the public images directory. Full paths from the document root",2],["image_submit_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002557","(source, options = {})","Displays an image which when clicked will submit the form. <tt>source<\/tt> is passed to AssetTagHelper#path_to_image",2],["image_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002761","(source, options = {})","Returns an html image tag for the +source+. The +source+ can be a full path or a file that exists in",2],["in","DateTime","classes\/DateTime.html#M003214","(seconds)","Alias for #since",2],["in","Time","classes\/Time.html#M002881","(seconds)","Alias for #since",2],["in?","Object","classes\/Object.html#M003178","(*args)","Returns true if this object is included in the argument(s). Argument must be any object which responds",2],["in_char_class?","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003393","(codepoint, classes)","Detect whether the codepoint is in a certain character class. Returns +true+ when it's in the specified",2],["in_clause_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000915","()","Returns the maximum number of elements in an IN (x,y,z) clause. nil means no limit. ",2],["in_groups","Array","classes\/Array.html#M003020","(number, fill_with = nil)","Splits or iterates over the array in +number+ of groups, padding any remaining slots with +fill_with+",2],["in_groups_of","Array","classes\/Array.html#M003019","(number, fill_with = nil)","Splits or iterates over the array in groups of size +number+, padding any remaining slots with +fill_with+",2],["in_rails_application?","Rails::ScriptRailsLoader","classes\/Rails\/ScriptRailsLoader.html#M000039","()","",2],["in_rails_application_subdirectory?","Rails::ScriptRailsLoader","classes\/Rails\/ScriptRailsLoader.html#M000040","(path = Pathname.new(Dir.pwd))","",2],["in_time_zone","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003248","(new_zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone<\/tt>, or the specified zone. ",2],["in_time_zone","DateTime","classes\/DateTime.html#M003187","(zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone<\/tt>. Time.zone = 'Hawaii'             # => 'Hawaii' DateTime.new(2000).in_time_zone",2],["in_time_zone","Time","classes\/Time.html#M002858","(zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone<\/tt>. Time.zone = 'Hawaii'         # => 'Hawaii' Time.utc(2000).in_time_zone",2],["include?","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003977","(error)","Do the error messages include an error with key +error+? ",2],["include?","ActiveModel::MassAssignmentSecurity::PermissionSet","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html#M004091","(key)","",2],["include?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003359","(other)","Returns +true+ if contained string contains _other_. Returns +false+ otherwise. Example: 'Caf\u00e9'.mb_chars.include?('\u00e9')",2],["include?","Test::Unit::Collector::ObjectSpace","classes\/Test\/Unit\/Collector\/ObjectSpace.html#M003794","(test)","",2],["include_all_railties?","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000248","()","",2],["include_fallbacks_module","I18n::Railtie","classes\/I18n\/Railtie.html#M003656","()","",2],["include_tag","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/AssetIncludeTag.html#M002740","(*sources)","",2],["included","ActionController::TestCase::RaiseActionExceptions","classes\/ActionController\/TestCase\/RaiseActionExceptions.html#M001965","(base)","",2],["included","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000877","(base)","",2],["included","ActiveSupport::Concern","classes\/ActiveSupport\/Concern.html#M003487","(base = nil, &block)","",2],["included","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M003705","(base)","",2],["included","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation.html#M003788","(base)","",2],["included","Rails::Initializable","classes\/Rails\/Initializable.html#M000060","(base)","",2],["increment","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000669","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and adds the value passed as +by+ (default is 1). The increment",2],["increment","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003548","(name, amount = 1, options = nil)","",2],["increment","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M003577","(name, amount = 1, options = nil)","Increment an integer value in the cache. ",2],["increment","ActiveSupport::Cache::NullStore","classes\/ActiveSupport\/Cache\/NullStore.html#M003539","(name, amount = 1, options = nil)","",2],["increment","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003851","(name, amount = 1, options = nil)","Increment an integer value in the cache. Options are passed to the underlying cache implementation. All",2],["increment!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000670","(attribute, by = 1)","Wrapper around +increment+ that saves the record. This method differs from its non-bang version in that",2],["increment_counter","ActiveRecord::CounterCache","classes\/ActiveRecord\/CounterCache.html#M001397","(counter_name, id)","Increment a number field by one, usually representing a count. This is used for caching aggregate values,",2],["increment_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000733","()","",2],["indent","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000096","(content, multiplier = 2)","",2],["index","ActionController::Middleware","classes\/ActionController\/Middleware.html#M001917","()","",2],["index","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000947","(column_name, options = {})","Adds a new index to the table. +column_name+ can be a single Symbol, or an Array of Symbols. See SchemaStatements#add_index",2],["index","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003360","(needle, offset=0)","Returns the position _needle_ in the string, counting in codepoints. Returns +nil+ if _needle_ isn't",2],["index_by","Enumerable","classes\/Enumerable.html#M003182","()","Convert an enumerable to a hash. Examples: people.index_by(&:login) => { \"nextangle\" => <Person ...>,",2],["index_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000901","(table_name, column_name, options = {})","Checks to see if an index exists on a table for a given index definition. === Examples # Check an index",2],["index_exists?","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000948","(column_name, options = {})","Checks to see if an index exists. See SchemaStatements#index_exists? ",2],["index_helper","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000113","()","",2],["index_name","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000130","()","",2],["index_name_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000929","(table_name, index_name, default)","Verify the existence of an index with a given name. The default argument is returned if the underlying",2],["index_name_for_remove","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000971","(table_name, options = {})","",2],["index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000911","()","Returns the maximum length of an index name. ",2],["index_name_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001143","()","",2],["indexes","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001121","(table_name, name = nil)","Returns an array of indexes for the given table. ",2],["indexes_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000913","()","Returns the maximum number of indexes per table. ",2],["inflections","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003345","()","Yields a singleton instance of Inflector::Inflections so you can specify additional inflector rules.",2],["info","Plugin","classes\/Plugin.html#M000428","()","",2],["inheritable_copy","ActiveSupport::InheritableOptions","classes\/ActiveSupport\/InheritableOptions.html#M003603","()","",2],["inheritance_column","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001436","()","The name of the column containing the object's class when Single Table Inheritance is used ",2],["inheritance_column=","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001446","(value)","Sets the value of inheritance_column ",2],["inherited","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M001687","(klass)","When a class is inherited, wrap its helper module in a new module. This ensures that the parent class's",2],["inherited","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods.html#M001705","(klass)","",2],["inherited","ActionController::HideActions::ClassMethods","classes\/ActionController\/HideActions\/ClassMethods.html#M001786","(klass)","",2],["inherited","ActionController::ParamsWrapper::ClassMethods","classes\/ActionController\/ParamsWrapper\/ClassMethods.html#M001846","(klass)","Sets the default wrapper key or model which will be used to determine wrapper key and attribute names.",2],["inherited","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/AssetIncludeTag.html#M002734","(base)","",2],["inherited","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M003944","(subclass)","Notify observers when the observed class is subclassed. ",2],["inherited","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M003964","(base)","Copy validators on inheritance. ",2],["inherited","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M003412","(base)","",2],["inherited","Rails::Application","classes\/Rails\/Application.html#M000000","(base)","",2],["inherited","Rails::Engine","classes\/Rails\/Engine.html#M000489","(base)","",2],["inherited","Rails::Plugin","classes\/Rails\/Plugin.html#M000086","(base)","",2],["inherited","Rails::Railtie","classes\/Rails\/Railtie.html#M000383","(base)","",2],["inherited","Rails::Railtie::Configurable::ClassMethods","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html#M000564","(base)","",2],["init_fallbacks","I18n::Railtie","classes\/I18n\/Railtie.html#M003657","(fallbacks)","",2],["init_with","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001413","(coder)","Initialize an empty model object from +coder+. +coder+ must contain the attributes necessary for initializing",2],["initialize!","Rails","classes\/Rails.html#M000014","()","",2],["initialize_copy","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002211","(other)","",2],["initialize_copy","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002277","(other)","",2],["initialize_copy","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003681","(other)","",2],["initialize_copy","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003073","(other)","",2],["initialize_dup","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003974","(other)","",2],["initialize_dup","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001414","(other)","Duped objects have no id assigned and are treated as new records. Note that this is a \"shallow\" copy",2],["initialize_generators","Rails::Engine","classes\/Rails\/Engine.html#M000509","()","",2],["initialize_i18n","I18n::Railtie","classes\/I18n\/Railtie.html#M003655","(app)","Setup i18n configuration ",2],["initialize_schema_migrations_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000932","()","Should not be called normally, but this operation is non-destructive. The migrations module handles this",2],["initialize_sid","ActionDispatch::Session::Compatibility","classes\/ActionDispatch\/Session\/Compatibility.html#M002329","()","",2],["initialize_template_class","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M001767","(*)","For old tests ",2],["initialized=","Rails","classes\/Rails.html#M000016","(initialized)","",2],["initialized?","Rails","classes\/Rails.html#M000015","()","",2],["initializer","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000154","(filename, data=nil, &block)","Create a new initializer with the provided code (either in a block or a string). ==== Examples initializer(\"globals.rb\")",2],["initializer","Rails::Initializable::ClassMethods","classes\/Rails\/Initializable\/ClassMethods.html#M000074","(name, opts = {}, &blk)","",2],["initializers","Rails::Engine","classes\/Rails\/Engine.html#M000506","()","",2],["initializers","Rails::Initializable","classes\/Rails\/Initializable.html#M000070","()","",2],["initializers","Rails::Initializable::ClassMethods","classes\/Rails\/Initializable\/ClassMethods.html#M000071","()","",2],["initializers_chain","Rails::Initializable::ClassMethods","classes\/Rails\/Initializable\/ClassMethods.html#M000072","()","",2],["initializers_for","Rails::Initializable::ClassMethods","classes\/Rails\/Initializable\/ClassMethods.html#M000073","(binding)","",2],["inject_index_options","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000135","()","",2],["inject_options","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000134","()","",2],["inquiry","String","classes\/String.html#M003060","()","Wraps the current string in the <tt>ActiveSupport::StringInquirer<\/tt> class, which gives you a prettier",2],["insensitive_attributes","ActiveModel::MassAssignmentSecurity::StrictSanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/StrictSanitizer.html#M004104","()","",2],["insert","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002278","(index, *args, &block)","",2],["insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001020","(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])","Returns the last auto-generated ID from the affected table. +id_value+ will be returned unless the value",2],["insert","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003358","(offset, fragment)","Inserts the passed string at specified codepoint offsets. Example: 'Caf\u00e9'.mb_chars.insert(4, ' p\u00e9rifer\u00f4l').to_s",2],["insert_after","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002280","(index, *args, &block)","",2],["insert_before","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002279","(index, *args, &block)","Alias for #insert",2],["insert_fixture","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001032","(fixture, table_name)","Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple",2],["insert_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001039","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Returns the last auto-generated ID from the affected table. ",2],["insert_sql","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001183","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","",2],["insert_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001098","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Executes an INSERT query and returns the new record's ID ",2],["inside_template","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000098","()","",2],["inside_template?","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000099","()","",2],["inspect","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M002269","()","",2],["inspect","ActionView::Template","classes\/ActionView\/Template.html#M002435","()","",2],["inspect","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001407","()","Returns a string like 'Post(id:integer, title:string, body:text)' ",2],["inspect","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001425","()","Returns the contents of the record as a nicely formatted string. ",2],["inspect","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003701","()","",2],["inspect","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003260","()","",2],["inspect","DateTime","classes\/DateTime.html#M003195","()","Alias for #readable_inspect",2],["install","Plugin","classes\/Plugin.html#M000426","(method=nil, options = {})","",2],["install","RailsEnvironment","classes\/RailsEnvironment.html#M000413","(name_uri_or_plugin)","",2],["installed?","Plugin","classes\/Plugin.html#M000425","()","",2],["instance","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003336","()","",2],["instance","Rails::Railtie::Configurable::ClassMethods","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html#M000565","()","",2],["instance_method_already_implemented?","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M004114","(method_name)","",2],["instance_method_names","Module","classes\/Module.html#M002952","(*args)","",2],["instance_variable_names","Object","classes\/Object.html#M003176","()","",2],["instantiate","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001267","(record)","Finder methods must instantiate through this method to work with the single-table inheritance model that",2],["instantiate_all_loaded_fixtures","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000596","(object, load_instances = true)","",2],["instantiate_fixtures","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000595","(object, fixture_set, load_instances = true, rails_3_2_compatibility_argument = true)","The use with parameters  <tt>(object, fixture_set_name, fixture_set, load_instances = true)<\/tt>  is",2],["instantiate_observers","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M003939","()","Instantiate the global observers. ",2],["instantiator?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M001440","()","",2],["instrument","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003843","()","",2],["instrument","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M003831","(name, payload = {})","",2],["instrument","ActiveSupport::Notifications::Instrumenter","classes\/ActiveSupport\/Notifications\/Instrumenter.html#M003431","(name, payload={})","Instrument the given block by measuring the time taken to execute it and publish it. Notice that events",2],["instrument=","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003842","(boolean)","Set to true if cache stores should be instrumented. Default is false. ",2],["instrument_fragment_cache","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M001937","(name, key)","",2],["instrumenter","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M003835","()","",2],["internal_methods","AbstractController::Base","classes\/AbstractController\/Base.html#M001664","()","A list of all internal methods for a controller. This finds the first abstract superclass of a controller,",2],["invalid?","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M003969","(context = nil)","Performs the opposite of <tt>valid?<\/tt>. Returns true if errors were added, false otherwise. ",2],["inverse","ActiveRecord::Migration::CommandRecorder","classes\/ActiveRecord\/Migration\/CommandRecorder.html#M000607","()","Returns a list that represents commands that are the inverse of the commands stored in +commands+. For",2],["invert","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003700","()","",2],["invoke","Rails::Generators","classes\/Rails\/Generators.html#M000542","(namespace, args=ARGV, config={})","Receives a namespace, arguments and the behavior to invoke the generator. It's used as the default entry",2],["ip","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002106","()","",2],["ips_from","ActionDispatch::RemoteIp::GetIp","classes\/ActionDispatch\/RemoteIp\/GetIp.html#M002291","(header, allow_proxies = false)","",2],["irregular","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003341","(singular, plural)","Specifies a new irregular that applies to both pluralization and singularization at the same time. This",2],["is_a?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003292","(klass)","Say we're a Time to thwart type checking. ",2],["is_missing?","LoadError","classes\/LoadError.html#M003186","(location)","",2],["is_utf8?","String","classes\/String.html#M003059","()","Returns true if the string has UTF-8 semantics (a String used for purely byte resources is unlikely to",2],["is_utf8?","String","classes\/String.html#M003057","()","",2],["isdst","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003252","()","Alias for #dst?",2],["iso8601","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003262","(fraction_digits = 0)","Alias for #xmlschema",2],["isolate_namespace","Rails::Engine","classes\/Rails\/Engine.html#M000491","(mod)","",2],["j","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M002614","(javascript)","Alias for #escape_javascript",2],["j","ERB::Util","classes\/ERB\/Util.html#M003066","(s)","Alias for #json_escape",2],["javascript_gemfile_entry","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000255","()","",2],["javascript_include_tag","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptTagHelpers.html#M002725","(*sources)","Returns an HTML script tag for each of the +sources+ provided. Sources may be paths to JavaScript files.",2],["javascript_path","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptTagHelpers.html#M002723","(source)","Computes the path to a javascript asset in the public javascripts directory. If the +source+ filename",2],["javascript_runtime_gemfile_entry","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000256","()","",2],["javascript_tag","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M002615","(content_or_options_with_block = nil, html_options = {}, &block)","Returns a JavaScript tag with the +content+ inside. Example: javascript_tag \"alert('All is good')\" Returns:",2],["javascripts","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000282","()","",2],["joins_per_query","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000917","()","Returns maximum number of joins in a single query. ",2],["json_escape","ERB::Util","classes\/ERB\/Util.html#M003065","(s)","A utility method for escaping HTML entities in JSON strings using \\uXXXX JavaScript escape sequences",2],["json_resource_errors","ActionController::Responder","classes\/ActionController\/Responder.html#M001807","()","",2],["keep","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002224","(k = nil)","Keeps either the entire current flash or a specific flash entry available for the next action: flash.keep",2],["key?","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002216","(name)","",2],["key?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002088","(key)","",2],["key?","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html#M000843","(key)","",2],["key?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001060","(key)","",2],["key?","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/StatementPool.html#M000753","(key)","",2],["key?","ActiveRecord::ConnectionAdapters::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html#M000825","(key)","",2],["key?","ActiveSupport::Dependencies::ClassCache","classes\/ActiveSupport\/Dependencies\/ClassCache.html#M003310","(key)","",2],["key?","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003452","(key)","Checks the hash for a key matching the argument passed in: hash = HashWithIndifferentAccess.new hash[\"key\"]",2],["key_matcher","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003855","(pattern, options)","Add the namespace defined in the options to a pattern designed to match keys. Implementations that support",2],["key_value","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000261","(key, value)","Returns Ruby 1.9 style key-value pair if current code is running on Ruby 1.9.x. Returns the old-style",2],["key_value","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000123","(key, value)","Returns Ruby 1.9 style key-value pair if current code is running on Ruby 1.9.x. Returns the old-style",2],["keys","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002215","()","",2],["keys","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003987","()","Returns all message keys ",2],["keys","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003687","()","",2],["kind","ActiveModel::Validator","classes\/ActiveModel\/Validator.html#M004145","()","Returns the kind of the validator. Examples: PresenceValidator.kind   # => :presence UniquenessValidator.kind",2],["kind","ActiveModel::Validator","classes\/ActiveModel\/Validator.html#M004147","()","Return the kind for this validator. ",2],["kind_of?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003293","(klass)","Alias for #is_a?",2],["klass","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M002267","()","",2],["known_attributes","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001574","()","This is a list of known attributes for this resource. Either gathered from the provided <tt>schema<\/tt>,",2],["known_attributes","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001526","()","Returns the list of known attributes for this resource, gathered from the provided <tt>schema<\/tt> Attributes",2],["l","AbstractController::Translation","classes\/AbstractController\/Translation.html#M001686","(*args)","Alias for #localize",2],["l","ActionView::Helpers::TranslationHelper","classes\/ActionView\/Helpers\/TranslationHelper.html#M002771","(*args)","Alias for #localize",2],["label","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002648","(method, text = nil, options = {}, &block)","",2],["label","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002625","(object_name, method, content_or_options = nil, options = nil, &block)","Returns a label tag tailored for labelling an input field for a specified attribute (identified by +method+)",2],["label_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002548","(name = nil, content_or_options = nil, options = nil, &block)","Creates a label element. Accepts a block. ==== Options * Creates standard HTML attributes for the tag.",2],["last","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002275","()","",2],["last","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001558","(*args)","A convenience wrapper for <tt>find(:last, *args)<\/tt>. You can pass in all the same arguments to this",2],["last","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M000053","()","",2],["last","String","classes\/String.html#M003093","(limit = 1)","Returns the last character of the string or the last +limit+ characters. Examples: \"hello\".last     #",2],["last","String","classes\/String.html#M003098","(limit = 1)","",2],["last_inserted_id","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001045","(result)","",2],["last_inserted_id","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001188","(result)","",2],["last_inserted_id","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000865","(result)","",2],["last_inserted_id","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000786","(result)","",2],["last_modified","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M002181","()","",2],["last_modified=","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M002183","(utc_time)","",2],["last_modified?","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M002182","()","",2],["layout","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods.html#M001707","(layout, conditions = {})","Specify the layout to use for this class. If the specified layout is a: String:: the String is the template",2],["lease","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000710","()","",2],["length","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html#M000845","()","",2],["length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001062","()","",2],["length","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/StatementPool.html#M000755","()","",2],["length","ActiveRecord::ConnectionAdapters::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html#M000827","()","",2],["level","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003589","()","",2],["level=","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003590","(l)","",2],["lib","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000325","()","",2],["lib","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000152","(filename, data=nil, &block)","Create a new file in the lib\/ directory. Code can be specified in a block or a data string can be given.",2],["lib","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000275","()","",2],["license","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000272","()","",2],["limit","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003376","(limit)","Limit the byte size of the string to a number of bytes without breaking characters. Usable when the storage",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001246","(where_sql, quoted_table_name, quoted_primary_key)","",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001035","(where_sql, quoted_table_name, quoted_primary_key)","",2],["link_to","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002576","(*args, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+. See the valid options",2],["link_to_function","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M002618","(name, function, html_options={})","Returns a link whose +onclick+ handler triggers the passed JavaScript. The helper receives a name, JavaScript",2],["link_to_if","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002580","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ if +condition+ is",2],["link_to_unless","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002579","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless +condition+",2],["link_to_unless_current","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002578","(name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless the current",2],["links","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M000459","(base_url, contents)","",2],["listeners_for","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M003427","(name)","",2],["listening?","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M003428","(name)","",2],["ljust","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003368","(integer, padstr=' ')","Works just like <tt>String#ljust<\/tt>, only integer specifies characters instead of bytes. Example: \"\u00be",2],["load","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001592","(attributes, remove_root = false)","A method to manually load attributes from a \\hash. Recursively loads collections of resources.  This",2],["load","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M003403","()","Loads the Unicode database and returns all the internal objects of UnicodeDatabase. ",2],["load_attributes_from_response","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001602","(response)","",2],["load_console","Rails::Application","classes\/Rails\/Application.html#M000009","(app=self)","Load the application console and invoke the registered hooks. Check <tt>Rails::Railtie.console<\/tt> for",2],["load_console","Rails::Engine","classes\/Rails\/Engine.html#M000494","(app=self)","",2],["load_console","Rails::Railtie","classes\/Rails\/Railtie.html#M000392","(app=self)","",2],["load_generators","Rails::Engine","classes\/Rails\/Engine.html#M000487","(app=self)","",2],["load_generators","Rails::Railtie","classes\/Rails\/Railtie.html#M000394","(app=self)","",2],["load_paths","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000048","()","",2],["load_seed","Rails::Engine","classes\/Rails\/Engine.html#M000508","()","Load data from db\/seeds.rb file. It can be used in to load engines' seeds, e.g.: Blog::Engine.load_seed",2],["load_session","ActionDispatch::Session::StaleSessionCheck","classes\/ActionDispatch\/Session\/StaleSessionCheck.html#M002330","(env)","",2],["load_tasks","Rails::Application","classes\/Rails\/Application.html#M000008","(app=self)","Load the application and its railties tasks and invoke the registered hooks. Check <tt>Rails::Railtie.rake_tasks<\/tt>",2],["load_tasks","Rails::Engine","classes\/Rails\/Engine.html#M000493","(app=self)","",2],["load_tasks","Rails::Railtie","classes\/Rails\/Railtie.html#M000393","(app=self)","",2],["local","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003499","(*args)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from given values.",2],["local?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002122","()","True if the request came from localhost, 127.0.0.1. ",2],["local_constant_names","Module","classes\/Module.html#M002971","()","Returns the names of the constants defined locally rather than the constants themselves. See <tt>local_constants<\/tt>.",2],["local_constants","Module","classes\/Module.html#M002969","()","Returns the constants that have been defined locally by this object and not in an ancestor. This method",2],["local_offset","DateTime","classes\/DateTime.html#M003205","()","DateTimes aren't aware of DST rules, so use a consistent non-DST offset when creating a DateTime with",2],["local_time","Time","classes\/Time.html#M002871","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:local<\/tt>. ",2],["local_to_utc","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003505","(time, dst=true)","Adjust the given time to the simultaneous time in UTC. Returns a Time.utc() instance. ",2],["localize","AbstractController::Translation","classes\/AbstractController\/Translation.html#M001685","(*args)","",2],["localize","ActionView::Helpers::TranslationHelper","classes\/ActionView\/Helpers\/TranslationHelper.html#M002770","(*args)","Delegates to <tt>I18n.localize<\/tt> with no additional functionality. ",2],["locals","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior.html#M002529","()","",2],["localtime","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003249","()","Returns a <tt>Time.local()<\/tt> instance of the simultaneous time in your system's <tt>ENV['TZ']<\/tt>",2],["location","ActionController::Metal","classes\/ActionController\/Metal.html#M001743","()","",2],["location","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002167","()","",2],["location=","ActionController::Metal","classes\/ActionController\/Metal.html#M001744","(url)","",2],["location=","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002169","(url)","",2],["log","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000743","(sql, name = \"SQL\", binds = [])","",2],["log","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000326","()","",2],["log","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000160","(*args)","Define log for backwards compatibility. If just one argument is sent, invoke say, otherwise invoke say_status.",2],["log_level","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000523","()","",2],["log_path","Rails::Server","classes\/Rails\/Server.html#M000406","()","",2],["log_subscribers","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M003669","()","",2],["logged","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html#M003721","(level)","",2],["logger","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M001910","()","",2],["logger","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M002516","()","TODO: Ideally, ActionView should have its own logger so it does not depend on AC.logger ",2],["logger","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001399","","Accepts a logger conforming to the interface of Log4r or the default Ruby 1.8+ Logger class, which is",2],["logger","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001523","","The logger for diagnosing and tracing Active Resource calls. ",2],["logger","ActiveResource::LogSubscriber","classes\/ActiveResource\/LogSubscriber.html#M001616","()","",2],["logger","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M003667","()","",2],["logger","Rails","classes\/Rails.html#M000017","()","",2],["logger=","Rails","classes\/Rails.html#M000018","(logger)","",2],["logger?","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/LoggerSanitizer.html#M004101","()","",2],["lookup","Mime::Type","classes\/Mime\/Type.html#M002190","(string)","",2],["lookup_ancestors","ActiveModel::Translation","classes\/ActiveModel\/Translation.html#M004088","()","When localizing a string, it goes through the lookup returned by this method, which is used in ActiveModel::Name#human,",2],["lookup_by_extension","Mime::Type","classes\/Mime\/Type.html#M002191","(extension)","",2],["lookup_context","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M001697","()","LookupContext is the object responsible to hold all information required to lookup templates, i.e. view",2],["lookup_store","ActiveSupport::Cache","classes\/ActiveSupport\/Cache.html#M003836","(*store_option)","Creates a new CacheStore object according to the given options. If no arguments are passed to this method,",2],["ls","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M000456","()","",2],["lstrip","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003364","()","Strips entire range of Unicode whitespace from the left of the string. ",2],["mail","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002816","(headers={}, &block)","The main method that creates the message and renders the email templates. There are two ways to call",2],["mail_to","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002581","(email_address, name = nil, html_options = {})","Creates a mailto link tag to the specified +email_address+, which is also used as the name of the link",2],["mailer","ActionMailer::MailHelper","classes\/ActionMailer\/MailHelper.html#M002824","()","Access the mailer instance. ",2],["mailer_name","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002812","()","",2],["mailer_name","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002803","()","",2],["many?","Enumerable","classes\/Enumerable.html#M003183","()","Returns true if the enumerable has more than 1 element. Functionally equivalent to enum.to_a.size > 1.",2],["marshal_dump","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003295","()","",2],["marshal_load","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003296","(variables)","",2],["mass_assignment_authorizer","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity.html#M004070","(role)","",2],["mass_assignment_options","ActiveRecord::AttributeAssignment","classes\/ActiveRecord\/AttributeAssignment.html#M000691","()","",2],["mass_assignment_role","ActiveRecord::AttributeAssignment","classes\/ActiveRecord\/AttributeAssignment.html#M000692","()","",2],["mass_assignment_sanitizer=","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M004066","(value)","",2],["match","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M001970","(path, options=nil)","Matches a url pattern to one or more routes. Any symbols in a pattern are interpreted as url query parameters",2],["match","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002011","(path, *rest)","",2],["match","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html#M004119","(method_name)","",2],["match","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M001437","(method)","",2],["match?","ActionDispatch::FileHandler","classes\/ActionDispatch\/FileHandler.html#M002310","(path)","",2],["mattr_accessor","Module","classes\/Module.html#M002956","(*syms)","Extends the module object with module and instance accessors for class attributes, just like the native",2],["mattr_reader","Module","classes\/Module.html#M002954","(*syms)","",2],["mattr_writer","Module","classes\/Module.html#M002955","(*syms)","",2],["mb_chars","String","classes\/String.html#M003058","()","",2],["mb_chars","String","classes\/String.html#M003056","()","== Multibyte proxy +mb_chars+ is a multibyte safe proxy for string methods. In Ruby 1.8 and older it",2],["measure","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html#M003761","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html#M003752","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M003739","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M003764","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M003734","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M003776","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M003777","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M003735","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M003740","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M003765","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003763","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003737","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003774","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003732","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M003733","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M003775","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M003738","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::ProcessTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/ProcessTime.html#M003749","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Time","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html#M003823","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::UserTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/UserTime.html#M003762","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/WallTime.html#M003750","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/WallTime.html#M003773","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/WallTime.html#M003760","()","",2],["measure_mode","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003746","()","",2],["media_type","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002102","()","",2],["member","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002005","()","To add a member route, add a member block into the resource block: resources :photos do member do get",2],["memoize","ActiveSupport::Memoizable","classes\/ActiveSupport\/Memoizable.html#M003711","(*symbols)","",2],["memoize_all","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M003707","()","",2],["memoized_ivar_for","ActiveSupport::Memoizable","classes\/ActiveSupport\/Memoizable.html#M003704","(symbol)","",2],["merge","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003456","(hash)","Merges the instantized and the specified hashes together, giving precedence to the values from the second",2],["merge","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003698","(other_hash, &block)","",2],["merge!","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003697","(other_hash)","",2],["message","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002158","()","",2],["message","ActionMailer::MailHelper","classes\/ActionMailer\/MailHelper.html#M002825","()","Access the message instance. ",2],["message","ActiveRecord::StaleObjectError","classes\/ActiveRecord\/StaleObjectError.html#M001302","()","",2],["message","ActiveRecord::UnknownPrimaryKey","classes\/ActiveRecord\/UnknownPrimaryKey.html#M001306","()","",2],["method","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002091","()","Returns the original value of the environment's REQUEST_METHOD, even if it was overridden by middleware.",2],["method_added","AbstractController::Base","classes\/AbstractController\/Base.html#M001669","(name)","",2],["method_for_action","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M001772","(action_name)","",2],["method_for_action","ActionController::ImplicitRender","classes\/ActionController\/ImplicitRender.html#M001862","(action_name)","",2],["method_missing","AbstractController::Collector","classes\/AbstractController\/Collector.html#M001661","(symbol, &block)","",2],["method_missing","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M002406","(selector, *args, &block)","ROUTES TODO: These assertions should really work in an integration context ",2],["method_missing","ActionDispatch::BodyProxy","classes\/ActionDispatch\/BodyProxy.html#M002307","(*args, &block)","",2],["method_missing","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M002394","(sym, *args, &block)","Delegate unhandled messages to the current session instance. ",2],["method_missing","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M004122","(method, *args, &block)","Allows access to the object attributes, which are held in the <tt>@attributes<\/tt> hash, as though they",2],["method_missing","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001380","(method, *arguments, &block)","",2],["method_missing","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html#M003720","(level, message)","",2],["method_missing","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003350","(method, *args, &block)","Forward all undefined methods to the wrapped string. ",2],["method_missing","ActiveSupport::OrderedOptions","classes\/ActiveSupport\/OrderedOptions.html#M003600","(name, *args)","",2],["method_missing","ActiveSupport::StringInquirer","classes\/ActiveSupport\/StringInquirer.html#M003473","(method_name, *arguments)","",2],["method_missing","ActiveSupport::TaggedLogging","classes\/ActiveSupport\/TaggedLogging.html#M003420","(method, *args)","",2],["method_missing","ActiveSupport::Testing::ProxyTestResult","classes\/ActiveSupport\/Testing\/ProxyTestResult.html#M003786","(name, *args)","",2],["method_missing","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003298","(sym, *args, &block)","Send the missing method to +time+ instance, and wrap result in a new TimeWithZone with the existing +time_zone+.",2],["method_missing","Rails::Railtie::Configurable::ClassMethods","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html#M000568","(*args, &block)","",2],["method_name","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html#M004120","(attr_name)","",2],["method_names","Module","classes\/Module.html#M002953","(*args)","",2],["method_symbol","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002092","()","Returns a symbol form of the #method ",2],["middleware","ActionController::Metal","classes\/ActionController\/Metal.html#M001754","()","Alias for middleware_stack ",2],["middleware","ActiveSupport::Cache::Strategy::LocalCache","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M003525","()","Middleware class can be inserted as a Rack handler to be local cache for the duration of request. ",2],["middleware","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M000372","()","Returns the middleware stack for the engine. ",2],["middleware","Rails::Server","classes\/Rails\/Server.html#M000405","()","",2],["midnight","DateTime","classes\/DateTime.html#M003216","()","Alias for #beginning_of_day",2],["midnight","Time","classes\/Time.html#M002901","()","Alias for #beginning_of_day",2],["migrate","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001373","(direction)","Execute this migration in the named direction ",2],["migrate","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001367","(direction)","",2],["migration_template","Rails::Generators::Migration","classes\/Rails\/Generators\/Migration.html#M000172","(source, destination=nil, config={})","Creates a migration template at the given destination. The difference to the default template method",2],["mime_type","ActionView::Template","classes\/ActionView\/Template.html#M002433","()","",2],["mime_type","ActiveResource::Formats::JsonFormat","classes\/ActiveResource\/Formats\/JsonFormat.html#M001520","()","",2],["mime_type","ActiveResource::Formats::XmlFormat","classes\/ActiveResource\/Formats\/XmlFormat.html#M001516","()","",2],["minus_with_coercion","Time","classes\/Time.html#M002929","(other)","Time#- can also be used to determine the number of seconds between two Time instances. We're layering",2],["minus_without_coercion","Time","classes\/Time.html#M002932","(other)","Alias for #-",2],["minus_without_duration","Time","classes\/Time.html#M002931","(other)","Alias for #-",2],["missing_name","NameError","classes\/NameError.html#M002948","()","Extract the name of the missing constant from the exception message. ",2],["missing_name?","NameError","classes\/NameError.html#M002949","(name)","Was this exception raised because the given name was missing? ",2],["model_name","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M004136","()","Returns an ActiveModel::Name object for module. It can be used to retrieve all kinds of naming-related",2],["module_namespacing","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000095","(&block)","Wrap block with namespace of current application if namespace exists and is not skipped ",2],["modules_for_helpers","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M001691","(args)","Returns a list of modules, normalized from the acceptable kinds of helpers with the following behavior:",2],["modules_for_helpers","ActionController::Helpers::ClassMethods","classes\/ActionController\/Helpers\/ClassMethods.html#M001822","(args)","Overwrite modules_for_helpers to accept :all as argument, which loads all helpers in helpers_path. ====",2],["monday","Time","classes\/Time.html#M002894","()","Returns a new +Date+\/+DateTime+ representing the start of this week. Week is assumed to start on a Monday.",2],["month","Integer","classes\/Integer.html#M002834","()","Alias for #months",2],["months","Integer","classes\/Integer.html#M002833","()","Enables the use of time calculations and declarations, like 45.minutes + 2.hours + 4.years. These methods",2],["months_ago","Time","classes\/Time.html#M002883","(months)","Returns a new Time representing the time a number of specified months ago ",2],["months_since","Time","classes\/Time.html#M002884","(months)","Returns a new Time representing the time a number of specified months in the future ",2],["mount","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M001971","(app, options = nil)","Mount a Rack-based application to be used within the application. mount SomeRackApp, :at => \"some_route\"",2],["mountable?","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000299","()","",2],["multipart=","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002642","(multipart)","",2],["multiple_of?","Integer","classes\/Integer.html#M002837","(number)","Check whether the integer is evenly divisible by the argument. 0.multiple_of?(0)  #=> true 6.multiple_of?(5)",2],["mute","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003841","()","Silence the logger within a block. ",2],["mute","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000310","(&block)","",2],["mysql2_connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001166","(config)","Establishes a connection to the database that's used by all Active Record objects. ",2],["mysql_socket","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000362","()","",2],["name","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003819","()","",2],["name","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003239","()","",2],["name","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000302","()","",2],["names","QualifiedConstUtils","classes\/QualifiedConstUtils.html#M002961","(path)","",2],["namespace","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002008","(path, options = {})","See ActionDispatch::Routing::Mapper::Scoping#namespace ",2],["namespace","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M001984","(path, options = {})","Scopes routes to a specific namespace. For example: namespace :admin do resources :posts end This generates",2],["namespace","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000175","(name=nil)","Convenience method to get the namespace from the class name. It's the same as Thor default except that",2],["namespace","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000100","()","",2],["namespaced?","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000101","()","",2],["namespaced_class_path","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000106","()","",2],["namespaced_file_path","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000105","()","",2],["native_database_types","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001200","()","",2],["native_database_types","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000898","()","Returns a Hash of mappings from the abstract data types to the native database types. See TableDefinition#column",2],["navigation_behavior","ActionController::Responder","classes\/ActionController\/Responder.html#M001795","(error)","This is the common behavior for formats associated with browsing, like :html, :iphone and so forth. ",2],["navigation_location","ActionController::Responder","classes\/ActionController\/Responder.html#M001799","()","Alias for #resource_location",2],["negotiate_mime","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002059","(order)","Receives an array of mimes and return the first user sent mime that matches the order array. ",2],["nested","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002007","()","",2],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003445","()","",2],["nested_under_indifferent_access","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003677","()","",2],["nested_under_indifferent_access","Hash","classes\/Hash.html#M003015","()","Alias for #with_indifferent_access",2],["new","AbstractController::DoubleRenderError","classes\/AbstractController\/DoubleRenderError.html#M001648","(message = nil)","",2],["new","AbstractController::Layouts","classes\/AbstractController\/Layouts.html#M001711","(*)","",2],["new","ActionController::Caching::Actions::ActionCachePath","classes\/ActionController\/Caching\/Actions\/ActionCachePath.html#M001922","(controller, options = {}, infer_extension = true)","If +infer_extension+ is true, the cache path extension is looked up from the request's path and format.",2],["new","ActionController::Metal","classes\/ActionController\/Metal.html#M001738","()","",2],["new","ActionController::Middleware","classes\/ActionController\/Middleware.html#M001913","(app)","",2],["new","ActionController::Middleware","classes\/ActionController\/Middleware.html#M001916","(app)","",2],["new","ActionController::Middleware::ActionMiddleware","classes\/ActionController\/Middleware\/ActionMiddleware.html#M001911","(controller, app)","",2],["new","ActionController::Responder","classes\/ActionController\/Responder.html#M001789","(controller, resources, options={})","",2],["new","ActionDispatch::BestStandardsSupport","classes\/ActionDispatch\/BestStandardsSupport.html#M002347","(app, type = true)","",2],["new","ActionDispatch::BodyProxy","classes\/ActionDispatch\/BodyProxy.html#M002303","(body, &block)","",2],["new","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M002321","(app)","",2],["new","ActionDispatch::Cookies","classes\/ActionDispatch\/Cookies.html#M002317","(app)","",2],["new","ActionDispatch::DebugExceptions","classes\/ActionDispatch\/DebugExceptions.html#M002292","(app)","",2],["new","ActionDispatch::ExceptionWrapper","classes\/ActionDispatch\/ExceptionWrapper.html#M002256","(env, exception)","",2],["new","ActionDispatch::FileHandler","classes\/ActionDispatch\/FileHandler.html#M002309","(root, cache_control)","",2],["new","ActionDispatch::Flash","classes\/ActionDispatch\/Flash.html#M002233","(app)","",2],["new","ActionDispatch::Head","classes\/ActionDispatch\/Head.html#M002245","(app)","",2],["new","ActionDispatch::Http::Headers","classes\/ActionDispatch\/Http\/Headers.html#M002126","(*args)","",2],["new","ActionDispatch::Http::ParameterFilter","classes\/ActionDispatch\/Http\/ParameterFilter.html#M002062","(filters)","",2],["new","ActionDispatch::Http::UploadedFile","classes\/ActionDispatch\/Http\/UploadedFile.html#M002049","(hash)","",2],["new","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M002380","(app)","Create and initialize a new Session instance. ",2],["new","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002272","(*args)","",2],["new","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M002266","(klass_or_name, *args, &block)","",2],["new","ActionDispatch::ParamsParser","classes\/ActionDispatch\/ParamsParser.html#M002342","(app, parsers = {})","",2],["new","ActionDispatch::PublicExceptions","classes\/ActionDispatch\/PublicExceptions.html#M002235","(public_path)","",2],["new","ActionDispatch::RailsEntityStore","classes\/ActionDispatch\/RailsEntityStore.html#M002149","(store = RAILS_CACHE)","",2],["new","ActionDispatch::RailsMetaStore","classes\/ActionDispatch\/RailsMetaStore.html#M002145","(store = RAILS_CACHE)","TODO: Finally deal with the RAILS_CACHE global ",2],["new","ActionDispatch::Reloader","classes\/ActionDispatch\/Reloader.html#M002251","(app, condition=nil)","",2],["new","ActionDispatch::RemoteIp","classes\/ActionDispatch\/RemoteIp.html#M002286","(app, check_ip_spoofing = true, custom_proxies = nil)","",2],["new","ActionDispatch::RemoteIp::GetIp","classes\/ActionDispatch\/RemoteIp\/GetIp.html#M002288","(env, middleware)","",2],["new","ActionDispatch::RequestId","classes\/ActionDispatch\/RequestId.html#M002299","(app)","",2],["new","ActionDispatch::Rescue","classes\/ActionDispatch\/Rescue.html#M002339","(app, rescuers = {}, &block)","",2],["new","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002154","(status = 200, header = {}, body = [])","",2],["new","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002006","()","",2],["new","ActionDispatch::Routing::UrlFor","classes\/ActionDispatch\/Routing\/UrlFor.html#M002044","(*)","",2],["new","ActionDispatch::Session::CacheStore","classes\/ActionDispatch\/Session\/CacheStore.html#M002334","(app, options = {})","Create a new store. The cache to use can be passed in the <tt>:cache<\/tt> option. If it is not specified,",2],["new","ActionDispatch::Session::Compatibility","classes\/ActionDispatch\/Session\/Compatibility.html#M002327","(app, options = {})","",2],["new","ActionDispatch::Session::MemCacheStore","classes\/ActionDispatch\/Session\/MemCacheStore.html#M002333","(app, options = {})","",2],["new","ActionDispatch::ShowExceptions","classes\/ActionDispatch\/ShowExceptions.html#M002240","(app, exceptions_app = nil)","",2],["new","ActionDispatch::Static","classes\/ActionDispatch\/Static.html#M002315","(app, path, cache_control=nil)","",2],["new","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002351","(env = {})","",2],["new","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002350","(env = {})","",2],["new","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002810","(method_name=nil, *args)","Instantiate a new mailer object. If +method_name+ is not +nil+, the mailer will be initialized according",2],["new","ActionView::FileSystemResolver","classes\/ActionView\/FileSystemResolver.html#M002468","(path, pattern=nil)","",2],["new","ActionView::FixtureResolver","classes\/ActionView\/FixtureResolver.html#M002541","(hash = {}, pattern=nil)","",2],["new","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes\/ActionView\/Helpers\/AssetTagHelper\/AssetIncludeTag.html#M002735","(config, asset_paths)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomBuilder.html#M002659","(xml)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M002662","(xml, view, feed_options = {})","",2],["new","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002646","(object_name, object, template, options, proc)","",2],["new","ActionView::Helpers::NumberHelper::InvalidNumberError","classes\/ActionView\/Helpers\/NumberHelper\/InvalidNumberError.html#M002670","(number)","",2],["new","ActionView::PartialRenderer","classes\/ActionView\/PartialRenderer.html#M002485","(*)","",2],["new","ActionView::Renderer","classes\/ActionView\/Renderer.html#M002499","(lookup_context)","",2],["new","ActionView::Resolver","classes\/ActionView\/Resolver.html#M002461","()","",2],["new","ActionView::Resolver::Path","classes\/ActionView\/Resolver\/Path.html#M002460","(name, prefix, partial, virtual)","",2],["new","ActionView::Template","classes\/ActionView\/Template.html#M002430","(source, identifier, handler, details)","",2],["new","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M002524","(*)","",2],["new","ActionView::TestCase::TestController","classes\/ActionView\/TestCase\/TestController.html#M002519","()","",2],["new","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html#M004118","(options = {})","",2],["new","ActiveModel::BlockValidator","classes\/ActiveModel\/BlockValidator.html#M004153","(options, &block)","",2],["new","ActiveModel::EachValidator","classes\/ActiveModel\/EachValidator.html#M004149","(options)","Returns a new validator instance. All options will be available via the +options+ reader, however the",2],["new","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003973","(base)","Pass in the instance of the object that is using the errors object. class Person def initialize @errors",2],["new","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/LoggerSanitizer.html#M004100","(target)","",2],["new","ActiveModel::MassAssignmentSecurity::Sanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html#M004096","(target=nil)","",2],["new","ActiveModel::Name","classes\/ActiveModel\/Name.html#M004133","(klass, namespace = nil, name = nil)","",2],["new","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M003949","()","Start observing the declared classes and their subclasses. ",2],["new","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004075","(model_class, *args)","",2],["new","ActiveModel::Validations::AcceptanceValidator","classes\/ActiveModel\/Validations\/AcceptanceValidator.html#M004038","(options)","",2],["new","ActiveModel::Validations::LengthValidator","classes\/ActiveModel\/Validations\/LengthValidator.html#M004021","(options)","",2],["new","ActiveModel::Validator","classes\/ActiveModel\/Validator.html#M004146","(options)","Accepts options that will be made available through the +options+ reader. ",2],["new","ActiveRecord::AttributeAssignmentError","classes\/ActiveRecord\/AttributeAssignmentError.html#M001303","(message, exception, attribute)","",2],["new","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001412","(attributes = nil, options = {})","New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes",2],["new","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001193","(connection, logger, connection_options, config)","FIXME: Make the first parameter more similar for the two adapters ",2],["new","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000995","(pools = {})","",2],["new","ActiveRecord::ConnectionAdapters::ConnectionManagement","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html#M001006","(app)","",2],["new","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000973","(spec)","Creates a new ConnectionPool object. +spec+ is a ConnectionSpecification object which describes database",2],["new","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001167","(connection, logger, connection_options, config)","",2],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000850","(connection, logger, connection_options, config)","",2],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter\/StatementPool.html#M000841","(connection, max = 1000)","",2],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001070","(connection, logger, connection_parameters, config)","Initializes and connects a PostgreSQL adapter. ",2],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001058","(connection, max)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000760","(connection, logger, config)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/StatementPool.html#M000751","(connection, max)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html#M000749","(version_string)","",2],["new","ActiveRecord::ConnectionAdapters::SchemaCache","classes\/ActiveRecord\/ConnectionAdapters\/SchemaCache.html#M001162","(conn)","",2],["new","ActiveRecord::ConnectionAdapters::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/StatementPool.html#M000823","(connection, max = 1000)","",2],["new","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000944","(table_name, base)","",2],["new","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000933","(base)","",2],["new","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M001438","(finder, instantiator, bang, attribute_names)","",2],["new","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000599","(connection, table_name, class_name, fixture_path)","",2],["new","ActiveRecord::Fixtures::File","classes\/ActiveRecord\/Fixtures\/File.html#M001460","(file)","",2],["new","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001368","()","",2],["new","ActiveRecord::Migration::CommandRecorder","classes\/ActiveRecord\/Migration\/CommandRecorder.html#M000605","(delegate = nil)","",2],["new","ActiveRecord::MigrationProxy","classes\/ActiveRecord\/MigrationProxy.html#M001383","(name, version, filename, scope)","",2],["new","ActiveRecord::MultiparameterAssignmentErrors","classes\/ActiveRecord\/MultiparameterAssignmentErrors.html#M001304","(errors)","",2],["new","ActiveRecord::QueryCache","classes\/ActiveRecord\/QueryCache.html#M001277","(app)","",2],["new","ActiveRecord::RecordInvalid","classes\/ActiveRecord\/RecordInvalid.html#M000682","(record)","",2],["new","ActiveRecord::Result","classes\/ActiveRecord\/Result.html#M001279","(columns, rows)","",2],["new","ActiveRecord::StaleObjectError","classes\/ActiveRecord\/StaleObjectError.html#M001301","(record, attempted_action)","",2],["new","ActiveRecord::UnknownPrimaryKey","classes\/ActiveRecord\/UnknownPrimaryKey.html#M001305","(model)","",2],["new","ActiveRecord::Validations::UniquenessValidator","classes\/ActiveRecord\/Validations\/UniquenessValidator.html#M001387","(options)","",2],["new","ActiveRecord::WrappedDatabaseException","classes\/ActiveRecord\/WrappedDatabaseException.html#M001300","(message, original_exception)","",2],["new","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001575","(attributes = {}, persisted = false)","Constructor method for \\new resources; the optional +attributes+ parameter takes a \\hash of attributes",2],["new","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001618","(site, format = ActiveResource::Formats::JsonFormat)","The +site+ parameter is required and will set the +site+ attribute to the URI for the remote resource",2],["new","ActiveResource::Request","classes\/ActiveResource\/Request.html#M001489","(method, path, body = nil, headers = {})","",2],["new","ActiveResource::Response","classes\/ActiveResource\/Response.html#M001493","(body, message = 200, headers = {})","",2],["new","ActiveResource::SSLError","classes\/ActiveResource\/SSLError.html#M001501","(message)","",2],["new","ActiveResource::TimeoutError","classes\/ActiveResource\/TimeoutError.html#M001499","(message)","",2],["new","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M003474","()","",2],["new","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003587","(log, level = DEBUG)","",2],["new","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003865","(value, options = {})","Create a new cache entry for the specified value. Options supported are +:compress+, +:compress_threshold+,",2],["new","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003545","(cache_path, options = nil)","",2],["new","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M003561","(*addresses)","Creates a new MemCacheStore object, with the given memcached server addresses. Each address is either",2],["new","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M003572","(options = nil)","",2],["new","ActiveSupport::Cache::NullStore","classes\/ActiveSupport\/Cache\/NullStore.html#M003536","(options = nil)","",2],["new","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003839","(options = nil)","Create a new cache. The options will be passed to any write method calls except for :namespace which",2],["new","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M003518","()","",2],["new","ActiveSupport::Dependencies::ClassCache","classes\/ActiveSupport\/Dependencies\/ClassCache.html#M003308","()","",2],["new","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M003302","()","@watching is a stack of lists of constants being watched. For instance, if parent.rb is autoloaded, the",2],["new","ActiveSupport::FileUpdateChecker","classes\/ActiveSupport\/FileUpdateChecker.html#M003659","(files, dirs={}, &block)","It accepts two parameters on initialization. The first is an array of files and the second is an optional",2],["new","ActiveSupport::FileWatcher","classes\/ActiveSupport\/FileWatcher.html#M003714","()","",2],["new","ActiveSupport::FileWatcher::Backend","classes\/ActiveSupport\/FileWatcher\/Backend.html#M003712","(path, watcher)","",2],["new","ActiveSupport::Gzip::Stream","classes\/ActiveSupport\/Gzip\/Stream.html#M003488","(*)","",2],["new","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003446","(constructor = {})","",2],["new","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003337","()","",2],["new","ActiveSupport::InheritableOptions","classes\/ActiveSupport\/InheritableOptions.html#M003602","(parent = nil)","",2],["new","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M003619","(options = nil)","",2],["new","ActiveSupport::JSON::Variable","classes\/ActiveSupport\/JSON\/Variable.html#M003643","(*args)","",2],["new","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html#M003719","(level = DEBUG)","",2],["new","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M003230","(secret, options = {})","",2],["new","ActiveSupport::MessageVerifier","classes\/ActiveSupport\/MessageVerifier.html#M003607","(secret, options = {})","",2],["new","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003348","(string)","Creates a new Chars instance by wrapping _string_. ",2],["new","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M003402","()","",2],["new","ActiveSupport::Notifications::Event","classes\/ActiveSupport\/Notifications\/Event.html#M003433","(name, start, ending, transaction_id, payload)","",2],["new","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M003423","()","",2],["new","ActiveSupport::Notifications::Instrumenter","classes\/ActiveSupport\/Notifications\/Instrumenter.html#M003430","(notifier)","",2],["new","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003679","(*args, &block)","In MRI the Hash class is core and written in C. In particular, methods are programmed with explicit C",2],["new","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003072","(*)","",2],["new","ActiveSupport::SafeBuffer::SafeConcatError","classes\/ActiveSupport\/SafeBuffer\/SafeConcatError.html#M003069","()","",2],["new","ActiveSupport::TaggedLogging","classes\/ActiveSupport\/TaggedLogging.html#M003415","(logger)","",2],["new","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003811","(*args)","",2],["new","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003818","()","",2],["new","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html#M003751","(*args)","",2],["new","ActiveSupport::Testing::Performance::Performer","classes\/ActiveSupport\/Testing\/Performance\/Performer.html#M003805","(harness, metric)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003767","(*args)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003742","(*args)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003754","(*args)","",2],["new","ActiveSupport::Testing::ProxyTestResult","classes\/ActiveSupport\/Testing\/ProxyTestResult.html#M003783","()","",2],["new","ActiveSupport::Testing::RemoteError","classes\/ActiveSupport\/Testing\/RemoteError.html#M003782","(exception)","",2],["new","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003240","(utc_time, time_zone, local_time = nil, period = nil)","",2],["new","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003509","(name)","Return a TimeZone instance with the given name, or +nil+ if no such TimeZone instance exists. (This exists",2],["new","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003493","(name, utc_offset = nil, tzinfo = nil)","Create a new TimeZone object with the given name and offset. The offset is the number of seconds that",2],["new","ArJdbcMySQL::Error","classes\/ArJdbcMySQL\/Error.html#M001472","(msg)","",2],["new","Mime::Type","classes\/Mime\/Type.html#M002197","(string, symbol = nil, synonyms = [])","",2],["new","Plugin","classes\/Plugin.html#M000420","(uri, name = nil)","",2],["new","Rails::ActionMethods","classes\/Rails\/ActionMethods.html#M000313","(generator)","",2],["new","Rails::Application","classes\/Rails\/Application.html#M000001","()","",2],["new","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000517","(*)","",2],["new","Rails::Application::RoutesReloader","classes\/Rails\/Application\/RoutesReloader.html#M000527","()","",2],["new","Rails::BacktraceCleaner","classes\/Rails\/BacktraceCleaner.html#M000379","()","",2],["new","Rails::Commands::Info","classes\/Rails\/Commands\/Info.html#M000452","(base_command)","",2],["new","Rails::Commands::Install","classes\/Rails\/Commands\/Install.html#M000445","(base_command)","",2],["new","Rails::Commands::Plugin","classes\/Rails\/Commands\/Plugin.html#M000439","()","",2],["new","Rails::Commands::Remove","classes\/Rails\/Commands\/Remove.html#M000449","(base_command)","",2],["new","Rails::Console","classes\/Rails\/Console.html#M000469","(app)","",2],["new","Rails::DBConsole","classes\/Rails\/DBConsole.html#M000464","(app)","",2],["new","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M000371","(root=nil)","",2],["new","Rails::Engine::Railties","classes\/Rails\/Engine\/Railties.html#M000366","(config)","TODO Write tests for this behavior extracted from Application ",2],["new","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M000136","(name)","",2],["new","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000241","(*args)","",2],["new","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000335","(*args)","",2],["new","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000126","(name, type=nil, index_type=false, attr_options={})","",2],["new","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000284","(*args)","",2],["new","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M000061","(name, context, options, &block)","",2],["new","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M000050","(root, current, *paths)","",2],["new","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M000041","(path)","",2],["new","Rails::Plugin","classes\/Rails\/Plugin.html#M000089","(root)","",2],["new","Rails::Rack::Debugger","classes\/Rails\/Rack\/Debugger.html#M000482","(app)","",2],["new","Rails::Rack::LogTailer","classes\/Rails\/Rack\/LogTailer.html#M000484","(app, log = nil)","",2],["new","Rails::Rack::Logger","classes\/Rails\/Rack\/Logger.html#M000478","(app, tags=nil)","",2],["new","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000551","()","",2],["new","Rails::Server","classes\/Rails\/Server.html#M000400","(*)","",2],["new","RailsEnvironment","classes\/RailsEnvironment.html#M000409","(dir)","",2],["new","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M000455","(urls_to_fetch, level = 1, cwd = \".\")","",2],["new","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M000473","(tag)","",2],["new?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001577","()","Returns +true+ if this object hasn't yet been saved, otherwise, returns +false+. ==== Examples not_new",2],["new_constants","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M003305","()","return a list of new constants found since the last call to watch_namespaces ",2],["new_element_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001605","()","",2],["new_element_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001552","(prefix_options = {})","Gets the new element path for REST resources. ==== Options * +prefix_options+ - A hash to add a prefix",2],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003448","(hash)","",2],["new_record?","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000640","()","Returns true if this object hasn't been saved yet -- that is, a record for the object doesn't exist in",2],["new_record?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001578","()","Alias for #new?",2],["new_session","Rails::ConsoleMethods","classes\/Rails\/ConsoleMethods.html#M000076","()","create a new session. If a block is given, the new session will be yielded to the block before being",2],["next_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/StatementPool.html#M001063","()","",2],["next_migration_number","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001382","(number)","",2],["next_month","Time","classes\/Time.html#M002890","()","Short-hand for months_since(1) ",2],["next_week","Time","classes\/Time.html#M002899","(day = :monday)","Returns a new Time representing the start of the given day in next week (default is :monday). ",2],["next_year","Time","classes\/Time.html#M002888","()","Short-hand for years_since(1) ",2],["no_color!","Rails::Generators","classes\/Rails\/Generators.html#M000539","()","Remove the color from output. ",2],["nonce","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001888","(secret_key, time = Time.now)","Uses an MD5 digest based on time to generate a value to be used only once. A server-specified data string",2],["normalize","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003382","(form = nil)","Returns the KC normalization of the string by default. NFKC is considered the best normalization form",2],["normalize","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003400","(string, form=nil)","Returns the KC normalization of the string by default. NFKC is considered the best normalization form",2],["normalize_name","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper.html#M001968","(name)","",2],["normalize_path","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper.html#M001967","(path)","Invokes Rack::Mount::Utils.normalize path and ensure that (:locale) becomes (\/:locale) instead of \/(:locale).",2],["not_modified?","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M002178","(modified_at)","",2],["notice","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002229","()","Convenience accessor for flash[:notice] ",2],["notice=","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002230","(message)","Convenience accessor for flash[:notice]= ",2],["notify_observers","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M003941","(*arg)","Notify list of observers of a change. ",2],["now","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002223","()","Sets a flash that will not be available to the next action, only to the current. flash.now[:message]",2],["now","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003502","()","Returns an ActiveSupport::TimeWithZone instance representing the current time in the time zone represented",2],["now_is_loaded?","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002231","()","",2],["number_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002638","(object_name, method, options = {})","Returns an input tag of type \"number\". ==== Options * Accepts same options as number_field_tag ",2],["number_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002564","(name, value = nil, options = {})","Creates a number field. ==== Options * <tt>:min<\/tt> - The minimum acceptable value. * <tt>:max<\/tt>",2],["number_to_currency","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M002672","(number, options = {})","Formats a +number+ into a currency string (e.g., $13.65). You can customize the format in the +options+",2],["number_to_human","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M002680","(number, options = {})","Pretty prints (formats and approximates) a number in a way it is more readable by humans (eg.: 1200000000",2],["number_to_human_size","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M002676","(number, options = {})","Formats the bytes in +number+ into a more understandable representation (e.g., giving it 1500 yields",2],["number_to_percentage","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M002673","(number, options = {})","Formats a +number+ as a percentage string (e.g., 65%). You can customize the format in the +options+",2],["number_to_phone","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M002671","(number, options = {})","Formats a +number+ into a US phone number (e.g., (555) 123-9876). You can customize the format in the",2],["number_with_delimiter","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M002674","(number, options = {})","Formats a +number+ with grouped thousands using +delimiter+ (e.g., 12,324). You can customize the format",2],["number_with_precision","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M002675","(number, options = {})","Formats a +number+ with the specified level of <tt>:precision<\/tt> (e.g., 112.32 has a precision of 2",2],["object","ActionView::Helpers::ActiveModelInstanceTag","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html#M002710","()","",2],["observe","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M003946","(*models)","Attaches the observer to the supplied model classes. ",2],["observed_class","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M003948","()","The class observed by default is inferred from the observer's class name: assert_equal Person, PersonObserver.observed_class",2],["observed_classes","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M003947","()","Returns an array of Classes to observe. You can override this instead of using the +observe+ helper.",2],["observer_class_for","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004080","(observer)","",2],["observer_instances","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M003938","()","Gets the current observer instances. ",2],["observers","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M003937","()","Gets an array of observers observing this model. The array also provides +enable+ and +disable+ methods",2],["observers=","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M003936","(*values)","== Active Model Observers Activation Activates the observers assigned. Examples: class ORM include ActiveModel::Observing",2],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M003934","(string)","Alias for #on_characters",2],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M003933","(string)","",2],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M003930","()","",2],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M003932","(name)","",2],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M003929","()","",2],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M003931","(name, attrs = {})","",2],["opaque","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001890","(secret_key)","Opaque based on random generation - but changing each request? ",2],["open","ActionDispatch::RailsEntityStore","classes\/ActionDispatch\/RailsEntityStore.html#M002151","(key)","",2],["open","ActiveRecord::Fixtures::File","classes\/ActiveRecord\/Fixtures\/File.html#M001459","(file)","Open a fixture file named +file+.  When called with a block, the block is called with the filehandle",2],["open_log","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003588","(log, mode)","",2],["open_session","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M002389","(app = nil)","Open a new session instance. If a block is given, the new session is yielded to the block before being",2],["opt_parser","Rails::Server","classes\/Rails\/Server.html#M000402","()","",2],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002595","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","Returns a string of <tt><option><\/tt> tags, like <tt>options_from_collection_for_select<\/tt>, but groups",2],["optional_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002082","()","Returns a number \\port suffix like 8080 if the \\port number of this request is not the default HTTP \\port",2],["options","Object","classes\/Object.html#M000408","()","",2],["options","Object","classes\/Object.html#M000467","()","",2],["options","Rails::Commands::Info","classes\/Rails\/Commands\/Info.html#M000453","()","",2],["options","Rails::Commands::Install","classes\/Rails\/Commands\/Install.html#M000446","()","",2],["options","Rails::Commands::Plugin","classes\/Rails\/Commands\/Plugin.html#M000441","()","",2],["options","Rails::Commands::Remove","classes\/Rails\/Commands\/Remove.html#M000450","()","",2],["options_for","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M003622","(value)","",2],["options_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002593","(container, selected = nil)","Accepts a container (hash, array, enumerable, your type) and returns a string of option tags. Given a",2],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002594","(collection, value_method, text_method, selected = nil)","Returns a string of option tags that have been compiled by iterating over the +collection+ and assigning",2],["options_include_default?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000969","(options)","",2],["ord","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003366","()","Returns the codepoint of the first character in the string. Example: '\u3053\u3093\u306b\u3061\u306f'.mb_chars.ord # => 12371",2],["ord","String","classes\/String.html#M003085","()","Returns the codepoint of the first character of the string, assuming a single-byte character encoding:",2],["ordered_railties","Rails::Engine","classes\/Rails\/Engine.html#M000505","()","",2],["ordinalize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003333","(number)","Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st,",2],["ordinalize","Integer","classes\/Integer.html#M002838","()","Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such",2],["orig_delete","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001507","(custom_method_name, options = {})","Alias for #delete",2],["original_concat","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003076","(value)","Alias for #concat",2],["original_fullpath","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002099","()","",2],["original_name","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000301","()","",2],["original_url","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002101","()","",2],["orm_class","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M000216","()","Loads the ORM::Generators::ActiveModel class. This class is responsible to tell scaffold entities how",2],["orm_instance","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M000217","(name=singular_table_name)","Initialize ORM::Generators::ActiveModel to access instance methods. ",2],["output_filename","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003816","()","",2],["output_filename","ActiveSupport::Testing::Performance::Performer","classes\/ActiveSupport\/Testing\/Performance\/Performer.html#M003807","()","",2],["output_filename","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003757","(printer_class)","",2],["output_filename","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003745","(printer_class)","",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001023","()","Checks whether there is currently no transaction active. This is done by querying the database driver,",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001111","()","",2],["param_key","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M004142","(record_or_class)","Returns string to use for params names. It differs for namespaced models regarding whether it's inside",2],["parameter_filter","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M002140","()","",2],["parameter_filter_for","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M002142","(filters)","",2],["parameterize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003317","(string, sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["parameterize","String","classes\/String.html#M003112","(sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["parameters","ActionDispatch::Http::Parameters","classes\/ActionDispatch\/Http\/Parameters.html#M002129","()","Returns both GET and POST \\parameters in a single hash. ",2],["paramify_values","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001960","(hash_or_array_or_value)","",2],["params","ActionController::Metal","classes\/ActionController\/Metal.html#M001739","()","",2],["params","ActionDispatch::Http::Parameters","classes\/ActionDispatch\/Http\/Parameters.html#M002130","()","Alias for #parameters",2],["params=","ActionController::Metal","classes\/ActionController\/Metal.html#M001740","(val)","",2],["parent","Module","classes\/Module.html#M002967","()","Returns the module which contains this one according to its name. module M module N end end X = M::N",2],["parent_name","Module","classes\/Module.html#M002966","()","Returns the name of the module containing this one. M::N.parent_name # => \"M\" ",2],["parent_of?","ActiveSupport::Notifications::Event","classes\/ActiveSupport\/Notifications\/Event.html#M003434","(event)","",2],["parent_prefixes","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M001695","()","",2],["parents","Module","classes\/Module.html#M002968","()","Returns all the parents of this module according to its name, ordered from nested outwards. The receiver",2],["parse","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003501","(str, now=now)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from parsed string.",2],["parse","ActiveSupport::XmlMini_LibXMLSAX","classes\/ActiveSupport\/XmlMini_LibXMLSAX.html#M003935","(data)","",2],["parse","ActiveSupport::XmlMini_NokogiriSAX","classes\/ActiveSupport\/XmlMini_NokogiriSAX.html#M003927","(data)","",2],["parse","Mime::Type","classes\/Mime\/Type.html#M002194","(accept_header)","",2],["parse","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000124","(column_definition)","",2],["parse!","Rails::Commands::Info","classes\/Rails\/Commands\/Info.html#M000454","(args)","",2],["parse!","Rails::Commands::Install","classes\/Rails\/Commands\/Install.html#M000448","(args)","",2],["parse!","Rails::Commands::Plugin","classes\/Rails\/Commands\/Plugin.html#M000444","(args=ARGV)","",2],["parse!","Rails::Commands::Plugin","classes\/Rails\/Commands\/Plugin.html#M000442","(args=ARGV)","",2],["parse!","Rails::Commands::Remove","classes\/Rails\/Commands\/Remove.html#M000451","(args)","",2],["parse!","Rails::Server::Options","classes\/Rails\/Server\/Options.html#M000399","(args)","",2],["parse_data_with_trailing_star","Mime::Type","classes\/Mime\/Type.html#M002195","(input)","input: 'text' returned value:  [Mime::JSON, Mime::XML, Mime::ICS, Mime::HTML, Mime::CSS, Mime::CSV, Mime::JS,",2],["parse_error","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M003616","()","",2],["parse_query","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002124","(qs)","",2],["parse_raw_value_as_a_number","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M004015","(raw_value)","",2],["parse_raw_value_as_an_integer","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M004016","(raw_value)","",2],["parser","URI","classes\/URI.html#M002832","()","",2],["password","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001533","()","Gets the \\password for REST HTTP authentication. ",2],["password=","ActiveModel::SecurePassword::InstanceMethodsOnActivation","classes\/ActiveModel\/SecurePassword\/InstanceMethodsOnActivation.html#M004074","(unencrypted_password)","Encrypts the password into the password_digest attribute. ",2],["password=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001534","(password)","Sets the \\password for REST HTTP authentication. ",2],["password=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001622","(password)","Sets the password for remote service. ",2],["password_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002627","(object_name, method, options = {})","Returns an input tag of the \"password\" type tailored for accessing a specified attribute (identified",2],["password_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002551","(name = \"password\", value = nil, options = {})","Creates a password field, a masked text field that will hide the users input behind a mask character.",2],["past?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003274","()","",2],["past?","DateTime","classes\/DateTime.html#M003207","()","Tells whether the DateTime object's datetime lies in the past ",2],["past?","Time","classes\/Time.html#M002873","()","Tells whether the Time object's time lies in the past ",2],["path","LoadError","classes\/LoadError.html#M003185","()","",2],["path=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002356","(path)","",2],["path_parameters","ActionDispatch::Http::Parameters","classes\/ActionDispatch\/Http\/Parameters.html#M002133","()","Returns a hash with the \\parameters used to form the \\path of the request. Returned hash keys are strings:",2],["path_to_audio","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002758","(source)","Alias for #audio_path",2],["path_to_font","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002760","(source)","Alias for #font_path",2],["path_to_image","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002754","(source)","Alias for #image_path",2],["path_to_javascript","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptTagHelpers.html#M002724","(source)","Alias for #javascript_path",2],["path_to_stylesheet","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetTagHelpers.html#M002732","(source)","Alias for #stylesheet_path",2],["path_to_video","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002756","(source)","Alias for #video_path",2],["paths","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000520","()","",2],["paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M000374","()","",2],["pending","ActiveSupport::Testing::Pending","classes\/ActiveSupport\/Testing\/Pending.html#M003795","(description = \"\", &block)","",2],["perform_validations","ActiveRecord::Validations","classes\/ActiveRecord\/Validations.html#M000687","(options={})","",2],["performed?","ActionController::Metal","classes\/ActionController\/Metal.html#M001749","()","",2],["period","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003247","()","Returns the underlying TZInfo::TimezonePeriod. ",2],["period_for_local","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003507","(time, dst=true)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["period_for_utc","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003506","(time)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["persisted?","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000642","()","Returns if the record is persisted, i.e. it's not a new record and it was not destroyed. ",2],["persisted?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001579","()","Returns +true+ if this object has been saved, otherwise returns +false+. ==== Examples persisted = Computer.create(:brand",2],["phone_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002635","(object_name, method, options = {})","Alias for #telephone_field",2],["phone_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002561","(name, value = nil, options = {})","Alias for #telephone_field_tag",2],["pk_and_sequence_for","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001242","(table)","Returns a table's primary key and belonging sequence. ",2],["plain?","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html#M004121","()","",2],["plugin","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000144","(name, options)","Install a plugin. You must provide either a Subversion url or Git url. For a Git-hosted plugin, you can",2],["plugins","Rails::Engine::Railties","classes\/Rails\/Engine\/Railties.html#M000368","()","",2],["plural","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M004137","(record_or_class)","Returns the plural class name of a record or class. Examples: ActiveModel::Naming.plural(post)      ",2],["plural","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003339","(rule, replacement)","Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular",2],["plural_file_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000116","()","",2],["plural_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000109","()","",2],["plural_table_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000115","()","",2],["pluralize","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002686","(count, singular, plural = nil)","Attempts to pluralize the +singular+ word unless +count+ is 1. If +plural+ is supplied, it will use that",2],["pluralize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003318","(word)","Returns the plural form of the word in the string. Examples: \"post\".pluralize             # => \"posts\"",2],["pluralize","String","classes\/String.html#M003100","(count = nil)","Returns the plural form of the word in the string. If the optional parameter +count+ is specified, the",2],["pluralize_table_names?","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000121","()","",2],["polymorphic_path","ActionDispatch::Routing::PolymorphicRoutes","classes\/ActionDispatch\/Routing\/PolymorphicRoutes.html#M002024","(record_or_hash_or_array, options = {})","Returns the path component of a URL for the given record. It uses <tt>polymorphic_url<\/tt> with <tt>:routing_type",2],["polymorphic_url","ActionDispatch::Routing::PolymorphicRoutes","classes\/ActionDispatch\/Routing\/PolymorphicRoutes.html#M002023","(record_or_hash_or_array, options = {})","Constructs a call to a named RESTful route for the given record and returns the resulting URL string.",2],["pop_d","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M000458","()","",2],["port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002079","()","Returns the port number of this request as an integer. ",2],["port=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002354","(number)","",2],["port_string","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002083","()","Returns a string \\port suffix, including colon, like \":8080\" if the \\port number of this request is not",2],["post","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001949","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating POST HTTP method and set\/volley the response ",2],["post","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002366","(path, parameters = nil, headers = nil)","Performs a POST request with the given parameters. See +#get+ for more details. ",2],["post","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M001978","(*args, &block)","Define a route that only recognizes HTTP POST. For supported arguments, see <tt>Base#match<\/tt>. Example:",2],["post","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001629","(path, body = '', headers = {})","Executes a POST request. Used to create new resources. ",2],["post","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001510","(method_name, options = {}, body = nil)","",2],["post","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001504","(custom_method_name, options = {}, body = '')","",2],["post?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002094","()","Is this a POST request? Equivalent to <tt>request.request_method_symbol == :post<\/tt>. ",2],["post_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002375","(path, parameters = nil, headers = nil)","Performs a POST request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["postgresql_version","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001147","()","Returns the version of the connected PostgreSQL server. ",2],["precisionless_round","Float","classes\/Float.html#M002829","(precision = nil)","Alias for #round",2],["prefetch_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000719","(table_name = nil)","Should primary key values be selected from their corresponding sequence before the insert statement?",2],["prefix","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001548","(options={})","Gets the \\prefix for a resource's nested URL (e.g., <tt>prefix\/collectionname\/1.json<\/tt>) This method",2],["prefix=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001550","(value = '\/')","Sets the \\prefix for a resource's nested URL (e.g., <tt>prefix\/collectionname\/1.json<\/tt>). Default value",2],["prefix_source","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001549","()","An attribute reader for the source string for the resource path \\prefix.  This method is regenerated",2],["prepare!","ActionDispatch::Reloader","classes\/ActionDispatch\/Reloader.html#M002249","()","Execute all prepare callbacks. ",2],["prepare!","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002172","()","Alias for #to_a",2],["prepare_controller_class","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M001947","(new_class)","",2],["prepare_destination","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000238","()","",2],["prepend_after_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001728","","Prepend an after filter. See _insert_callbacks for parameter details. ",2],["prepend_around_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001732","","Prepend an around filter. See _insert_callbacks for parameter details. ",2],["prepend_before_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001724","","Prepend a before filter. See _insert_callbacks for parameter details. ",2],["prepend_view_path","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M001700","(path)","",2],["prepend_view_path","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M001702","(path)","Prepend a path to the list of view paths for this controller. ==== Parameters * <tt>path<\/tt> - If a",2],["presence","Object","classes\/Object.html#M003150","()","Returns object if it's <tt>present?<\/tt> otherwise returns +nil+. <tt>object.presence<\/tt> is equivalent",2],["present?","Object","classes\/Object.html#M003149","()","An object is present if it's not <tt>blank?<\/tt>. ",2],["prev_month","Time","classes\/Time.html#M002889","()","Short-hand for months_ago(1) ",2],["prev_week","Time","classes\/Time.html#M002898","(day = :monday)","Returns a new Time representing the start of the given day in the previous week (default is :monday).",2],["prev_year","Time","classes\/Time.html#M002887","()","Short-hand for years_ago(1) ",2],["previous_changes","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M004006","()","Map of attributes that were changed when the model was saved. person.name # => 'bob' person.name = 'robert'",2],["primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M001333","()","Defines the primary key field -- can be overridden in subclasses. Overwriting will negate any effect",2],["primary_key","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001243","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001134","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000935","(name)","Appends a primary key definition to the table definition. Can be called multiple times, but this is probably",2],["primary_key","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001547","()","",2],["primary_key=","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M001338","(value)","Sets the name of the primary key column. class Project < ActiveRecord::Base self.primary_key = \"sysid\"",2],["primary_keys","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000984","()","",2],["prime_cache","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M003709","(*syms)","",2],["process","AbstractController::Base","classes\/AbstractController\/Base.html#M001670","(action, *args)","Calls the action going through the entire action dispatch stack. The actual method that is called is",2],["process","ActionController::Middleware","classes\/ActionController\/Middleware.html#M001915","(action)","",2],["process","ActionController::TemplateAssertions","classes\/ActionController\/TemplateAssertions.html#M001940","(*args)","",2],["process","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001961","(action, parameters = nil, session = nil, flash = nil, http_method = 'GET')","",2],["process_action","AbstractController::Callbacks","classes\/AbstractController\/Callbacks.html#M001719","(*args)","Override AbstractController::Base's process_action to run the process_action callbacks around the normal",2],["process_action","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M001825","(*args)","",2],["process_action","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M001905","(event)","",2],["process_action","ActionController::ParamsWrapper","classes\/ActionController\/ParamsWrapper.html#M001849","(*args)","Performs parameters wrapping upon the request. Will be called automatically by the metal call stack.",2],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/LoggerSanitizer.html#M004102","(attrs)","",2],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::Sanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html#M004099","(attrs)","",2],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::StrictSanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/StrictSanitizer.html#M004103","(attrs)","",2],["process_view_paths","ActionView::Base","classes\/ActionView\/Base.html#M002508","(value)","",2],["process_with_new_base_test","ActionController::Testing","classes\/ActionController\/Testing.html#M001762","(request, response)","TODO: Clean this up ",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003747","()","",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003821","()","overridden by each implementation ",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003758","()","",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003771","()","",2],["properties","Rails::InfoController","classes\/Rails\/InfoController.html#M000396","()","",2],["property","Rails::Info","classes\/Rails\/Info.html#M000082","(name, value = nil)","",2],["protect_against_forgery?","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M001838","()","",2],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","classes\/ActionController\/RequestForgeryProtection\/ClassMethods.html#M001832","(options = {})","Turn on request forgery protection. Bear in mind that only non-GET, HTML\/JavaScript requests are checked.",2],["protected_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M004061","(role = :default)","",2],["protocol","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002075","()","Returns 'https:\/\/' if this is an SSL request and 'http:\/\/' otherwise. ",2],["provide","ActionView::Helpers::CaptureHelper","classes\/ActionView\/Helpers\/CaptureHelper.html#M002704","(name, content = nil, &block)","The same as +content_for+ but when used with streaming flushes straight back to the layout. In other",2],["proxy","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001529","()","Gets the \\proxy variable if a proxy is required ",2],["proxy=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001530","(proxy)","Sets the URI of the http proxy to the value in the +proxy+ argument. ",2],["proxy=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001620","(proxy)","Set the proxy for remote service. ",2],["prune","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M003575","(target_size, max_time = nil)","To ensure entries fit within the specified memory prune the cache by removing the least recently accessed",2],["pruning?","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M003576","()","Returns true if the cache is currently being pruned. ",2],["public_directory","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000327","()","",2],["public_path","Rails","classes\/Rails.html#M000026","()","",2],["publish","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M003830","(name, *args)","",2],["publish","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M003426","(name, *args)","",2],["push_d","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M000457","(dir)","",2],["put","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001950","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating PUT HTTP method and set\/volley the response ",2],["put","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002367","(path, parameters = nil, headers = nil)","Performs a PUT request with the given parameters. See +#get+ for more details. ",2],["put","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M001979","(*args, &block)","Define a route that only recognizes HTTP PUT. For supported arguments, see <tt>Base#match<\/tt>. Example:",2],["put","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001628","(path, body = '', headers = {})","Executes a PUT request (see HTTP protocol documentation if unfamiliar). Used to update resources. ",2],["put","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001505","(custom_method_name, options = {}, body = '')","",2],["put","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M001511","(method_name, options = {}, body = '')","",2],["put?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002095","()","Is this a PUT request? Equivalent to <tt>request.request_method_symbol == :put<\/tt>. ",2],["put_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002376","(path, parameters = nil, headers = nil)","Performs a PUT request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["qualified_const_defined?","Module","classes\/Module.html#M002962","(path)","",2],["qualified_const_defined?","Module","classes\/Module.html#M002963","(path, search_parents=true)","",2],["qualified_const_get","Module","classes\/Module.html#M002964","(path)","",2],["qualified_const_set","Module","classes\/Module.html#M002965","(path, value)","",2],["query","ActionView::NullResolver","classes\/ActionView\/NullResolver.html#M002544","(path, exts, formats)","",2],["query_attribute","ActiveRecord::AttributeMethods::Query","classes\/ActiveRecord\/AttributeMethods\/Query.html#M001361","(attr_name)","",2],["query_parameters","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002118","()","Alias for #GET",2],["quietly","Kernel","classes\/Kernel.html#M002850","()","Silences both STDOUT and STDERR, even for subprocesses. quietly { system 'bundle install' } ",2],["quote","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001204","(value, column = nil)","QUOTING ================================================== ",2],["quote","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000831","(value, column = nil)","Quotes the column value to help prevent {SQL injection attacks}[http:\/\/en.wikipedia.org\/wiki\/SQL_injection].",2],["quote_column_name","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000834","(column_name)","Quotes the column name. Defaults to no quoting. ",2],["quote_string","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001172","(string)","QUOTING ================================================== ",2],["quote_string","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000833","(s)","Quotes a string, escaping any ' (single quote) and \\ (backslash) characters. ",2],["quote_table_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000722","(name)","Override to return the quoted table name. Defaults to column quoting. ",2],["quote_table_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001090","(name)","Checks the following cases: - table_name - \"table.name\" - schema_name.table_name - schema_name.\"table.name\"",2],["quote_table_name","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000835","(table_name)","Quotes the table name. Defaults to column name quoting. ",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001248","(column_names, options = {})","",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000968","(column_names, options = {})","Overridden by the mysql adapter for supporting index lengths ",2],["quoted_date","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000838","(value)","",2],["quoted_false","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001208","()","",2],["quoted_false","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000837","()","",2],["quoted_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M001334","()","Returns a quoted version of the primary key name, used to construct SQL statements. ",2],["quoted_table_name","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001433","()","Returns a quoted version of the table name, used to construct SQL statements. ",2],["quoted_true","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001207","()","",2],["quoted_true","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000836","()","",2],["rack_cookies","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002364","()","Alias for #cookies",2],["radio_button","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002650","(method, tag_value, options = {})","",2],["radio_button","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002632","(object_name, method, tag_value, options = {})","Returns a radio button tag for accessing a specified attribute (identified by +method+) on an object",2],["radio_button_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002554","(name, value, checked = false, options = {})","Creates a radio button; use groups of radio buttons named the same to allow users to select from a group",2],["rails_gemfile_entry","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000250","()","",2],["railtie_name","Rails::Plugin","classes\/Rails\/Plugin.html#M000088","()","",2],["railtie_name","Rails::Railtie","classes\/Rails\/Railtie.html#M000388","(name = nil)","",2],["railtie_namespace","Rails::Railtie","classes\/Rails\/Railtie.html#M000395","()","",2],["railties","Rails::Engine","classes\/Rails\/Engine.html#M000496","()","",2],["railties","Rails::Engine::Railties","classes\/Rails\/Engine\/Railties.html#M000369","()","",2],["raise_if_absolute","QualifiedConstUtils","classes\/QualifiedConstUtils.html#M002960","(path)","",2],["rake","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000156","(command, options={})","Runs the supplied rake task ==== Example rake(\"db:migrate\") rake(\"db:migrate\", :env => \"production\")",2],["rake_tasks","Rails::Railtie","classes\/Rails\/Railtie.html#M000384","(&blk)","",2],["rakefile","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000315","()","",2],["rakefile","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000153","(filename, data=nil, &block)","Create a new Rakefile with the provided code (either in a block or a string). ==== Examples rakefile(\"bootstrap.rake\")",2],["rakefile","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000268","()","",2],["rakefile_test_tasks","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000308","()","",2],["range_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002639","(object_name, method, options = {})","Returns an input tag of type \"range\". ==== Options * Accepts same options as range_field_tag ",2],["range_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002565","(name, value = nil, options = {})","Creates a range form element. ==== Options * Accepts the same options as number_field_tag. ",2],["raw","ActionView::Helpers::OutputSafetyHelper","classes\/ActionView\/Helpers\/OutputSafetyHelper.html#M002700","(stringish)","This method outputs without escaping a string. Since escaping tags is now default, this can be used when",2],["raw_connection","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000732","()","Provides access to the underlying database driver for this adapter. For example, this method returns",2],["raw_host_with_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002076","()","Returns the \\host for this request, such as \"example.com\". ",2],["raw_post","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002110","()","Read the request \\body. This is useful for web services that need to work with raw requests directly.",2],["raw_value","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003866","()","Get the raw value. This value may be serialized and compressed. ",2],["raw_write_attribute","ActiveRecord::AttributeMethods::Write","classes\/ActiveRecord\/AttributeMethods\/Write.html#M001323","(attr_name, value)","Alias for #write_attribute",2],["read","ActionDispatch::Http::UploadedFile","classes\/ActionDispatch\/Http\/UploadedFile.html#M002050","(*args)","",2],["read","ActionDispatch::RailsEntityStore","classes\/ActionDispatch\/RailsEntityStore.html#M002152","(key)","",2],["read","ActionDispatch::RailsMetaStore","classes\/ActionDispatch\/RailsMetaStore.html#M002146","(key)","",2],["read","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003845","(name, options = nil)","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["read_attribute","ActiveRecord::AttributeMethods::Read","classes\/ActiveRecord\/AttributeMethods\/Read.html#M001319","(attr_name)","Returns the value of the attribute identified by <tt>attr_name<\/tt> after it has been typecast (for example,",2],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","classes\/ActiveRecord\/AttributeMethods\/BeforeTypeCast.html#M001363","(attr_name)","",2],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::Serialization","classes\/ActiveRecord\/AttributeMethods\/Serialization.html#M001348","(attr_name)","",2],["read_entry","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003551","(key, options)","",2],["read_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M003521","(key, options)","",2],["read_fragment","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M001934","(key, options = nil)","Reads a cached fragment from the location signified by <tt>key<\/tt> (see <tt>expire_fragment<\/tt> for",2],["read_multi","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M003562","(*names)","Reads multiple values from the cache using a single call to the servers for all keys. Options can be",2],["read_multi","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003846","(*names)","Read multiple values at once from the cache. Options can be passed in the last argument. Some cache implementation",2],["readable_inspect","DateTime","classes\/DateTime.html#M003194","()","Overrides the default inspect method with a human readable one, e.g., \"Mon, 21 Feb 2005 14:30:00 +0000\".",2],["readme","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000316","()","",2],["readme","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000159","(path)","Reads the given file at the source root and prints it in the console. === Example readme \"README\" ",2],["readme","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000270","()","",2],["readonly!","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001424","()","Marks this record as read only. ",2],["readonly?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001423","()","Returns +true+ if the record is read only. Records loaded through joins with piggy-back attributes will",2],["receive","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002805","(raw_mail)","Receives a raw email, parses it into an email object, decodes it, instantiates a new mailer, and passes",2],["reconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000726","()","Disconnects from the database if already connected, and establishes a new connection with the database.",2],["reconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001174","()","",2],["reconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000858","()","",2],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001073","()","Close then reopen the connection. ",2],["record","ActiveRecord::Migration::CommandRecorder","classes\/ActiveRecord\/Migration\/CommandRecorder.html#M000606","(*command)","record +command+. +command+ should be a method name and arguments. For example: recorder.record(:method_name,",2],["record","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003813","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003756","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003769","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003810","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003744","()","",2],["record_key_for_dom_id","ActionController::RecordIdentifier","classes\/ActionController\/RecordIdentifier.html#M001759","(record)","Returns a string representation of the key attribute(s) that is suitable for use in an HTML DOM id. This",2],["recreate_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001221","(name, options = {})","Drops the database specified on the +name+ attribute and creates it again using the provided +options+.",2],["recycle!","ActionController::TestResponse","classes\/ActionController\/TestResponse.html#M001942","()","",2],["recycle!","ActionController::Testing","classes\/ActionController\/Testing.html#M001761","()","",2],["redefine_method","Module","classes\/Module.html#M002974","(method, &block)","",2],["redirect","ActionDispatch::Routing::Redirection","classes\/ActionDispatch\/Routing\/Redirection.html#M002042","(*args, &block)","Redirect any path to another path: match \"\/stories\" => redirect(\"\/posts\") You can also use interpolation",2],["redirect_to","ActionController::Flash","classes\/ActionController\/Flash.html#M001773","(options = {}, response_status_and_flash = {})","",2],["redirect_to","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M001829","(*args)","",2],["redirect_to","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M001908","(event)","",2],["redirect_to","ActionController::Redirecting","classes\/ActionController\/Redirecting.html#M001811","(options = {}, response_status = {})","Redirects the browser to the target specified in +options+. This parameter can take one of three forms:",2],["redirect_to_url","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M002422","()","",2],["redirect_url","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002168","()","Alias for #location",2],["ref","Mime::Type","classes\/Mime\/Type.html#M002201","()","",2],["reference?","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M000131","()","",2],["references","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000956","(*args)","Adds a reference. Optionally adds a +type+ column, if <tt>:polymorphic<\/tt> option is provided. <tt>references<\/tt>",2],["references","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000939","(*args)","",2],["refresh","ActionView::Template","classes\/ActionView\/Template.html#M002434","(view)","Receives a view object and return a template similar to self by using @virtual_path. This method is useful",2],["register","Mime::Type","classes\/Mime\/Type.html#M002193","(string, symbol, mime_type_synonyms = [], extension_synonyms = [], skip_lookup = false)","",2],["register_alias","Mime::Type","classes\/Mime\/Type.html#M002192","(string, symbol, extension_synonyms = [])","Registers an alias that's not used on mime type lookup, but can be referenced directly. Especially useful",2],["register_interceptor","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002802","(interceptor)","Register an Interceptor which will be called before mail is sent. Either a class or a string can be passed",2],["register_interceptors","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002800","(*interceptors)","Register one or more Interceptors which will be called before mail is sent. ",2],["register_javascript_expansion","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers::ClassMethods","classes\/ActionView\/Helpers\/AssetTagHelper\/JavascriptTagHelpers\/ClassMethods.html#M002722","(expansions)","Register one or more javascript files to be included when <tt>symbol<\/tt> is passed to <tt>javascript_include_tag<\/tt>.",2],["register_observer","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002801","(observer)","Register an Observer which will be notified when mail is delivered. Either a class or a string can be",2],["register_observers","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002799","(*observers)","Register one or more Observers which will be notified when mail is delivered. ",2],["register_stylesheet_expansion","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers::ClassMethods","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetTagHelpers\/ClassMethods.html#M002730","(expansions)","Register one or more stylesheet files to be included when <tt>symbol<\/tt> is passed to <tt>stylesheet_link_tag<\/tt>.",2],["regular_class_path","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000104","()","",2],["regular_writer","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003450","(key, value)","Alias for #[]=",2],["reject","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003686","(&block)","",2],["reject!","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003685","()","",2],["release_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000976","(with_id = current_connection_id)","Signal that the thread is finished with the current connection. #release_connection releases the connection-thread",2],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000738","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001218","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001114","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000794","()","",2],["reload","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000675","(options = nil)","Reloads the attributes of this object from the database. The optional options argument is passed to find",2],["reload","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001591","()","A method to \\reload the attributes of this object from the remote web service. ==== Examples my_branch",2],["reload!","Rails::Application::RoutesReloader","classes\/Rails\/Application\/RoutesReloader.html#M000528","()","",2],["reload!","Rails::ConsoleMethods","classes\/Rails\/ConsoleMethods.html#M000077","(print=true)","reloads the environment ",2],["reload_dependencies?","Rails::Application","classes\/Rails\/Application.html#M000033","()","",2],["reload_routes!","Rails::Application","classes\/Rails\/Application.html#M000004","()","Reload application routes regardless if they changed or not. ",2],["reloader","I18n::Railtie","classes\/I18n\/Railtie.html#M003653","()","",2],["reloader_paths","I18n::Railtie","classes\/I18n\/Railtie.html#M003654","()","",2],["remote_addr=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002360","(addr)","",2],["remote_ip","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002107","()","Originating IP address, usually set by the RemoteIp middleware. ",2],["remove","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000952","(*column_names)","Removes the column(s) from the table definition. ===== Examples t.remove(:qualification) t.remove(:qualification,",2],["remove_belongs_to","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000959","(*args)","Alias for #remove_references",2],["remove_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000919","(table_name, *column_names)","Removes the column(s) from the table definition. ===== Examples remove_column(:suppliers, :qualification)",2],["remove_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001253","(table_name, *column_names)","",2],["remove_columns","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000920","(table_name, *column_names)","Alias for #remove_column",2],["remove_connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000896","(klass = self)","",2],["remove_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M001004","(klass)","Remove the connection for this class. This will close the active connection and the defined connection",2],["remove_filters!","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M003479","()","",2],["remove_hook_for","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000177","(*names)","Remove a previously added hook. ==== Examples remove_hook_for :orm ",2],["remove_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000925","(table_name, options = {})","Remove the given index from the table. Remove the index_accounts_on_column in the accounts table. remove_index",2],["remove_index","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000953","(options = {})","Removes the given index from the table. ===== Examples ====== Remove the index_table_name_on_column in",2],["remove_index_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001255","(table_name, options = {})","",2],["remove_multiparameter_id","ActiveModel::MassAssignmentSecurity::PermissionSet","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html#M004093","(key)","",2],["remove_possible_method","Module","classes\/Module.html#M002973","(method)","",2],["remove_references","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000958","(*args)","Removes a reference. Optionally removes a +type+ column. <tt>remove_references<\/tt> and <tt>remove_belongs_to<\/tt>",2],["remove_root","ActiveResource::Formats","classes\/ActiveResource\/Formats.html#M001481","(data)","",2],["remove_silencers!","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M003478","()","Will remove all silencers, but leave in the filters. This is useful if your context of debugging suddenly",2],["remove_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000966","(table_name)","Removes the timestamp columns (created_at and updated_at) from the table definition. ===== Examples remove_timestamps(:suppliers)",2],["remove_timestamps","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000954","()","Removes the timestamp columns (+created_at+ and +updated_at+) from the table. ===== Example t.remove_timestamps",2],["remove_timestamps_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001257","(table_name)","",2],["rename","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000955","(column_name, new_column_name)","Renames a column. ===== Example t.rename(:description, :name) ",2],["rename_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001140","(table_name, column_name, new_column_name)","Renames a column in a table. ",2],["rename_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000923","(table_name, column_name, new_column_name)","Renames a column. ===== Example rename_column(:suppliers, :description, :name) ",2],["rename_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001252","(table_name, column_name, new_column_name)","",2],["rename_index","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001142","(table_name, old_name, new_name)","",2],["rename_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000927","(table_name, old_name, new_name)","Rename an index. Rename the index_people_on_last_name index to index_users_on_last_name rename_index",2],["rename_key","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M003649","(key, options = {})","",2],["rename_table","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001233","(table_name, new_name)","Renames a table. Example: rename_table('octopuses', 'octopi') ",2],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001135","(name, new_name)","Renames a table. Example: rename_table('octopuses', 'octopi') ",2],["rename_table","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000804","(name, new_name)","Renames a table. Example: rename_table('octopuses', 'octopi') ",2],["rename_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000906","(table_name, new_name)","Renames a table. ===== Example rename_table('octopuses', 'octopi') ",2],["render","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M001654","(*args, &block)","Normalize arguments, options and then delegates render_to_body and sticks the result in self.response_body.",2],["render","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M001826","(*args)","",2],["render","ActionView::Helpers::RenderingHelper","classes\/ActionView\/Helpers\/RenderingHelper.html#M002708","(options = {}, locals = {}, &block)","Returns the result of a render that's dictated by the options hash. The primary options are: * <tt>:partial<\/tt>",2],["render","ActionView::PartialRenderer","classes\/ActionView\/PartialRenderer.html#M002486","(context, options, block)","",2],["render","ActionView::Renderer","classes\/ActionView\/Renderer.html#M002500","(context, options)","Main render entry point shared by AV and AC. ",2],["render","ActionView::Template","classes\/ActionView\/Template.html#M002432","(view, locals, buffer=nil, &block)","Render a template. If the template was not compiled yet, it is done exactly before rendering. This method",2],["render","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior.html#M002528","(options = {}, local_assigns = {}, &block)","",2],["render","ActionView::TestCase::Behavior::Locals","classes\/ActionView\/TestCase\/Behavior\/Locals.html#M002534","(options = {}, local_assigns = {})","",2],["render_body","ActionView::Renderer","classes\/ActionView\/Renderer.html#M002501","(context, options)","Render but returns a valid Rack body. If fibers are defined, we return a streaming body that renders",2],["render_collection","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M002515","(event)","Alias for #render_template",2],["render_collection","ActionView::PartialRenderer","classes\/ActionView\/PartialRenderer.html#M002487","()","",2],["render_partial","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M002514","(event)","Alias for #render_template",2],["render_partial","ActionView::PartialRenderer","classes\/ActionView\/PartialRenderer.html#M002488","()","",2],["render_template","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M002513","(event)","",2],["render_to_body","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M001656","(options = {})","Raw rendering of a template to a Rack-compatible body. :api: plugin ",2],["render_to_body","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M001770","(options)","",2],["render_to_body","ActionController::Renderers","classes\/ActionController\/Renderers.html#M001900","(options)","",2],["render_to_string","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M001655","(*args, &block)","Raw rendering of a template to a string. Just convert the results of render_response into a String. :api:",2],["render_to_string","ActionController::Rendering","classes\/ActionController\/Rendering.html#M001776","(*)","Overwrite render_to_string because body can now be set to a rack body. ",2],["reorder_characters","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003396","(codepoints)","Re-order codepoints so the string becomes canonical. ",2],["replace","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003699","(other)","When replacing with another hash, the initial order of our keys must come from the other hash -ordered",2],["report","ActiveSupport::Testing::Performance::Performer","classes\/ActiveSupport\/Testing\/Performance\/Performer.html#M003806","()","",2],["request","ActiveResource::LogSubscriber","classes\/ActiveResource\/LogSubscriber.html#M001615","(event)","",2],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M001869","(realm = \"Application\")","",2],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M001877","(realm = \"Application\", message = nil)","Render output including the HTTP Digest authentication header ",2],["request_http_token_authentication","ActionController::HttpAuthentication::Token::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Token\/ControllerMethods.html#M001893","(realm = \"Application\")","",2],["request_method","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002089","()","Returns the HTTP \\method that the application should see. In the case where the \\method was overridden",2],["request_method=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002352","(method)","",2],["request_method_symbol","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002090","()","Returns a symbol form of the #request_method ",2],["request_parameters","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002120","()","Alias for #POST",2],["request_uri=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002355","(uri)","",2],["request_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002373","(http_method, path, parameters = nil, headers = nil)","Performs a request using the specified method, following any subsequent redirect. Note that the redirects",2],["requests","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001617","()","",2],["requests","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M001482","()","Returns an array of all request objects that have been sent to the mock. You can use this to check if",2],["require_engine","ActionView::Template::Handlers::Builder","classes\/ActionView\/Template\/Handlers\/Builder.html#M002484","()","",2],["require_fixture_classes","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000628","(fixture_names = nil)","",2],["require_tzinfo","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003515","()","",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000730","()","Returns true if its required to reload the connection between requests for development mode. This is",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000768","()","",2],["rescue_action","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M001766","(env)","",2],["rescue_action_without_handler","ActionController::TestCase::RaiseActionExceptions","classes\/ActionController\/TestCase\/RaiseActionExceptions.html#M001966","(e)","",2],["rescue_from","ActionDispatch::Rescue","classes\/ActionDispatch\/Rescue.html#M002341","(exception, rescuer)","",2],["rescue_from","ActiveSupport::Rescuable::ClassMethods","classes\/ActiveSupport\/Rescuable\/ClassMethods.html#M003604","(*klasses, &block)","Rescue exceptions raised in controller actions. <tt>rescue_from<\/tt> receives a series of exception classes",2],["rescue_responses","ActionDispatch::ShowExceptions","classes\/ActionDispatch\/ShowExceptions.html#M002238","()","",2],["rescue_template","ActionDispatch::ExceptionWrapper","classes\/ActionDispatch\/ExceptionWrapper.html#M002257","()","",2],["rescue_templates","ActionDispatch::ShowExceptions","classes\/ActionDispatch\/ShowExceptions.html#M002239","()","",2],["rescue_with_handler","ActionController::Rescue","classes\/ActionController\/Rescue.html#M001863","(exception)","",2],["rescue_with_handler","ActiveSupport::Rescuable","classes\/ActiveSupport\/Rescuable.html#M003605","(exception)","Tries to rescue the exception by looking up and calling a registered handler. ",2],["reset!","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M002388","()","Reset the current session. This is useful for testing multiple sessions in a single test case. ",2],["reset!","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M002382","()","Resets the instance. This can be used to reset the state information in an existing session instance,",2],["reset!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000728","()","Reset the state of this connection, directing the DBMS to clear transactions and other connection-related",2],["reset!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001176","()","",2],["reset!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000860","()","",2],["reset!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001074","()","",2],["reset!","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M001486","()","Deletes all logged requests and responses. ",2],["reset_cache","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000589","()","",2],["reset_callbacks","ActiveSupport::ClassMethods","classes\/ActiveSupport\/ClassMethods.html#M003887","(symbol)","Remove all set callbacks for the given event. ",2],["reset_column_information","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001466","()","Resets all the cached information about columns, which will cause them to be reloaded on the next request.",2],["reset_counters","ActiveRecord::CounterCache","classes\/ActiveRecord\/CounterCache.html#M001395","(id, *counters)","Resets one or more counter caches to their correct value using an SQL count query. This is useful when",2],["reset_cycle","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002691","(name = \"default\")","Resets a cycle so that it starts from the first element the next time it is called. Pass in +name+ to",2],["reset_sequence!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001031","(table, column, sequence = nil)","Set the sequence to the max value of the table's column. ",2],["reset_session","ActionController::RackDelegation","classes\/ActionController\/RackDelegation.html#M001817","()","",2],["reset_session","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002114","()","TODO This should be broken apart into AD::Request::Session and probably be included by the session middleware.",2],["resolve","ActionDispatch::RailsEntityStore","classes\/ActionDispatch\/RailsEntityStore.html#M002148","(uri)","",2],["resolve","ActionDispatch::RailsMetaStore","classes\/ActionDispatch\/RailsMetaStore.html#M002144","(uri)","",2],["resource","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002002","(*resources, &block)","Sometimes, you have a resource that clients always look up without referencing an ID. A common example,",2],["resource_errors","ActionController::Responder","classes\/ActionController\/Responder.html#M001806","()","",2],["resource_location","ActionController::Responder","classes\/ActionController\/Responder.html#M001798","()","Returns the resource location by retrieving it from the options or returning the resources array. ",2],["resourceful?","ActionController::Responder","classes\/ActionController\/Responder.html#M001797","()","Checks whether the resource responds to the current format or not. ",2],["resources","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002003","(*resources, &block)","In Rails, a resourceful route provides a mapping between HTTP verbs and URLs and controller actions.",2],["resources_path_names","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002001","(options)","",2],["respond","ActionController::Responder","classes\/ActionController\/Responder.html#M001791","()","Main entry point for responder responsible to dispatch to the proper format. ",2],["respond_to","ActionController::MimeResponds","classes\/ActionController\/MimeResponds.html#M001856","(*mimes, &block)","Without web-service support, an action which collects the data for displaying a list of people might",2],["respond_to","ActionController::MimeResponds::ClassMethods","classes\/ActionController\/MimeResponds\/ClassMethods.html#M001854","(*mimes)","Defines mime types that are rendered by default when invoking <tt>respond_with<\/tt>. Examples: respond_to",2],["respond_to","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M001484","(*args)","Accepts a block which declares a set of requests and responses for the HttpMock to respond to in the",2],["respond_to?","ActionDispatch::BodyProxy","classes\/ActionDispatch\/BodyProxy.html#M002304","(*args)","",2],["respond_to?","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M002393","(method, include_private = false)","",2],["respond_to?","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002160","(method)","",2],["respond_to?","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M004124","(method, include_private_methods = false)","",2],["respond_to?","ActiveRecord::DynamicMatchers","classes\/ActiveRecord\/DynamicMatchers.html#M000704","(method_id, include_private = false)","",2],["respond_to?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001595","(method, include_priv = false)","A method to determine if an object responds to a message (e.g., a method call). In Active Resource, a",2],["respond_to?","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003594","(method, include_private = false)","",2],["respond_to?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003351","(method, include_private=false)","Returns +true+ if _obj_ responds to the given method. Private methods are included in the search only",2],["respond_to?","ActiveSupport::OrderedOptions","classes\/ActiveSupport\/OrderedOptions.html#M003601","(name)","",2],["respond_to?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003297","(sym, include_priv = false)","Ensure proxy class responds to all methods that underlying time instance responds to. ",2],["respond_to?","Rails::Railtie::Configurable::ClassMethods","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html#M000566","(*args)","",2],["respond_to?","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000562","(name)","",2],["respond_to_without_attributes?","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M004125","(method, include_private_methods = false)","Alias for #respond_to?",2],["respond_to_without_attributes?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001596","(method, include_priv = false)","Alias for #respond_to?",2],["respond_with","ActionController::MimeResponds","classes\/ActionController\/MimeResponds.html#M001857","(*resources, &block)","respond_with wraps a resource around a responder for default representation. First it invokes respond_to,",2],["response_body=","ActionController::Metal","classes\/ActionController\/Metal.html#M001748","(val)","",2],["response_body=","ActionController::RackDelegation","classes\/ActionController\/RackDelegation.html#M001816","(body)","",2],["response_code","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002156","()","The response code of the request ",2],["response_from_page","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M002429","()","+assert_select+ and +css_select+ call this to obtain the content in the HTML page. ",2],["response_overridden?","ActionController::Responder","classes\/ActionController\/Responder.html#M001808","()","",2],["responses","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M001483","()","Returns the list of requests and their mocked responses. Look up a response for a request using <tt>responses.assoc(request)<\/tt>.",2],["retrieve_connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M000894","()","",2],["retrieve_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M001005","(klass)","",2],["reverse","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003373","()","Reverses all characters in the string. Example: 'Caf\u00e9'.mb_chars.reverse.to_s # => '\u00e9faC' ",2],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003457","(other_hash)","Performs the opposite of merge, with the keys and values from the first hash taking precedence over the",2],["reverse_merge","Hash","classes\/Hash.html#M003001","(other_hash)","Merges the caller into +other_hash+. For example, options = options.reverse_merge(:size => 25, :velocity",2],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003458","(other_hash)","",2],["reverse_merge!","Hash","classes\/Hash.html#M003002","(other_hash)","Destructive +reverse_merge+. ",2],["reverse_update","Hash","classes\/Hash.html#M003003","(other_hash)","Alias for #reverse_merge!",2],["revert","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001369","()","",2],["reverting?","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001370","()","",2],["rfc2822","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003267","()","",2],["rfc822","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003268","()","Alias for #rfc2822",2],["rindex","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003361","(needle, offset=nil)","Returns the position _needle_ in the string, counting in codepoints, searching backward from _offset_",2],["rjust","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003367","(integer, padstr=' ')","Works just like <tt>String#rjust<\/tt>, only integer specifies characters instead of bytes. Example: \"\u00be",2],["rollback_active_record_state!","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M000576","()","Reset id and @new_record if the transaction rolls back. ",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001029","()","Rolls back the transaction (and turns on auto-committing). Must be done if the transaction block raises",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001110","()","Aborts a transaction. ",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000737","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001217","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001113","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000793","()","",2],["rollback_transaction_records","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001042","(rollback)","Send a rollback message to all records after they have been rolled back. If rollback is false, only rollback",2],["root","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M001969","(options = {})","You can specify what Rails should route \"\/\" to with the root method: root :to => 'pages#main' For options,",2],["root","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002014","(options={})","",2],["root","Rails","classes\/Rails.html#M000020","()","",2],["root=","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M000375","(value)","",2],["round","Float","classes\/Float.html#M002828","(precision = nil)","Rounds the float with the specified precision. x = 1.337 x.round    # => 1 x.round(1) # => 1.3 x.round(2)",2],["route","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000158","(routing_code)","Make an entry in Rails routing file config\/routes.rb === Example route \"root :to => 'welcome'\" ",2],["route_key","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M004141","(record_or_class)","Returns string to use while generating route names. It differs for namespaced models regarding whether",2],["route_url","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000117","()","",2],["routes","Rails::Engine","classes\/Rails\/Engine.html#M000504","()","",2],["routes?","Rails::Engine","classes\/Rails\/Engine.html#M000510","()","",2],["routes_url_helpers","Rails::Engine","classes\/Rails\/Engine.html#M000499","()","",2],["rstrip","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003363","()","Strips entire range of Unicode whitespace from the right of the string. ",2],["ruby_debugger_gemfile_entry","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000253","()","",2],["run","ActiveSupport::Testing::Isolation::MiniTest","classes\/ActiveSupport\/Testing\/Isolation\/MiniTest.html#M003791","(runner)","",2],["run","ActiveSupport::Testing::Isolation::TestUnit","classes\/ActiveSupport\/Testing\/Isolation\/TestUnit.html#M003790","(result)","",2],["run","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003812","()","",2],["run","ActiveSupport::Testing::Performance::ForClassicTestUnit","classes\/ActiveSupport\/Testing\/Performance\/ForClassicTestUnit.html#M003800","(result)","",2],["run","ActiveSupport::Testing::Performance::ForMiniTest","classes\/ActiveSupport\/Testing\/Performance\/ForMiniTest.html#M003798","(runner)","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003768","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003809","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003743","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003755","()","",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ForClassicTestUnit.html#M003729","(result)","This redefinition is unfortunate but test\/unit shows us no alternative. Doubly unfortunate: hax to support",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForMiniTest","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ForMiniTest.html#M003728","(runner)","",2],["run","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M000065","(*args)","",2],["run_bundle","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000258","()","",2],["run_callbacks","ActiveSupport::Callbacks","classes\/ActiveSupport\/Callbacks.html#M003874","(kind, *args, &block)","Runs the callbacks for the given event. Calls the before and around callbacks in the order they were",2],["run_gc","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M003753","()","",2],["run_gc","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M003766","()","",2],["run_gc","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M003741","()","",2],["run_gc","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M003802","()","overridden by each implementation ",2],["run_generator","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000233","(args=self.default_arguments, config={})","Runs the generator configured for this class. The first argument is an array like command line arguments:",2],["run_in_isolation","ActiveSupport::Testing::Isolation::Forking","classes\/ActiveSupport\/Testing\/Isolation\/Forking.html#M003792","(&blk)","",2],["run_in_isolation","ActiveSupport::Testing::Isolation::Subprocess","classes\/ActiveSupport\/Testing\/Isolation\/Subprocess.html#M003793","(&blk)","Crazy H4X to get this working in windows \/ jruby with no forking. ",2],["run_in_transaction?","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures.html#M000632","()","",2],["run_initializers","Rails::Initializable","classes\/Rails\/Initializable.html#M000069","(group=:default, *args)","",2],["run_profile","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M003804","(metric)","",2],["run_test","ActiveSupport::Testing::Performance::ForClassicTestUnit","classes\/ActiveSupport\/Testing\/Performance\/ForClassicTestUnit.html#M003801","(metric, mode)","",2],["run_test","ActiveSupport::Testing::Performance::ForMiniTest","classes\/ActiveSupport\/Testing\/Performance\/ForMiniTest.html#M003799","(metric, mode)","",2],["run_validations!","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M003970","()","",2],["run_validations!","ActiveModel::Validations::Callbacks","classes\/ActiveModel\/Validations\/Callbacks.html#M004044","()","Overwrite run validations to include callbacks. ",2],["run_warmup","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M003803","()","",2],["safe_concat","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002682","(string)","",2],["safe_concat","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003071","(value)","",2],["safe_constantize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003332","(camel_cased_word)","Tries to find a constant with the name specified in the argument string: \"Module\".safe_constantize  ",2],["safe_constantize","String","classes\/String.html#M003103","()","+safe_constantize+ tries to find a declared constant with the name specified in the string. It returns",2],["safe_get","ActiveSupport::Dependencies::ClassCache","classes\/ActiveSupport\/Dependencies\/ClassCache.html#M003313","(key)","",2],["safe_join","ActionView::Helpers::OutputSafetyHelper","classes\/ActionView\/Helpers\/OutputSafetyHelper.html#M002701","(array, sep=$,)","This method returns a html safe string similar to what <tt>Array#join<\/tt> would return. All items in",2],["sample","Array","classes\/Array.html#M003017","(n=nil)","Backport of Array#sample based on Marc-Andre Lafortune's https:\/\/github.com\/marcandre\/backports\/ Returns",2],["sanitize","ActionView::Helpers::SanitizeHelper","classes\/ActionView\/Helpers\/SanitizeHelper.html#M002609","(html, options = {})","This +sanitize+ helper will html encode all tags and strip all attributes that aren't specifically allowed.",2],["sanitize","ActiveModel::MassAssignmentSecurity::Sanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html#M004097","(attributes, authorizer)","Returns all attributes not denied by the authorizer. ",2],["sanitize_conditions","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000661","(condition, table_name = self.table_name)","Alias for #sanitize_sql",2],["sanitize_css","ActionView::Helpers::SanitizeHelper","classes\/ActionView\/Helpers\/SanitizeHelper.html#M002610","(style)","Sanitizes a block of CSS code. Used by +sanitize+ when it comes across a style attribute. ",2],["sanitize_dom_id","ActionController::RecordIdentifier","classes\/ActionController\/RecordIdentifier.html#M001760","(candidate_id)","Replaces characters that are invalid in HTML DOM ids with valid ones. ",2],["sanitize_for_mass_assignment","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity.html#M004069","(attributes, role = nil)","",2],["sanitize_limit","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001036","(limit)","Sanitizes the given LIMIT parameter in order to prevent SQL injection. The +limit+ may be anything that",2],["sanitize_sql","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000652","(condition, table_name = self.table_name)","Alias for #sanitize_sql_for_conditions",2],["sanitize_sql_array","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000660","(ary)","Accepts an array of conditions. The array has each value sanitized and interpolated into the SQL statement.",2],["sanitize_sql_for_assignment","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000653","(assignments)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_for_conditions","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000651","(condition, table_name = self.table_name)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_hash","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000658","(attrs, default_table_name = self.table_name)","Alias for #sanitize_sql_hash_for_conditions",2],["sanitize_sql_hash_for_assignment","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000659","(attrs)","Sanitizes a hash of attribute\/value pairs into SQL conditions for a SET clause. { :status => nil, :group_id",2],["sanitize_sql_hash_for_conditions","ActiveRecord::Sanitization::ClassMethods","classes\/ActiveRecord\/Sanitization\/ClassMethods.html#M000657","(attrs, default_table_name = self.table_name)","Sanitizes a hash of attribute\/value pairs into SQL conditions for a WHERE clause. { :name => \"foo'bar\",",2],["save","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000643","(*)","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save","ActiveRecord::Validations","classes\/ActiveRecord\/Validations.html#M000684","(options={})","The validation process on save can be skipped by passing <tt>:validate => false<\/tt>. The regular Base#save",2],["save","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001586","()","Saves (+POST+) or \\updates (+PUT+) a resource.  Delegates to +create+ if the object is \\new, +update+",2],["save","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M000140","()","POST create ",2],["save!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000644","(*)","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save!","ActiveRecord::Validations","classes\/ActiveRecord\/Validations.html#M000685","(options={})","Attempts to save the record just like Base#save but will raise a +RecordInvalid+ exception instead of",2],["save!","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001587","()","Saves the resource. If the resource is new, it is created via +POST+, otherwise the existing resource",2],["save_method","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M001444","()","",2],["save_record?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M001443","()","",2],["save_with_validation","ActiveResource::Validations","classes\/ActiveResource\/Validations.html#M001476","(options={})","Validate a resource and save (POST) it to the remote web service. If any local validations fail - the",2],["say","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001376","(message, subitem=false)","",2],["say_with_time","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001377","(message)","",2],["schema","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001524","(&block)","Creates a schema for this resource - setting the attributes that are known prior to fetching an instance",2],["schema","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001573","()","If no schema has been defined for the class (see <tt>ActiveResource::schema=<\/tt>), the default automatic",2],["schema=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001525","(the_schema)","Alternative, direct way to specify a <tt>schema<\/tt> for this Resource. <tt>schema<\/tt> is more flexible,",2],["schema_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001120","(name)","Returns true if schema exists. ",2],["schema_format","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001402","","Specifies the format to use when dumping the database schema with Rails' Rakefile. If :sql, the schema",2],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001127","()","Returns the active schema search path. ",2],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001126","(schema_csv)","Sets the schema search path to a string of comma-separated schema names. Names beginning with $ have",2],["scope","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M001982","(*args)","Scopes a set of routes to the given default options. Take the following route definition as an example:",2],["scope","ActiveRecord::Scoping::Named::ClassMethods","classes\/ActiveRecord\/Scoping\/Named\/ClassMethods.html#M001290","(name, scope_options = {})","Adds a class method for retrieving and querying objects. A \\scope represents a narrowing of a database",2],["scoped","ActiveRecord::Scoping::Named::ClassMethods","classes\/ActiveRecord\/Scoping\/Named\/ClassMethods.html#M001287","(options = nil)","Returns an anonymous \\scope. posts = Post.scoped posts.size # Fires \"select count(*) from  posts\" and",2],["script","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000328","()","",2],["script","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000283","(force = false)","",2],["search_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002633","(object_name, method, options = {})","Returns an input of type \"search\" for accessing a specified attribute (identified by +method+) on an",2],["search_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002559","(name, value = nil, options = {})","Creates a text field of type \"search\". ==== Options * Accepts the same options as text_field_tag. ",2],["second","Array","classes\/Array.html#M003029","()","Equal to <tt>self[1]<\/tt>. ",2],["seconds_since_midnight","DateTime","classes\/DateTime.html#M003209","()","Seconds since midnight: DateTime.now.seconds_since_midnight ",2],["seconds_since_midnight","Time","classes\/Time.html#M002876","()","Seconds since midnight: Time.now.seconds_since_midnight ",2],["seconds_to_utc_offset","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003492","(seconds, colon = true)","Assumes self represents an offset from UTC in seconds (as returned from Time#utc_offset) and turns this",2],["secret_token","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001887","(request)","",2],["select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002603","(method, choices, options = {}, html_options = {})","",2],["select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002589","(object, method, choices, options = {}, html_options = {})","Create a select tag and a series of contained option tags for the provided object and method. The option",2],["select","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001038","(sql, name = nil, binds = [])","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001182","(sql, name = nil, binds = [])","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select_all","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001010","(arel, name = nil, binds = [])","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select_all","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000884","(arel, name = nil, binds = [])","",2],["select_date","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002781","(date = Date.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, and day) pre-selected with the +date+. It's possible",2],["select_datetime","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002780","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, day, hour, minute, and second) pre-selected with",2],["select_day","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002786","(date, options = {}, html_options = {})","Returns a select tag with options for each of the days 1 through 31 with the current day selected. The",2],["select_hour","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002785","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the hours 0 through 23 with the current hour selected.",2],["select_minute","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002784","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the minutes 0 through 59 with the current minute selected.",2],["select_month","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002787","(date, options = {}, html_options = {})","Returns a select tag with options for each of the months January through December with the current month",2],["select_one","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001011","(arel, name = nil)","Returns a record hash with the column names as keys and column values as values. ",2],["select_rows","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001014","(sql, name = nil)","Returns an array of arrays containing the field values. Order is the same as that returned by +columns+.",2],["select_rows","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001178","(sql, name = nil)","Returns an array of arrays containing the field values. Order is the same as that returned by +columns+.",2],["select_rows","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000861","(sql, name = nil)","DATABASE STATEMENTS ====================================== ",2],["select_rows","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001097","(sql, name = nil)","Executes a SELECT query and returns an array of rows. Each row is an array of field values. ",2],["select_rows","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000791","(sql, name = nil)","",2],["select_second","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002783","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the seconds 0 through 59 with the current second selected.",2],["select_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002546","(name, option_tags = nil, options = {})","Creates a dropdown selection box, or if the <tt>:multiple<\/tt> option is set to true, a multiple choice",2],["select_time","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002782","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for hour and minute). You can set <tt>:time_separator<\/tt> key",2],["select_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001012","(arel, name = nil)","Returns a single value from a record ",2],["select_values","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001013","(arel, name = nil)","Returns an array of the values of the first column in a select: select_values(\"SELECT id FROM companies",2],["select_year","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002788","(date, options = {}, html_options = {})","Returns a select tag with options for each of the five years on each side of the current, which is selected.",2],["send_action","ActionController::ImplicitRender","classes\/ActionController\/ImplicitRender.html#M001860","(method, *args)","",2],["send_data","ActionController::DataStreaming","classes\/ActionController\/DataStreaming.html#M001841","(data, options = {})","Sends the given binary data to the browser. This method is similar to <tt>render :text => data<\/tt>,",2],["send_data","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M001828","(data, options = {})","",2],["send_data","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M001909","(event)","",2],["send_file","ActionController::DataStreaming","classes\/ActionController\/DataStreaming.html#M001840","(path, options = {})","Sends the file. This uses a server-appropriate method (such as X-Sendfile) via the Rack::Sendfile middleware.",2],["send_file","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M001827","(path, options={})","",2],["send_file","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M001907","(event)","",2],["sequence_name","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001448","()","",2],["sequence_name=","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001451","(value)","Sets the name of the sequence to use when generating ids to the given value, or (if the value is nil",2],["serial_sequence","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001131","(table, column)","",2],["serializable_hash","ActiveModel::Serialization","classes\/ActiveModel\/Serialization.html#M003971","(options = nil)","",2],["serializable_hash","ActiveRecord::Serialization","classes\/ActiveRecord\/Serialization.html#M001283","(options = nil)","",2],["serialize","ActiveRecord::AttributeMethods::Serialization::Attribute","classes\/ActiveRecord\/AttributeMethods\/Serialization\/Attribute.html#M001343","()","",2],["serialize","ActiveRecord::AttributeMethods::Serialization::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Serialization\/ClassMethods.html#M001344","(attr_name, class_name = Object)","If you have an attribute that needs to be saved to the database as an object, and retrieved as the same",2],["serialized_value","ActiveRecord::AttributeMethods::Serialization::Attribute","classes\/ActiveRecord\/AttributeMethods\/Serialization\/Attribute.html#M001341","()","",2],["server_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002084","()","",2],["server_software","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002109","()","Returns the lowercase name of the HTTP server software. ",2],["session","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M002419","()","",2],["session_auth=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001093","(user)","Set the authorized user for this session ",2],["session_options=","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002116","(options)","",2],["session_store","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000526","(*args)","",2],["set","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003980","(key, value)","Set messages for +key+ to +value+ ",2],["set_callback","ActiveSupport::ClassMethods","classes\/ActiveSupport\/ClassMethods.html#M003885","(name, *filter_list, &block)","Install a callback for the given event. set_callback :save, :before, :before_meth set_callback :save,",2],["set_content_type","ActionMailer::Base","classes\/ActionMailer\/Base.html#M002817","(m, user_content_type, class_default)","",2],["set_cookie","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002165","(key, value)","",2],["set_default_accessors!","Rails::Generators::AppBase","classes\/Rails\/Generators\/AppBase.html#M000246","()","",2],["set_enablement","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004086","(enabled, observers)","",2],["set_environment","Rails::Server","classes\/Rails\/Server.html#M000403","()","",2],["set_fixture_class","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000625","(class_names = {})","",2],["set_logger","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html#M003724","(logger)","Overwrite if you use another logger in your log subscriber: def logger ActiveRecord::Base.logger = @logger",2],["set_session","ActionDispatch::Session::CacheStore","classes\/ActionDispatch\/Session\/CacheStore.html#M002336","(env, sid, session, options)","Set a session in the cache. ",2],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001079","()","Enable standard-conforming strings if available. ",2],["setup","ActiveModel::Validations::AcceptanceValidator","classes\/ActiveModel\/Validations\/AcceptanceValidator.html#M004040","(klass)","",2],["setup","ActiveModel::Validations::ConfirmationValidator","classes\/ActiveModel\/Validations\/ConfirmationValidator.html#M004028","(klass)","",2],["setup","ActiveRecord::Validations::UniquenessValidator","classes\/ActiveRecord\/Validations\/UniquenessValidator.html#M001388","(klass)","Unfortunately, we have to tie Uniqueness validators to a class. ",2],["setup","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html#M003717","()","",2],["setup","ActiveSupport::Testing::SetupAndTeardown::ClassMethods","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ClassMethods.html#M003726","(*args, &block)","",2],["setup_controller_request_and_response","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001962","()","",2],["setup_fixture_accessors","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000629","(fixture_names = nil)","",2],["setup_fixtures","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures.html#M000633","()","",2],["setup_subscriptions","ActionController::TemplateAssertions","classes\/ActionController\/TemplateAssertions.html#M001938","()","",2],["setup_with_controller","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior.html#M002526","()","",2],["shallow","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002009","()","",2],["shallow?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002010","()","",2],["shift","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003696","()","",2],["show_detailed_exceptions?","ActionController::Rescue","classes\/ActionController\/Rescue.html#M001864","()","Override this method if you want to customize when detailed exceptions must be shown. This method is",2],["show_variable","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001241","(name)","SHOW VARIABLES LIKE 'name' ",2],["silence","ActiveSupport::Benchmarkable","classes\/ActiveSupport\/Benchmarkable.html#M003442","()","Silence the logger during the execution of the block. ",2],["silence","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003586","(temporary_level = ERROR)","Silences the logger for the duration of the block. ",2],["silence","ActiveSupport::Deprecation","classes\/ActiveSupport\/Deprecation.html#M003914","()","Silence deprecation warnings within the block. ",2],["silence","ActiveSupport::TaggedLogging","classes\/ActiveSupport\/TaggedLogging.html#M003417","(temporary_level = Logger::ERROR, &block)","",2],["silence","Kernel","classes\/Kernel.html#M002849","(stream)","Alias for #capture",2],["silence!","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003840","()","Silence the logger. ",2],["silence_stream","Kernel","classes\/Kernel.html#M002846","(stream)","Silences any stream for the duration of the block. silence_stream(STDOUT) do puts 'This will never be",2],["silence_warnings","Kernel","classes\/Kernel.html#M002842","()","Sets $VERBOSE to nil for the duration of the block and back to its original value afterwards. silence_warnings",2],["silencer","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M003585","","Set to false to disable the silencer ",2],["simple_format","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002688","(text, html_options={}, options={})","Returns +text+ transformed into HTML using simple formatting rules. Two or more consecutive newlines(<tt>\\n\\n<\/tt>)",2],["since","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M003896","(time = ::Time.current)","Calculates a new Time or Date that is as far in the future as this Duration represents. ",2],["since","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003281","(other)","",2],["since","DateTime","classes\/DateTime.html#M003213","(seconds)","Returns a new DateTime representing the time a number of seconds since the instance time Do not use this",2],["since","Time","classes\/Time.html#M002880","(seconds)","Returns a new Time representing the time a number of seconds since the instance time ",2],["singleton_class","Kernel","classes\/Kernel.html#M002851","()","Returns the object's singleton class. ",2],["singular","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M004138","(record_or_class)","Returns the singular class name of a record or class. Examples: ActiveModel::Naming.singular(post)  ",2],["singular","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003340","(rule, replacement)","Specifies a new singularization rule and its replacement. The rule can either be a string or a regular",2],["singular_route_key","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M004140","(record_or_class)","Returns string to use while generating route names. It differs for namespaced models regarding whether",2],["singular_table_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000114","()","",2],["singularize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003319","(word)","The reverse of +pluralize+, returns the singular form of a word in a string. Examples: \"posts\".singularize",2],["singularize","String","classes\/String.html#M003101","()","The reverse of +pluralize+, returns the singular form of a word in a string. \"posts\".singularize    ",2],["site","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001527","()","Gets the URI of the REST resources to map for this class.  The site variable is required for Active Resource's",2],["site=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001528","(site)","Sets the URI of the REST resources to map for this class to the value in the +site+ argument. The site",2],["site=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001619","(site)","Set URI for remote service. ",2],["size","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002274","()","",2],["size","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003985","()","Returns the number of error messages. p.errors.add(:name, \"can't be blank\") p.errors.size # => 1 p.errors.add(:name,",2],["size","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000603","()","",2],["size","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003872","()","Returns the size of the cached value. This could be less than value.size if the data is compressed. ",2],["size","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003362","()","Returns the number of codepoints in the string ",2],["skip_after_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001729","","Skip an after filter. See _insert_callbacks for parameter details. ",2],["skip_around_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001733","","Skip an around filter. See _insert_callbacks for parameter details. ",2],["skip_before_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001725","","Skip a before filter. See _insert_callbacks for parameter details. ",2],["skip_callback","ActiveSupport::ClassMethods","classes\/ActiveSupport\/ClassMethods.html#M003886","(name, *filter_list, &block)","Skip a previously set callback. Like +set_callback+, <tt>:if<\/tt> or <tt>:unless<\/tt> options may be",2],["skip_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M001721","(*names, &blk)","Skip before, after, and around filters matching any of the names ==== Parameters * <tt>names<\/tt> - A",2],["slice","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003374","(*args)","Implements Unicode-aware slice with codepoints. Slicing on one point returns the codepoints for that",2],["slice","Hash","classes\/Hash.html#M002991","(*keys)","Slice a hash to include only the given keys. This is useful for limiting an options hash to valid keys",2],["slice!","Hash","classes\/Hash.html#M002992","(*keys)","Replaces the hash with only the given keys. Returns a hash contained the removed key\/value pairs {:a",2],["source_root","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000173","(path=nil)","Returns the source root for this generator using default_source_root as default. ",2],["split","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003371","(*args)","Works just like <tt>String#split<\/tt>, with the exception that the items in the resulting list are Chars",2],["split","Array","classes\/Array.html#M003021","(value = nil)","Divides the array into one or more subarrays based on a delimiting +value+ or the result of an optional",2],["split_args","Rails::Commands::Plugin","classes\/Rails\/Commands\/Plugin.html#M000443","(args)","",2],["sql_for_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001044","(sql, pk, id_value, sequence_name, binds)","",2],["sql_for_insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001106","(sql, pk, id_value, sequence_name, binds)","",2],["sql_query_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000916","()","Returns the maximum length of an SQL query. ",2],["sqlite_version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000820","()","",2],["squish","String","classes\/String.html#M003053","()","Returns the string, first removing all whitespace on both ends of the string, and then changing remaining",2],["squish!","String","classes\/String.html#M003054","()","Performs a destructive squish. See String#squish. ",2],["ssl_options","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001542","()","Returns the SSL options hash. ",2],["ssl_options=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001541","(opts={})","Options that will get applied to an SSL connection. * <tt>:key<\/tt> - An OpenSSL::PKey::RSA or OpenSSL::PKey::DSA",2],["ssl_options=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001625","(opts={})","Hash of options applied to Net::HTTP instance when +site+ protocol is 'https'. ",2],["stale?","ActionController::ConditionalGet","classes\/ActionController\/ConditionalGet.html#M001781","(record_or_options, additional_options = {})","Sets the etag and\/or last_modified on the response and checks it against the client request. If the request",2],["stale_session_check!","ActionDispatch::Session::StaleSessionCheck","classes\/ActionDispatch\/Session\/StaleSessionCheck.html#M002332","()","",2],["standard_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002080","()","Returns the standard \\port number for this request's protocol. ",2],["standard_port?","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002081","()","Returns whether this request is using the standard port ",2],["start","Rails::Console","classes\/Rails\/Console.html#M000468","(app)","",2],["start","Rails::Console","classes\/Rails\/Console.html#M000470","()","",2],["start","Rails::DBConsole","classes\/Rails\/DBConsole.html#M000463","(app)","",2],["start","Rails::DBConsole","classes\/Rails\/DBConsole.html#M000465","()","",2],["start","Rails::Server","classes\/Rails\/Server.html#M000404","()","",2],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M003920","()","",2],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M003923","(name, attrs = [])","",2],["start_processing","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M001904","(event)","",2],["start_transaction","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004081","()","",2],["stats","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M003566","()","Get the statistics from the memcached servers. ",2],["status","ActionController::Metal","classes\/ActionController\/Metal.html#M001746","()","",2],["status=","ActionController::Metal","classes\/ActionController\/Metal.html#M001747","(status)","",2],["status=","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002155","(status)","",2],["status_code","ActionDispatch::ExceptionWrapper","classes\/ActionDispatch\/ExceptionWrapper.html#M002258","()","",2],["status_message","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002159","()","Alias for #message",2],["sti_name","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001266","()","",2],["store","ActiveRecord::Store::ClassMethods","classes\/ActiveRecord\/Store\/ClassMethods.html#M000586","(store_attribute, options = {})","",2],["store","ActiveSupport::Dependencies::ClassCache","classes\/ActiveSupport\/Dependencies\/ClassCache.html#M003314","(klass)","",2],["store_accessor","ActiveRecord::Store::ClassMethods","classes\/ActiveRecord\/Store\/ClassMethods.html#M000587","(store_attribute, *keys)","",2],["store_application_definition!","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000306","()","Alias for #application_definition",2],["strftime","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003271","(format)","Replaces <tt>%Z<\/tt> and <tt>%z<\/tt> directives with +zone+ and +formatted_offset+, respectively, before",2],["strict_encode64","Base64","classes\/Base64.html#M003437","(value)","Included in Ruby 1.9 ",2],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003461","()","",2],["stringify_keys","Hash","classes\/Hash.html#M002994","()","Return a new hash with all keys converted to strings. { :name => 'Rob', :years => '28' }.stringify_keys",2],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003460","()","",2],["stringify_keys!","Hash","classes\/Hash.html#M002995","()","Destructively convert all keys to strings. Same as +stringify_keys+, but modifies +self+. ",2],["strip","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003365","()","Strips entire range of Unicode whitespace from the right and left of the string. ",2],["strip_heredoc","String","classes\/String.html#M003099","()","Strips indentation in heredocs. For example in if options[:usage] puts <<-USAGE.strip_heredoc This command",2],["strip_links","ActionView::Helpers::SanitizeHelper","classes\/ActionView\/Helpers\/SanitizeHelper.html#M002612","(html)","Strips all link tags from +text+ leaving just the link text. ==== Examples strip_links('<a href=\"http:\/\/www.rubyonrails.org\">Ruby",2],["strip_tags","ActionView::Helpers::SanitizeHelper","classes\/ActionView\/Helpers\/SanitizeHelper.html#M002611","(html)","Strips all HTML tags from the +html+, including comments. This uses the html-scanner tokenizer and so",2],["structure_dump","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000930","()","Returns a string of <tt>CREATE TABLE<\/tt> SQL statement(s) for recreating the entire structure of the",2],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetTagHelpers.html#M002733","(*sources)","Returns a stylesheet link tag for the sources specified as arguments. If you don't specify an extension,",2],["stylesheet_path","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","classes\/ActionView\/Helpers\/AssetTagHelper\/StylesheetTagHelpers.html#M002731","(source)","Computes the path to a stylesheet asset in the public stylesheets directory. If the +source+ filename",2],["stylesheets","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000281","()","",2],["subclasses","Rails::Generators","classes\/Rails\/Generators.html#M000540","()","Track all generators subclasses. ",2],["subclasses","Rails::Railtie","classes\/Rails\/Railtie.html#M000382","()","",2],["subdomain","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002087","(tld_length = @@tld_length)","Returns all the \\subdomains as a string, so <tt>\"dev.www\"<\/tt> would be returned for \"dev.www.rubyonrails.org\".",2],["subdomains","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002086","(tld_length = @@tld_length)","Returns all the \\subdomains as an array, so <tt>[\"dev\", \"www\"]<\/tt> would be returned for \"dev.www.rubyonrails.org\".",2],["submit","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002653","(value=nil, options={})","Add the submit button for the given form. When no value is given, it checks if the object is a new resource",2],["submit_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002555","(value = \"Save changes\", options = {})","Creates a submit button with the text <tt>value<\/tt> as the caption. ==== Options * <tt>:confirm => 'question?'<\/tt>",2],["subscribe","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M003832","(*args, &block)","",2],["subscribe","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M003424","(pattern = nil, block = Proc.new)","",2],["subscribed","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M003833","(callback, *args, &block)","",2],["substitute_at","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000723","(column, index)","Returns a bind substitution value given a +column+ and list of current +binds+ ",2],["substitute_at","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001102","(column, index)","",2],["success?","ActiveResource::Response","classes\/ActiveResource\/Response.html#M001494","()","Returns true if code is 2xx, false otherwise. ",2],["sum","Enumerable","classes\/Enumerable.html#M003180","(identity = 0, &block)","Calculates a sum from the elements. Examples: payments.sum { |p| p.price * p.tax_rate } payments.sum(&:price)",2],["sunday","Time","classes\/Time.html#M002897","()","Returns a new +Date+\/+DateTime+ representing the end of this week. Week is assumed to start on a Monday.",2],["supports_add_column?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000769","()","Returns true if SQLite version is '3.1.6' or greater, false otherwise. ",2],["supports_bulk_alter?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000717","()","",2],["supports_count_distinct?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000715","()","Does this adapter support using DISTINCT within COUNT? This is +true+ for all adapters except sqlite.",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000716","()","Does this adapter support DDL rollbacks in transactions? That is, would CREATE TABLE or ALTER TABLE get",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001081","()","",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000762","()","Returns true if SQLite version is '2.0.0' or greater, false otherwise. ",2],["supports_explain?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000721","()","Does this adapter support explain? As of this writing sqlite3, mysql2, and postgresql are the only ones",2],["supports_explain?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","classes\/ActiveRecord\/ConnectionAdapters\/Mysql2Adapter.html#M001168","()","",2],["supports_explain?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001083","()","Returns true. ",2],["supports_explain?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000767","()","Returns true. ",2],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000720","()","Does this adapter support index sort order? ",2],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001199","()","Technically MySQL allows to create indexes with the sort order syntax but at the moment (5.5) it doesn't",2],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001057","()","",2],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000774","()","",2],["supports_insert_with_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001080","()","",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000713","()","Does this adapter support migrations? Backend specific, as the abstract adapter always returns +false+.",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001195","()","Returns true, since this connection adapter supports migrations. ",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001077","()","Returns true, since this connection adapter supports migrations. ",2],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000714","()","Can this adapter determine the primary key for tables not attached to an Active Record class, such as",2],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001196","()","",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000718","()","Does this adapter support savepoints? PostgreSQL and MySQL do, SQLite < 3.6.8 does not. ",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001197","()","Returns true, since this connection adapter supports savepoints. ",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001082","()","Returns true, since this connection adapter supports savepoints. ",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000763","()","Returns true if SQLite version is '3.6.8' or greater, false otherwise. ",2],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001024","()","Returns +true+ when the connection adapter supports prepared statement caching, otherwise returns +false+",2],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000851","()","Returns true, since this connection adapter supports prepared statement caching. ",2],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001056","()","Returns +true+, since this connection adapter supports prepared statement caching. ",2],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000764","()","Returns true, since this connection adapter supports prepared statement caching. ",2],["supports_streaming?","ActionView::Template","classes\/ActionView\/Template.html#M002431","()","Returns if the underlying handler supports streaming. If so, a streaming buffer *may* be passed when",2],["supports_streaming?","ActionView::Template::Handlers::ERB","classes\/ActionView\/Template\/Handlers\/ERB.html#M002479","()","",2],["suppress","Kernel","classes\/Kernel.html#M002847","(*exception_classes)","Blocks and ignores any exception passed as argument if raised within the block. suppress(ZeroDivisionError)",2],["suppress_messages","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001378","()","",2],["svn_url?","Plugin","classes\/Plugin.html#M000423","()","",2],["swap","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002281","(target, *args, &block)","",2],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003462","()","",2],["symbolize_keys","Hash","classes\/Hash.html#M002996","()","Return a new hash with all keys converted to symbols, as long as they respond to +to_sym+. { 'name' =>",2],["symbolize_keys!","Hash","classes\/Hash.html#M002997","()","Destructively convert all keys to symbols, as long as they respond to +to_sym+. Same as +symbolize_keys+,",2],["symbolized_base_class","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001262","()","",2],["symbolized_path_parameters","ActionDispatch::Http::Parameters","classes\/ActionDispatch\/Http\/Parameters.html#M002132","()","The same as <tt>path_parameters<\/tt> with explicitly symbolized keys. ",2],["symbolized_sti_name","ActiveRecord::Inheritance::ClassMethods","classes\/ActiveRecord\/Inheritance\/ClassMethods.html#M001263","()","",2],["symbols","Mime::Mimes","classes\/Mime\/Mimes.html#M002188","()","",2],["sync_keys!","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003702","()","",2],["synchronize","Module","classes\/Module.html#M002951","(*methods)","Synchronize access around a method, delegating synchronization to a particular mutex. A mutex (either",2],["t","AbstractController::Translation","classes\/AbstractController\/Translation.html#M001684","(*args)","Alias for #translate",2],["t","ActionView::Helpers::TranslationHelper","classes\/ActionView\/Helpers\/TranslationHelper.html#M002769","(key, options = {})","Alias for #translate",2],["table_alias_for","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000899","(table_name)","Truncates a table alias according to the limits of the current adapter. ",2],["table_alias_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000908","()","Returns the maximum length of a table alias. ",2],["table_alias_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001084","()","Returns the configured supported identifier length supported by PostgreSQL ",2],["table_exists?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001228","(name)","",2],["table_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001119","(name)","Returns true if table exists. If the schema is not specified as part of +name+ then it will only find",2],["table_exists?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000799","(name)","",2],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaCache","classes\/ActiveRecord\/ConnectionAdapters\/SchemaCache.html#M001163","(name)","A cached lookup for table existence. ",2],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000900","(table_name)","Checks to see if the table +table_name+ exists on the database. === Example table_exists?(:developers)",2],["table_exists?","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001453","()","Indicates whether the table associated with this class exists ",2],["table_name","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001429","()","Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy",2],["table_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000111","()","",2],["table_name=","ActiveRecord::ModelSchema::ClassMethods","classes\/ActiveRecord\/ModelSchema\/ClassMethods.html#M001431","(value)","Sets the table name explicitly. Example: class Project < ActiveRecord::Base self.table_name = \"project\"",2],["table_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000910","()","Returns the maximum length of a table name. ",2],["table_rows","ActiveRecord::Fixtures","classes\/ActiveRecord\/Fixtures.html#M000604","()","Return a hash of rows to be inserted. The key is the table, the value is a list of rows to insert to",2],["table_structure","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000814","(table_name)","",2],["tableize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003324","(class_name)","Create the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tableize","String","classes\/String.html#M003113","()","Creates the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001118","(name = nil)","Returns the list of all tables in the schema search path or a specified schema. ",2],["tag","ActionView::Helpers::ActiveModelInstanceTag","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html#M002711","(type, options, *)","",2],["tag","ActionView::Helpers::TagHelper","classes\/ActionView\/Helpers\/TagHelper.html#M002694","(name, options = nil, open = false, escape = true)","Returns an empty HTML tag of type +name+ which by default is XHTML compliant. Set +open+ to true to create",2],["tagged","ActiveSupport::TaggedLogging","classes\/ActiveSupport\/TaggedLogging.html#M003416","(*new_tags)","",2],["tags_text","ActiveSupport::TaggedLogging","classes\/ActiveSupport\/TaggedLogging.html#M003421","()","",2],["tail!","Rails::Rack::LogTailer","classes\/Rails\/Rack\/LogTailer.html#M000486","()","",2],["teardown","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html#M003718","()","",2],["teardown","ActiveSupport::Testing::SetupAndTeardown::ClassMethods","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ClassMethods.html#M003727","(*args, &block)","",2],["teardown_fixtures","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures.html#M000634","()","",2],["teardown_subscriptions","ActionController::TemplateAssertions","classes\/ActionController\/TemplateAssertions.html#M001939","()","",2],["telephone_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002634","(object_name, method, options = {})","Returns a text_field of type \"tel\". telephone_field(\"user\", \"phone\") # => <input id=\"user_phone\" name=\"user[phone]\"",2],["telephone_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002560","(name, value = nil, options = {})","Creates a text field of type \"tel\". ==== Options * Accepts the same options as text_field_tag. ",2],["template","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000094","(source, *args, &block)","",2],["template_exists?","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M002451","(name, prefixes = [], partial = false, keys = [], options = {})","Alias for #exists?",2],["templates_path","Rails::Generators","classes\/Rails\/Generators.html#M000535","()","",2],["test","ActiveSupport::Testing::Declarative","classes\/ActiveSupport\/Testing\/Declarative.html#M003829","(name, &block)","test \"verify something\" do ... end ",2],["test","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000329","()","",2],["test","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000277","()","",2],["test_dummy_clean","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000280","()","",2],["test_dummy_config","Rails::PluginBuilder","classes\/Rails\/PluginBuilder.html#M000279","()","",2],["test_errors_aref","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M004164","()","== Errors Testing Returns an object that has :[] and :full_messages defined on it. See below for more",2],["test_errors_full_messages","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M004165","()","Returns an Array of all error messages for the object. Each message should contain information about",2],["test_model_naming","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M004163","()","== Naming Model.model_name must return a string with some convenience methods: :human, :singular, and",2],["test_persisted?","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M004162","()","== Responds to <tt>persisted?<\/tt> Returns a boolean that specifies whether the object has been persisted",2],["test_to_key","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M004155","()","== Responds to <tt>to_key<\/tt> Returns an Enumerable of all (primary) key attributes or nil if model.persisted?",2],["test_to_param","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M004157","()","== Responds to <tt>to_param<\/tt> Returns a string representing the object's key suitable for use in URLs",2],["test_to_partial_path","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M004160","()","== Responds to <tt>to_partial_path<\/tt> Returns a string giving a relative path.  This is used for looking",2],["test_valid?","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M004161","()","== Responds to <tt>valid?<\/tt> Returns a boolean that specifies whether the object is in a valid or invalid",2],["tests","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M001943","(controller_class)","Sets the controller class name. Useful if the name can't be inferred from test class. Normalizes +controller_class+",2],["tests","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M002520","(helper_class)","",2],["tests","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M000219","(klass)","Sets which generator should be tested: tests AppGenerator ",2],["text_area","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002630","(object_name, method, options = {})","Returns a textarea opening and closing tag set tailored for accessing a specified attribute (identified",2],["text_area_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002552","(name, content = nil, options = {})","Creates a text input area; use a textarea for longer text inputs such as blog posts or descriptions.",2],["text_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002626","(object_name, method, options = {})","Returns an input tag of the \"text\" type tailored for accessing a specified attribute (identified by +method+)",2],["text_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002547","(name, value = nil, options = {})","Creates a standard text field; use these text fields to input smaller chunks of text like a username",2],["third","Array","classes\/Array.html#M003030","()","Equal to <tt>self[2]<\/tt>. ",2],["threadsafe!","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M000521","()","Enable threaded mode. Allows concurrent requests to controller actions and multiple database connections.",2],["tidy_bytes","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003386","(force = false)","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["tidy_bytes","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003399","(string, force = false)","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["time","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003241","()","Returns a Time or DateTime instance that represents the time in +time_zone+. ",2],["time_ago_in_words","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002775","(from_time, include_seconds = false)","Like <tt>distance_of_time_in_words<\/tt>, but where <tt>to_time<\/tt> is fixed to <tt>Time.now<\/tt>. ====",2],["time_select","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002778","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for hour, minute and optionally second) pre-selected for accessing",2],["time_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002797","(method, options = {}, html_options = {})","",2],["time_tag","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M002789","(date_or_time, *args)","Returns an html time tag for the given date or time. ==== Examples time_tag Date.today  # => <time datetime=\"2010-11-04\">November",2],["time_with_block","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003808","()","",2],["time_with_datetime_fallback","Time","classes\/Time.html#M002869","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0, usec=0)","Returns a new Time if requested year can be accommodated by Ruby's Time class (i.e., if year is within",2],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002597","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","Returns a string of option tags for pretty much any time zone in the world. Supply a ActiveSupport::TimeZone",2],["time_zone_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002606","(method, priority_zones = nil, options = {}, html_options = {})","",2],["time_zone_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M002592","(object, method, priority_zones = nil, options = {}, html_options = {})","Return select and option tags for the given object and method, using #time_zone_options_for_select to",2],["timeout","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001540","()","Gets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001539","(timeout)","Sets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001624","(timeout)","Sets the number of seconds after which HTTP requests to the remote service should time out. ",2],["timestamped_migrations","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M001403","","Specify whether or not to use timestamps for migration versions ",2],["timestamps","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M000949","()","Adds timestamps (+created_at+ and +updated_at+) columns to the table. See SchemaStatements#add_timestamps",2],["timestamps","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000938","(*args)","Appends <tt>:datetime<\/tt> columns <tt>:created_at<\/tt> and <tt>:updated_at<\/tt> to the table. ",2],["titlecase","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003381","()","Alias for #titleize",2],["titlecase","String","classes\/String.html#M003107","()","Alias for #titleize",2],["titleize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003323","(word)","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["titleize","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003380","()","Capitalizes the first letter of every word, when possible. Example: \"\u00c9L QUE SE ENTER\u00d3\".mb_chars.titleize",2],["titleize","String","classes\/String.html#M003106","()","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["tmp","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000330","()","",2],["to","Array","classes\/Array.html#M003028","(position)","Returns the beginning of the array up to +position+. %w( a b c d ).to(0)  # => %w( a ) %w( a b c d ).to(2)",2],["to","String","classes\/String.html#M003096","(position)","",2],["to","String","classes\/String.html#M003091","(position)","Returns the beginning of the string up to the +position+ treating the string as an array (where 0 is",2],["to_a","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002171","()","",2],["to_a","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003988","()","Returns an array of error messages, with the attribute name included p.errors.add(:name, \"can't be blank\")",2],["to_a","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003690","()","",2],["to_a","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003285","()","",2],["to_a","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M000057","()","Alias for #expanded",2],["to_app","Rails::Application","classes\/Rails\/Application.html#M000030","()","",2],["to_ary","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002173","()","Alias for #to_a",2],["to_cleanup","ActionDispatch::Reloader","classes\/ActionDispatch\/Reloader.html#M002248","(*args, &block)","Add a cleanup callback. Cleanup callbacks are run after each request is complete (after #close is called",2],["to_d","BigDecimal","classes\/BigDecimal.html#M002987","()","",2],["to_date","DateTime","classes\/DateTime.html#M003197","()","Converts self to a Ruby Date object; time portion is discarded. ",2],["to_date","Mysql::Time","classes\/Mysql\/Time.html#M000839","()","This monkey patch is for test_additional_columns_from_join_table ",2],["to_date","String","classes\/String.html#M003087","()","Converts a string to a Date value. \"1-1-2012\".to_date   #=> Sun, 01 Jan 2012 \"01\/01\/2012\".to_date #=>",2],["to_date","Time","classes\/Time.html#M002864","()","Converts a Time object to a Date, dropping hour, minute, and second precision. my_time = Time.now  #",2],["to_date_select_tag","ActionView::Helpers::DateHelperInstanceTag","classes\/ActionView\/Helpers\/DateHelperInstanceTag.html#M002791","(options = {}, html_options = {})","",2],["to_datetime","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003290","()","",2],["to_datetime","DateTime","classes\/DateTime.html#M003199","()","To be able to keep Times, Dates and DateTimes interchangeable on conversions. ",2],["to_datetime","String","classes\/String.html#M003088","()","Converts a string to a DateTime value. \"1-1-2012\".to_datetime            #=> Sun, 01 Jan 2012 00:00:00",2],["to_datetime","Time","classes\/Time.html#M002866","()","Converts a Time instance to a Ruby DateTime instance, preserving UTC offset. my_time = Time.now    #",2],["to_datetime_select_tag","ActionView::Helpers::DateHelperInstanceTag","classes\/ActionView\/Helpers\/DateHelperInstanceTag.html#M002793","(options = {}, html_options = {})","",2],["to_default_s","Array","classes\/Array.html#M003025","(format = :default)","Alias for #to_s",2],["to_default_s","DateTime","classes\/DateTime.html#M003192","(format = :default)","Alias for #to_s",2],["to_default_s","Time","classes\/Time.html#M002862","(format = :default)","Alias for #to_s",2],["to_f","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003286","()","",2],["to_f","DateTime","classes\/DateTime.html#M003202","()","Converts self to a floating-point number of seconds since the Unix epoch. ",2],["to_format","ActionController::Responder","classes\/ActionController\/Responder.html#M001794","()","All other formats follow the procedure below. First we try to render a template, if the template is not",2],["to_formatted_s","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003270","(format = :default)","Alias for #to_s",2],["to_formatted_s","Array","classes\/Array.html#M003023","(format = :default)","Converts a collection of elements into a formatted string by calling <tt>to_s<\/tt> on all elements and",2],["to_formatted_s","BigDecimal","classes\/BigDecimal.html#M002988","(format = DEFAULT_STRING_FORMAT)","",2],["to_formatted_s","DateTime","classes\/DateTime.html#M003190","(format = :default)","Convert to a formatted string. See Time::DATE_FORMATS for predefined formats. This method is aliased",2],["to_formatted_s","Time","classes\/Time.html#M002860","(format = :default)","Converts to a formatted string. See DATE_FORMATS for builtin formats. This method is aliased to <tt>to_s<\/tt>.",2],["to_hash","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002218","()","",2],["to_hash","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003994","()","",2],["to_hash","ActiveRecord::Result","classes\/ActiveRecord\/Result.html#M001281","()","",2],["to_hash","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003464","()","Convert to a Hash with String keys. ",2],["to_hash","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003689","()","",2],["to_html","ActionController::Responder","classes\/ActionController\/Responder.html#M001792","()","HTML format does not render the resource, it always attempt to render a template. ",2],["to_html","Rails::Info","classes\/Rails\/Info.html#M000092","()","",2],["to_i","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003287","()","",2],["to_i","DateTime","classes\/DateTime.html#M003203","()","Converts self to an integer number of seconds since the Unix epoch. ",2],["to_js","ActionController::Responder","classes\/ActionController\/Responder.html#M001793","()","to_js simply tries to render a template. If no template is found, raises the error. ",2],["to_json","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001597","(options={})","",2],["to_json","Object","classes\/Object.html#M003164","(options = nil)","Dumps object in JSON (JavaScript Object Notation). See www.json.org for more info. ",2],["to_key","ActiveModel::Conversion","classes\/ActiveModel\/Conversion.html#M003956","()","Returns an Enumerable of all key attributes if any is set, regardless if the object is persisted or not.",2],["to_key","ActiveRecord::AttributeMethods::PrimaryKey","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey.html#M001327","()","Returns this record's primary key value wrapped in an Array if one is available ",2],["to_model","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002645","()","",2],["to_model","ActiveModel::Conversion","classes\/ActiveModel\/Conversion.html#M003955","()","If your object is already designed to implement all of the Active Model you can use the default <tt>:to_model<\/tt>",2],["to_options","Hash","classes\/Hash.html#M002998","()","Alias for #symbolize_keys",2],["to_options!","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003463","()","",2],["to_options!","Hash","classes\/Hash.html#M002999","()","Alias for #symbolize_keys!",2],["to_param","ActiveModel::Conversion","classes\/ActiveModel\/Conversion.html#M003957","()","Returns a string representing the object's key suitable for use in URLs, or nil if <tt>persisted?<\/tt>",2],["to_param","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003081","()","",2],["to_param","Array","classes\/Array.html#M003161","()","Calls <tt>to_param<\/tt> on all its elements and joins the result with slashes. This is used by <tt>url_for<\/tt>",2],["to_param","FalseClass","classes\/FalseClass.html#M003160","()","",2],["to_param","Hash","classes\/Hash.html#M003162","(namespace = nil)","Returns a string representation of the receiver suitable for use as a URL query string: {:name => 'David',",2],["to_param","NilClass","classes\/NilClass.html#M003158","()","",2],["to_param","Object","classes\/Object.html#M003157","()","Alias of <tt>to_s<\/tt>. ",2],["to_param","TrueClass","classes\/TrueClass.html#M003159","()","",2],["to_partial_path","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M002644","()","",2],["to_partial_path","ActiveModel::Conversion","classes\/ActiveModel\/Conversion.html#M003958","()","Returns a string identifying the path associated with the object. ActionPack uses this to find a suitable",2],["to_path","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M002161","()","",2],["to_path","ActionView::FileSystemResolver","classes\/ActionView\/FileSystemResolver.html#M002470","()","Alias for #to_s",2],["to_prepare","ActionDispatch::Reloader","classes\/ActionDispatch\/Reloader.html#M002247","(*args, &block)","Add a prepare callback. Prepare callbacks are run before each request, prior to ActionDispatch::Callback's",2],["to_prepare","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000561","(&blk)","Defines generic callbacks to run before #after_initialize. Useful for Rails::Railtie subclasses. ",2],["to_prepare_blocks","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000560","()","Array of callbacks defined by #to_prepare. ",2],["to_query","Array","classes\/Array.html#M003173","(key)","Converts an array into a string suitable for use as a URL query string, using the given +key+ as the",2],["to_query","Hash","classes\/Hash.html#M003174","(namespace = nil)","Alias for #to_param",2],["to_query","Object","classes\/Object.html#M003172","(key)","Converts an object into a string suitable for use as a URL query string, using the given <tt>key<\/tt>",2],["to_s","ActionDispatch::RemoteIp::GetIp","classes\/ActionDispatch\/RemoteIp\/GetIp.html#M002290","()","",2],["to_s","ActionView::FileSystemResolver","classes\/ActionView\/FileSystemResolver.html#M002469","()","",2],["to_s","ActionView::FixtureResolver","classes\/ActionView\/FixtureResolver.html#M002542","()","",2],["to_s","ActiveResource::Request","classes\/ActiveResource\/Request.html#M001491","()","",2],["to_s","ActiveResource::SSLError","classes\/ActiveResource\/SSLError.html#M001502","()","",2],["to_s","ActiveResource::TimeoutError","classes\/ActiveResource\/TimeoutError.html#M001500","()","",2],["to_s","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003080","()","",2],["to_s","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003269","(format = :default)","<tt>:db<\/tt> format outputs time in UTC; all others output time in local. Uses TimeWithZone's +strftime+,",2],["to_s","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003498","()","Returns a textual representation of this time zone. ",2],["to_s","Array","classes\/Array.html#M003024","(format = :default)","Alias for #to_formatted_s",2],["to_s","BigDecimal","classes\/BigDecimal.html#M002989","(format = DEFAULT_STRING_FORMAT)","Alias for #to_formatted_s",2],["to_s","DateTime","classes\/DateTime.html#M003191","(format = :default)","Alias for #to_formatted_s",2],["to_s","Mime::Type","classes\/Mime\/Type.html#M002198","()","",2],["to_s","Plugin","classes\/Plugin.html#M000422","()","",2],["to_s","Rails::Info","classes\/Rails\/Info.html#M000091","()","",2],["to_s","SourceAnnotationExtractor::Annotation","classes\/SourceAnnotationExtractor\/Annotation.html#M000471","(options={})","Returns a representation of the annotation that looks like this: [126] [TODO] This algorithm is simple",2],["to_s","Time","classes\/Time.html#M002861","(format = :default)","Alias for #to_formatted_s",2],["to_sentence","Array","classes\/Array.html#M003022","(options = {})","Converts the array to a comma-separated sentence where the last element is joined by the connector word.",2],["to_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001009","(arel, binds = [])","Converts an arel AST to SQL ",2],["to_sql","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000941","()","Returns a String whose contents are the column definitions concatenated together. This string can then",2],["to_str","Mime::Type","classes\/Mime\/Type.html#M002199","()","",2],["to_sym","Mime::Type","classes\/Mime\/Type.html#M002200","()","",2],["to_tag","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M003648","(key, value, options)","",2],["to_time","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003289","()","A TimeWithZone acts like a Time, so just return +self+. ",2],["to_time","DateTime","classes\/DateTime.html#M003198","()","Attempts to convert self to a Ruby Time object; returns self if out of range of Ruby Time class. If self",2],["to_time","String","classes\/String.html#M003086","(form = :utc)","Form can be either :utc (default) or :local. ",2],["to_time","Time","classes\/Time.html#M002865","()","A method to keep Time, Date and DateTime instances interchangeable on conversions. In this case, it simply",2],["to_time_select_tag","ActionView::Helpers::DateHelperInstanceTag","classes\/ActionView\/Helpers\/DateHelperInstanceTag.html#M002792","(options = {}, html_options = {})","",2],["to_xml","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003992","(options={})","Returns an xml formatted representation of the Errors hash. p.errors.add(:name, \"can't be blank\") p.errors.add(:name,",2],["to_xml","ActiveModel::Serializers::Xml","classes\/ActiveModel\/Serializers\/Xml.html#M004129","(options = {}, &block)","Returns XML representing the model. Configuration can be passed through +options+. Without any +options+,",2],["to_xml","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001598","(options={})","",2],["to_xml","Array","classes\/Array.html#M003026","(options = {})","Returns a string that represents the array in XML by invoking +to_xml+ on each element. Active Record",2],["to_xml","Hash","classes\/Hash.html#M003008","(options = {})","Returns a string containing an XML representation of its receiver: {\"foo\" => 1, \"bar\" => 2}.to_xml #",2],["to_yaml","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003676","(opts = {})","",2],["to_yaml","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M003083","(*args)","",2],["to_yaml","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003265","(options = {})","",2],["to_yaml","BigDecimal","classes\/BigDecimal.html#M002985","(opts = {})","This emits the number without any scientific notation. This is better than self.to_f.to_s since it doesn't",2],["to_yaml_type","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003674","()","",2],["today","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003503","()","Return the current date in this time zone. ",2],["today?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003275","()","",2],["today?","Time","classes\/Time.html#M002874","()","Tells whether the Time object's time is today ",2],["toggle","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000673","(attribute)","Assigns to +attribute+ the boolean opposite of <tt>attribute?<\/tt>. So if the predicate returns +true+",2],["toggle!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000674","(attribute)","Wrapper around +toggle+ that saves the record. This method differs from its non-bang version in that",2],["token_and_options","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token.html#M001895","(request)","Parses the token and options out of the token authorization header. If the header looks like this: Authorization:",2],["tomorrow","Time","classes\/Time.html#M002921","()","Convenience method which returns a new Time representing the time 1 day since the instance time ",2],["touch","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000676","(name = nil)","Saves the record with the updated_at\/on attributes set to the current time. Please note that no validation",2],["transaction","ActiveModel::ObserverArray","classes\/ActiveModel\/ObserverArray.html#M004084","()","",2],["transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001025","(options = {})","Runs the given block in a database transaction, and returns the result of the block. == Nested transactions",2],["transaction","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M000572","(options = {}, &block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction","ActiveRecord::Transactions::ClassMethods","classes\/ActiveRecord\/Transactions\/ClassMethods.html#M000569","(options = {}, &block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction_joinable=","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000735","(joinable)","",2],["translate","AbstractController::Translation","classes\/AbstractController\/Translation.html#M001683","(*args)","",2],["translate","ActionView::Helpers::TranslationHelper","classes\/ActionView\/Helpers\/TranslationHelper.html#M002768","(key, options = {})","Delegates to <tt>I18n#translate<\/tt> but also performs three additional functions. First, it'll pass",2],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000744","(e, message)","",2],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001249","(exception, message)","",2],["translate_exception","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001148","(exception, message)","",2],["translate_exception","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000822","(exception, message)","",2],["transliterate","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003316","(string, replacement = \"?\")","Replaces non-ASCII characters with an ASCII approximation, or if none exists, a replacement character",2],["trigger","ActiveSupport::FileWatcher","classes\/ActiveSupport\/FileWatcher.html#M003716","(files)","",2],["trigger","ActiveSupport::FileWatcher::Backend","classes\/ActiveSupport\/FileWatcher\/Backend.html#M003713","(files)","",2],["truncate","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002683","(text, options = {})","Truncates a given +text+ after a given <tt>:length<\/tt> if +text+ is longer than <tt>:length<\/tt> (defaults",2],["truncate","String","classes\/String.html#M003055","(length, options = {})","Truncates a given +text+ after a given <tt>length<\/tt> if +text+ is longer than <tt>length<\/tt>: \"Once",2],["try","NilClass","classes\/NilClass.html#M003156","(*args)","Calling +try+ on +nil+ always returns +nil+. It becomes specially helpful when navigating through associations",2],["try","Object","classes\/Object.html#M003155","(*a, &b)","Invokes the method identified by the symbol +method+, passing it any arguments and\/or the block specified,",2],["try_to_load_dependency","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000627","(file_name)","",2],["tsort_each_child","Rails::Initializable::Collection","classes\/Rails\/Initializable\/Collection.html#M000067","(initializer, &block)","",2],["tsvector","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/TableDefinition.html#M001054","(*args)","",2],["tv_sec","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003288","()","Alias for #to_i",2],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000855","(value, column)","QUOTING ================================================== ",2],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001088","(value, column)","",2],["type_cast","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000832","(value, column)","Cast a +value+ to a type that the database understands. For example, SQLite does not understand dates,",2],["type_cast_attribute_for_write","ActiveRecord::AttributeMethods::Serialization","classes\/ActiveRecord\/AttributeMethods\/Serialization.html#M001347","(column, value)","",2],["type_to_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractMysqlAdapter.html#M001239","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to MySQL-specific data types. ",2],["type_to_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001144","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to PostgreSQL-specific data types. ",2],["u_unpack","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M003392","(string)","Unpack the string at codepoints boundaries. Raises an EncodingError when the encoding of the string isn't",2],["uncached","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000882","()","Disable the query cache within the block. ",2],["uncached","ActiveRecord::QueryCache::ClassMethods","classes\/ActiveRecord\/QueryCache\/ClassMethods.html#M001276","(&block)","Disable the query cache within the block if Active Record is configured. ",2],["uncountable","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M003342","(*words)","Add uncountable words that shouldn't be attempted inflected. Examples: uncountable \"money\" uncountable",2],["uncountable?","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M004139","(record_or_class)","Identifies whether the class name of a record or class is uncountable. Examples: ActiveModel::Naming.uncountable?(Sheep)",2],["uncountable?","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000112","()","",2],["undefine_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M004112","()","Removes all the previously dynamically defined methods from the class ",2],["undefine_attribute_methods","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M001311","()","",2],["underscore","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M003321","(camel_cased_word)","Makes an underscored, lowercase form from the expression in the string. Changes '::' to '\/' to convert",2],["underscore","String","classes\/String.html#M003108","()","The reverse of +camelize+. Makes an underscored, lowercase form from the expression in the string. +underscore+",2],["unescape","Object","classes\/Object.html#M002831","(str, escaped = \/%[a-fA-F\\d]{2}\/)","",2],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001086","(value)","Unescapes bytea output from a database to the binary string it represents. NOTE: This is NOT an inverse",2],["unescape_path","ActionDispatch::FileHandler","classes\/ActionDispatch\/FileHandler.html#M002313","(path)","",2],["uninstall","Plugin","classes\/Plugin.html#M000427","()","",2],["uniq_by","Array","classes\/Array.html#M003036","()","Returns an unique array based on the criteria given as a +Proc+. [1, 2, 3, 4].uniq_by { |i| i.odd? }",2],["uniq_by!","Array","classes\/Array.html#M003037","()","Same as uniq_by, but modifies self. ",2],["unmemoize_all","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M003708","()","",2],["unregister","Mime::Type","classes\/Mime\/Type.html#M002196","(symbol)","This method is opposite of register method. Usage: Mime::Type.unregister(:mobile) ",2],["unserialize","ActiveRecord::AttributeMethods::Serialization::Attribute","classes\/ActiveRecord\/AttributeMethods\/Serialization\/Attribute.html#M001342","()","",2],["unserialized_value","ActiveRecord::AttributeMethods::Serialization::Attribute","classes\/ActiveRecord\/AttributeMethods\/Serialization\/Attribute.html#M001340","()","",2],["unsubscribe","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M003834","(args)","",2],["unsubscribe","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M003425","(subscriber)","",2],["until","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M003899","(time = ::Time.current)","Alias for #ago",2],["up","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001371","()","",2],["upcase","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003377","()","Convert characters in the string to uppercase. Example: 'Laurent, o\u00f9 sont les tests ?'.mb_chars.upcase.to_s",2],["update","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001021","(arel, name = nil, binds = [])","Executes the update statement and returns the number of rows affected. ",2],["update","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001600","()","Update the resource on the remote service. ",2],["update","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003451","(other_hash)","Updates the instantized hash with values from the second: hash_1 = HashWithIndifferentAccess.new hash_1[:key]",2],["update_attribute","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000648","(name, value)","Updates a single attribute and saves the record. This is especially useful for boolean flags on existing",2],["update_attribute","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001593","(name, value)","Updates a single attribute and then saves the object. Note: Unlike ActiveRecord::Base.update_attribute,",2],["update_attributes","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000655","(attributes, options = {})","Updates the attributes of the model from the passed-in hash and saves the record, all wrapped in a transaction.",2],["update_attributes","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001594","(attributes)","Updates this resource with all the attributes from the passed-in Hash and requests that the record be",2],["update_attributes","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M000141","(params=nil)","PUT update ",2],["update_attributes!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000668","(attributes, options = {})","Updates its receiver just like +update_attributes+ but calls <tt>save!<\/tt> instead of +save+, so an",2],["update_column","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M000654","(name, value)","Updates a single attribute of an object, without calling save. * Validation is skipped. * Callbacks are",2],["update_counters","ActiveRecord::CounterCache","classes\/ActiveRecord\/CounterCache.html#M001396","(id, counters)","A generic \"counter updater\" implementation, intended primarily to be used by increment_counter and decrement_counter,",2],["update_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M001040","(sql, name = nil)","Executes the update statement and returns the number of rows affected. ",2],["update_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M001107","(sql, name = nil)","Executes an UPDATE query and returns the number of affected tuples. ",2],["updated","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M002663","(date_or_time = nil)","Accepts a Date or Time object and inserts it in the proper format. If nil is passed, current time in",2],["updated?","ActiveSupport::FileUpdateChecker","classes\/ActiveSupport\/FileUpdateChecker.html#M003660","()","Check if any of the entries were updated. If so, the updated_at value is cached until the block is executed",2],["url","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002074","()","Returns the complete URL used for this request. ",2],["url_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M002636","(object_name, method, options = {})","Returns a text_field of type \"url\". url_field(\"user\", \"homepage\") # => <input id=\"user_homepage\" size=\"30\"",2],["url_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002562","(name, value = nil, options = {})","Creates a text field of type \"url\". ==== Options * Accepts the same options as text_field_tag. ",2],["url_for","ActionController::Metal","classes\/ActionController\/Metal.html#M001745","(string)","basic url_for that can be overridden for more robust functionality ",2],["url_for","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M002070","(options = {})","",2],["url_for","ActionDispatch::Routing::UrlFor","classes\/ActionDispatch\/Routing\/UrlFor.html#M002046","(options = nil)","Generate a url based on the options provided, default_url_options and the routes defined in routes.rb.",2],["url_for","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002575","(options = {})","Returns the URL for the set of +options+ provided. This takes the same options as +url_for+ in Action",2],["url_options","ActionController::UrlFor","classes\/ActionController\/UrlFor.html#M001814","()","",2],["url_options","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M002381","()","",2],["url_options","ActionDispatch::IntegrationTest","classes\/ActionDispatch\/IntegrationTest.html#M002399","()","",2],["url_options","ActionDispatch::Routing::UrlFor","classes\/ActionDispatch\/Routing\/UrlFor.html#M002045","()","",2],["url_options","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M002574","()","Need to map default url options to controller one. def default_url_options(*args) #:nodoc: controller.send(:default_url_options,",2],["us_zones","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003514","()","A convenience method for returning a collection of TimeZone objects for time zones in the USA. ",2],["usage_path","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M000192","()","",2],["use","ActionController::Metal","classes\/ActionController\/Metal.html#M001753","(*args, &block)","Adds given middleware class and its args to bottom of middleware_stack ",2],["use","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M002232","(key = nil, used = true)","Used internally by the <tt>keep<\/tt> and <tt>discard<\/tt> methods use()               # marks the entire",2],["use","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M002283","(*args, &block)","",2],["use_accept_header","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002061","()","",2],["use_checkout?","RailsEnvironment","classes\/RailsEnvironment.html#M000416","()","",2],["use_externals?","RailsEnvironment","classes\/RailsEnvironment.html#M000415","()","",2],["use_renderer","ActionController::Renderers::ClassMethods","classes\/ActionController\/Renderers\/ClassMethods.html#M001899","(*args)","Alias for #use_renderers",2],["use_renderers","ActionController::Renderers::ClassMethods","classes\/ActionController\/Renderers\/ClassMethods.html#M001898","(*args)","",2],["use_svn?","RailsEnvironment","classes\/RailsEnvironment.html#M000414","()","",2],["use_zone","Time","classes\/Time.html#M002855","(time_zone)","Allows override of <tt>Time.zone<\/tt> locally inside supplied block; resets <tt>Time.zone<\/tt> to existing",2],["usec","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003284","()","",2],["user","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001531","()","Gets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M001532","(user)","Sets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M001621","(user)","Sets the user for remote service. ",2],["user_agent=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M002361","(user_agent)","",2],["user_name_and_password","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M001871","(request)","",2],["uses_transaction","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000630","(*methods)","",2],["uses_transaction?","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000631","(method)","",2],["utc","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003242","()","Returns a Time or DateTime instance that represents the time in UTC. ",2],["utc","DateTime","classes\/DateTime.html#M003225","()","Adjusts DateTime to UTC by adding its offset value; offset is set to 0 Example: DateTime.civil(2005,",2],["utc?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003253","()","",2],["utc?","DateTime","classes\/DateTime.html#M003227","()","Returns true if offset == 0 ",2],["utc_offset","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003255","()","",2],["utc_offset","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003494","()","",2],["utc_offset","DateTime","classes\/DateTime.html#M003228","()","Returns the offset value in seconds ",2],["utc_time","Time","classes\/Time.html#M002870","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:utc<\/tt>. ",2],["utc_to_local","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003504","(time)","Adjust the given time to the simultaneous time in the time zone represented by +self+. Returns a Time.utc()",2],["utf8_enforcer_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M002566","()","Creates the hidden UTF8 enforcer tag. Override this method in a helper to customize the tag. ",2],["uuid","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002108","()","Returns the unique request id, which is based off either the X-Request-Id header that can be generated",2],["valid?","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M003968","(context = nil)","Runs all the specified validations and returns true if no errors were added otherwise false. Context",2],["valid?","ActiveRecord::Validations","classes\/ActiveRecord\/Validations.html#M000686","(context = nil)","Runs all the validations within the specified context. Returns true if no errors are found, false otherwise.",2],["valid?","ActiveResource::Validations","classes\/ActiveResource\/Validations.html#M001478","()","Checks for errors on an object (i.e., is resource.errors empty?). Runs all the specified local validations",2],["valid_accept_header","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M002060","()","",2],["valid_alter_table_options","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000805","( type, options)","See: http:\/\/www.sqlite.org\/lang_altertable.html SQLite has an additional restriction on the ALTER TABLE",2],["valid_const?","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M000360","()","",2],["valid_const?","Rails::Generators::PluginNewGenerator","classes\/Rails\/Generators\/PluginNewGenerator.html#M000304","()","",2],["valid_scope_name?","ActiveRecord::Scoping::Named::ClassMethods","classes\/ActiveRecord\/Scoping\/Named\/ClassMethods.html#M001291","(name)","",2],["validate","ActiveModel::EachValidator","classes\/ActiveModel\/EachValidator.html#M004150","(record)","Performs validation on the supplied record. By default this will call +validates_each+ to determine validity",2],["validate","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M003960","(*args, &block)","Adds a validation method or block to the class. This is useful when overriding the +validate+ instance",2],["validate","ActiveModel::Validations::PresenceValidator","classes\/ActiveModel\/Validations\/PresenceValidator.html#M004019","(record)","",2],["validate","ActiveModel::Validator","classes\/ActiveModel\/Validator.html#M004148","(record)","Override this method in subclasses with validation logic, adding errors to the records +errors+ array",2],["validate_digest_response","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001879","(request, realm, &password_procedure)","Returns false unless the request credentials response value matches the expected value. First try the",2],["validate_each","ActiveModel::EachValidator","classes\/ActiveModel\/EachValidator.html#M004151","(record, attribute, value)","Override this method in subclasses with the validation logic, adding errors to the records +errors+ array",2],["validate_each","ActiveModel::Validations::AcceptanceValidator","classes\/ActiveModel\/Validations\/AcceptanceValidator.html#M004039","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::ConfirmationValidator","classes\/ActiveModel\/Validations\/ConfirmationValidator.html#M004027","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::ExclusionValidator","classes\/ActiveModel\/Validations\/ExclusionValidator.html#M004046","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::FormatValidator","classes\/ActiveModel\/Validations\/FormatValidator.html#M004049","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::InclusionValidator","classes\/ActiveModel\/Validations\/InclusionValidator.html#M004056","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::LengthValidator","classes\/ActiveModel\/Validations\/LengthValidator.html#M004023","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M004014","(record, attr_name, value)","",2],["validate_each","ActiveModel::Validations::WithValidator","classes\/ActiveModel\/Validations\/WithValidator.html#M004035","(record, attr, val)","",2],["validate_each","ActiveRecord::Validations::AssociatedValidator","classes\/ActiveRecord\/Validations\/AssociatedValidator.html#M001393","(record, attribute, value)","",2],["validate_each","ActiveRecord::Validations::UniquenessValidator","classes\/ActiveRecord\/Validations\/UniquenessValidator.html#M001389","(record, attribute, value)","",2],["validate_fallbacks","I18n::Railtie","classes\/I18n\/Railtie.html#M003658","(fallbacks)","",2],["validate_nonce","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M001889","(secret_key, request, value, seconds_to_timeout=5*60)","Might want a shorter timeout depending on whether the request is a PUT or POST, and if client is browser",2],["validates","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M004030","(*attributes)","This method is a shortcut to all default validators and any custom validator classes ending in 'Validator'.",2],["validates!","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M004031","(*attributes)","This method is used to define validation that cannot be corrected by end user and is considered exceptional.",2],["validates_acceptance_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004041","(*attr_names)","Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar",2],["validates_associated","ActiveRecord::Validations::ClassMethods","classes\/ActiveRecord\/Validations\/ClassMethods.html#M001394","(*attr_names)","Validates whether the associated object or objects are all valid themselves. Works with any kind of association.",2],["validates_confirmation_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004029","(*attr_names)","Encapsulates the pattern of wanting to validate a password or email address field with a confirmation.",2],["validates_each","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M003959","(*attr_names, &block)","Validates each attribute against a block. class Person include ActiveModel::Validations attr_accessor",2],["validates_exclusion_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004048","(*attr_names)","Validates that the value of the specified attribute is not in a particular enumerable object. class Person",2],["validates_format_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004054","(*attr_names)","Validates whether the value of the specified attribute is of the correct form, going by the regular expression",2],["validates_inclusion_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004058","(*attr_names)","Validates whether the value of the specified attribute is available in a particular enumerable object.",2],["validates_length_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004025","(*attr_names)","Validates that the specified attribute matches the length restrictions supplied. Only one option can",2],["validates_numericality_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004018","(*attr_names)","Validates whether the value of the specified attribute is numeric by trying to convert it to a float",2],["validates_presence_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004020","(*attr_names)","Validates that the specified attributes are not blank (as defined by Object#blank?). Happens by default",2],["validates_size_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M004026","(*attr_names)","Alias for #validates_length_of",2],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","classes\/ActiveRecord\/Validations\/ClassMethods.html#M001392","(*attr_names)","Validates whether the value of the specified attributes are unique across the system. Useful for making",2],["validates_with","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M004037","(*args, &block)","Passes the record off to the class or classes specified and allows them to add errors based on more complex",2],["validates_with","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M004036","(*args, &block)","If you pass any additional configuration options, they will be passed to the class and available as <tt>options<\/tt>:",2],["validators","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M003961","()","List all validators that are being used to validate the model using +validates_with+ method. ",2],["validators_on","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M003962","(*attributes)","List all validators that being used to validate a specific attribute. ",2],["value","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M003867","()","Get the value stored in the cache. ",2],["values","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M003986","()","Returns all message values ",2],["values","ActiveSupport::OrderedHash","classes\/ActiveSupport\/OrderedHash.html#M003688","()","",2],["values_at","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003454","(*indices)","Returns an array of the values at the specified indices: hash = HashWithIndifferentAccess.new hash[:a]",2],["vendor","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000331","()","",2],["vendor","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M000151","(filename, data=nil, &block)","Create a new file in the vendor\/ directory. Code can be specified in a block or a data string can be",2],["vendor_javascripts","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000332","()","",2],["vendor_plugins","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000334","()","",2],["vendor_stylesheets","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M000333","()","",2],["verified_request?","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M001835","()","Returns true or false if a request is verified. Checks: * is it a GET request?  Gets should be safe and",2],["verify","ActiveSupport::MessageVerifier","classes\/ActiveSupport\/MessageVerifier.html#M003608","(signed_message)","",2],["verify!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000731","(*ignored)","Checks whether the connection to the database is still active (i.e. not stale). This is done under the",2],["verify_authenticity_token","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M001833","()","The actual before_filter that is used. Modify this to change how you handle unverified requests. ",2],["verify_request?","Mime::Type","classes\/Mime\/Type.html#M002205","()","Returns true if Action Pack should check requests using this Mime Type for possible request forgery.",2],["version","Rails","classes\/Rails.html#M000025","()","",2],["video_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002755","(source)","Computes the path to a video asset in the public videos directory. Full paths from the document root",2],["video_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M002763","(sources, options = {})","Returns an html video tag for the +sources+. If +sources+ is a string, a single video tag will be returned.",2],["view_assigns","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M001658","()","This method should return a hash with assigns. You can overwrite this configuration per controller. :api:",2],["view_context","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M001652","()","An instance of a view class. The default view class is ActionView::Base The view class must have the",2],["view_context_class","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M001651","()","",2],["view_context_class","AbstractController::Rendering::ClassMethods","classes\/AbstractController\/Rendering\/ClassMethods.html#M001650","()","",2],["view_paths","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M001703","()","A list of all of the default view paths for this controller. ",2],["view_paths=","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M001704","(paths)","Set the view paths. ==== Parameters * <tt>paths<\/tt> - If a PathSet is provided, use that; otherwise,",2],["view_paths=","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M002446","(paths)","Whenever setting view paths, makes a copy so we can manipulate then in instance objects as we wish. ",2],["view_renderer","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M001653","()","Returns an object that is able to render templates. ",2],["visible_action?","ActionController::HideActions::ClassMethods","classes\/ActionController\/HideActions\/ClassMethods.html#M001787","(action_name)","",2],["wait","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html#M003723","()","Wait notifications to be published. ",2],["wait","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M003429","()","This is a sync queue, so there is no waiting. ",2],["wants?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M003355","(string)","Returns +true+ if the Chars class can and should act as a proxy for the string _string_. Returns +false+",2],["warn","ActiveSupport::Deprecation","classes\/ActiveSupport\/Deprecation.html#M003913","(message = nil, callstack = caller)","Outputs a deprecation warning to the output configured by <tt>ActiveSupport::Deprecation.behavior<\/tt>",2],["watch","ActiveSupport::FileWatcher","classes\/ActiveSupport\/FileWatcher.html#M003715","(pattern, &block)","",2],["watch_namespaces","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M003306","(namespaces)","Add a set of modules to the watch stack, remembering the initial constants ",2],["watchable_args","Rails::Application","classes\/Rails\/Application.html#M000006","()","Returns an array of file paths appended with a hash of directories-extensions suitable for ActiveSupport::FileUpdateChecker",2],["watchable_dirs","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000553","()","Add directories that should be watched for change. The key of the hashes should be directories and the",2],["watchable_files","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M000552","()","Add files that should be watched for change. ",2],["watching?","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M003304","()","",2],["weeks_ago","Time","classes\/Time.html#M002882","(weeks)","Returns a new Time representing the time a number of specified weeks ago. ",2],["with","AbstractController::Railties::RoutesHelpers","classes\/AbstractController\/Railties\/RoutesHelpers.html#M001694","(routes)","",2],["with","ActionController::Railties::Paths","classes\/ActionController\/Railties\/Paths.html#M001918","(app)","",2],["with_backend","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M003615","(name)","",2],["with_backend","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M003647","(name)","",2],["with_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000977","()","If a connection already exists yield it to the block. If no connection exists checkout a connection,",2],["with_default_scope","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M001974","(scope, &block)","",2],["with_exclusive_scope","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002022","()","",2],["with_fallbacks","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M002452","()","Add fallbacks to the view paths. Useful in cases you are rendering a :file. ",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003822","()","overridden by each implementation ",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003731","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003736","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003748","()","overridden by each implementation ",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003772","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003759","()","",2],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M003444","()","",2],["with_indifferent_access","Hash","classes\/Hash.html#M003014","()","Returns an <tt>ActiveSupport::HashWithIndifferentAccess<\/tt> out of its receiver: {:a => 1}.with_indifferent_access[\"a\"]",2],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M003524","()","Use a local cache for the duration of block. ",2],["with_options","Object","classes\/Object.html#M003177","(options)","An elegant way to factor duplication out of options passed to a series of method calls. Each method called",2],["with_output_file","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003815","()","",2],["with_routing","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M002405","()","A helper to make it easier to test different route configurations. This method temporarily replaces @routes",2],["with_scope_level","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M002030","(kind, resource = parent_resource)","",2],["with_transaction_returning_status","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M000580","()","Executes +method+ within a transaction and captures its return value as a status flag. If the status",2],["with_warnings","Kernel","classes\/Kernel.html#M002844","(flag)","Sets $VERBOSE for the duration of the block and back to its original value afterwards. ",2],["without_modules","ActionController::Base","classes\/ActionController\/Base.html#M001903","(*modules)","",2],["word_wrap","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M002687","(text, *args)","Wraps the +text+ into lines no longer than +line_width+ width. This method breaks on the first whitespace",2],["wrap","Array","classes\/Array.html#M003018","(object)","Wraps its argument in an array unless it is already an array (or array-like). Specifically: * If the",2],["wrap_parameters","ActionController::ParamsWrapper::ClassMethods","classes\/ActionController\/ParamsWrapper\/ClassMethods.html#M001845","(name_or_model_or_options, options = {})","Sets the name of the wrapper key, or the model which +ParamsWrapper+ would use to determine the attribute",2],["wrap_with_namespace","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M000097","(content)","",2],["write","ActionDispatch::RailsEntityStore","classes\/ActionDispatch\/RailsEntityStore.html#M002153","(body)","",2],["write","ActionDispatch::RailsMetaStore","classes\/ActionDispatch\/RailsMetaStore.html#M002147","(key, value)","",2],["write","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M001374","(text=\"\")","",2],["write","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M003847","(name, value, options = nil)","Writes the value to the cache, with the key. Options are passed to the underlying cache implementation.",2],["write_attribute","ActiveRecord::AttributeMethods::Write","classes\/ActiveRecord\/AttributeMethods\/Write.html#M001322","(attr_name, value)","Updates the attribute identified by <tt>attr_name<\/tt> with the specified +value+. Empty strings for",2],["write_entry","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M003552","(key, entry, options)","",2],["write_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M003522","(key, value, options)","",2],["write_fragment","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M001933","(key, content, options = nil)","Writes <tt>content<\/tt> to the location signified by  <tt>key<\/tt> (see <tt>expire_fragment<\/tt> for",2],["xhr","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001959","(request_method, action, parameters = nil, session = nil, flash = nil)","Alias for #xml_http_request",2],["xhr","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002371","(request_method, path, parameters = nil, headers = nil)","Alias for #xml_http_request",2],["xhr?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002105","()","Alias for #xml_http_request?",2],["xml","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter\/TableDefinition.html#M001053","(*args)","",2],["xml","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000934","(*args)","",2],["xml_http_request","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M001958","(request_method, action, parameters = nil, session = nil, flash = nil)","",2],["xml_http_request","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M002370","(request_method, path, parameters = nil, headers = nil)","Performs an XMLHttpRequest request with the given parameters, mirroring a request from the Prototype",2],["xml_http_request?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M002104","()","Returns true if the \"X-Requested-With\" header contains \"XMLHttpRequest\" (case-insensitive). All major",2],["xmlschema","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003261","(fraction_digits = 0)","",2],["xmlschema","DateTime","classes\/DateTime.html#M003201","()","Converts datetime to an appropriate format for use in XML. ",2],["year","Integer","classes\/Integer.html#M002836","()","Alias for #years",2],["years","Integer","classes\/Integer.html#M002835","()","",2],["years_ago","Time","classes\/Time.html#M002885","(years)","Returns a new Time representing the time a number of specified years ago ",2],["years_since","Time","classes\/Time.html#M002886","(years)","Returns a new Time representing the time a number of specified years in the future ",2],["yesterday","Time","classes\/Time.html#M002920","()","Convenience method which returns a new Time representing the time 1 day ago ",2],["zone","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M003259","()","Time uses +zone+ to display the time zone abbreviation, so we're duck-typing it. ",2],["zone","Time","classes\/Time.html#M002853","()","Returns the TimeZone for the current request, if this has been set (via Time.zone=). If <tt>Time.zone<\/tt>",2],["zone=","Time","classes\/Time.html#M002854","(time_zone)","Sets <tt>Time.zone<\/tt> to a TimeZone object for the current request\/thread. This method accepts any",2],["zones_map","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M003512","()","",2],["README.rdoc","files\/README_rdoc.html","files\/README_rdoc.html","","== Welcome to Rails  Rails is a web-application framework that includes everything needed to create database-backed",3],["CHANGELOG.md","files\/actionmailer\/CHANGELOG_md.html","files\/actionmailer\/CHANGELOG_md.html","","## Rails 3.2.6 (Jun 12, 2012)  *   No changes.  ## Rails 3.2.5 (Jun 1, 2012) ##  *   No changes.   ##",3],["README.rdoc","files\/actionmailer\/README_rdoc.html","files\/actionmailer\/README_rdoc.html","","= Action Mailer -- Easy email delivery and testing  Action Mailer is a framework for designing email-service",3],["base.rb","files\/actionmailer\/lib\/action_mailer\/base_rb.html","files\/actionmailer\/lib\/action_mailer\/base_rb.html","","",3],["mail_helper.rb","files\/actionmailer\/lib\/action_mailer\/mail_helper_rb.html","files\/actionmailer\/lib\/action_mailer\/mail_helper_rb.html","","",3],["CHANGELOG.md","files\/actionpack\/CHANGELOG_md.html","files\/actionpack\/CHANGELOG_md.html","","## Rails 3.2.6 (Jun 12, 2012) ##  *   nil is removed from array parameter values      CVE-2012-2694 ",3],["README.rdoc","files\/actionpack\/README_rdoc.html","files\/actionpack\/README_rdoc.html","","= Action Pack -- From request to response  Action Pack is a framework for handling and responding to",3],["asset_paths.rb","files\/actionpack\/lib\/abstract_controller\/asset_paths_rb.html","files\/actionpack\/lib\/abstract_controller\/asset_paths_rb.html","","",3],["base.rb","files\/actionpack\/lib\/abstract_controller\/base_rb.html","files\/actionpack\/lib\/abstract_controller\/base_rb.html","","",3],["callbacks.rb","files\/actionpack\/lib\/abstract_controller\/callbacks_rb.html","files\/actionpack\/lib\/abstract_controller\/callbacks_rb.html","","",3],["collector.rb","files\/actionpack\/lib\/abstract_controller\/collector_rb.html","files\/actionpack\/lib\/abstract_controller\/collector_rb.html","","",3],["helpers.rb","files\/actionpack\/lib\/abstract_controller\/helpers_rb.html","files\/actionpack\/lib\/abstract_controller\/helpers_rb.html","","",3],["layouts.rb","files\/actionpack\/lib\/abstract_controller\/layouts_rb.html","files\/actionpack\/lib\/abstract_controller\/layouts_rb.html","","",3],["logger.rb","files\/actionpack\/lib\/abstract_controller\/logger_rb.html","files\/actionpack\/lib\/abstract_controller\/logger_rb.html","","",3],["routes_helpers.rb","files\/actionpack\/lib\/abstract_controller\/railties\/routes_helpers_rb.html","files\/actionpack\/lib\/abstract_controller\/railties\/routes_helpers_rb.html","","",3],["rendering.rb","files\/actionpack\/lib\/abstract_controller\/rendering_rb.html","files\/actionpack\/lib\/abstract_controller\/rendering_rb.html","","",3],["translation.rb","files\/actionpack\/lib\/abstract_controller\/translation_rb.html","files\/actionpack\/lib\/abstract_controller\/translation_rb.html","","",3],["url_for.rb","files\/actionpack\/lib\/abstract_controller\/url_for_rb.html","files\/actionpack\/lib\/abstract_controller\/url_for_rb.html","","Includes +url_for+ into the host class (e.g. an abstract controller or mailer). The class has to provide",3],["view_paths.rb","files\/actionpack\/lib\/abstract_controller\/view_paths_rb.html","files\/actionpack\/lib\/abstract_controller\/view_paths_rb.html","","",3],["base.rb","files\/actionpack\/lib\/action_controller\/base_rb.html","files\/actionpack\/lib\/action_controller\/base_rb.html","","",3],["caching.rb","files\/actionpack\/lib\/action_controller\/caching_rb.html","files\/actionpack\/lib\/action_controller\/caching_rb.html","","",3],["actions.rb","files\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","files\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","","",3],["fragments.rb","files\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","files\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","","",3],["pages.rb","files\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","files\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","","",3],["sweeping.rb","files\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","files\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","","",3],["deprecated.rb","files\/actionpack\/lib\/action_controller\/deprecated_rb.html","files\/actionpack\/lib\/action_controller\/deprecated_rb.html","","",3],["integration_test.rb","files\/actionpack\/lib\/action_controller\/deprecated\/integration_test_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/integration_test_rb.html","","",3],["performance_test.rb","files\/actionpack\/lib\/action_controller\/deprecated\/performance_test_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/performance_test_rb.html","","",3],["log_subscriber.rb","files\/actionpack\/lib\/action_controller\/log_subscriber_rb.html","files\/actionpack\/lib\/action_controller\/log_subscriber_rb.html","","",3],["metal.rb","files\/actionpack\/lib\/action_controller\/metal_rb.html","files\/actionpack\/lib\/action_controller\/metal_rb.html","","",3],["compatibility.rb","files\/actionpack\/lib\/action_controller\/metal\/compatibility_rb.html","files\/actionpack\/lib\/action_controller\/metal\/compatibility_rb.html","","",3],["conditional_get.rb","files\/actionpack\/lib\/action_controller\/metal\/conditional_get_rb.html","files\/actionpack\/lib\/action_controller\/metal\/conditional_get_rb.html","","",3],["cookies.rb","files\/actionpack\/lib\/action_controller\/metal\/cookies_rb.html","files\/actionpack\/lib\/action_controller\/metal\/cookies_rb.html","","",3],["data_streaming.rb","files\/actionpack\/lib\/action_controller\/metal\/data_streaming_rb.html","files\/actionpack\/lib\/action_controller\/metal\/data_streaming_rb.html","","",3],["exceptions.rb","files\/actionpack\/lib\/action_controller\/metal\/exceptions_rb.html","files\/actionpack\/lib\/action_controller\/metal\/exceptions_rb.html","","",3],["flash.rb","files\/actionpack\/lib\/action_controller\/metal\/flash_rb.html","files\/actionpack\/lib\/action_controller\/metal\/flash_rb.html","","",3],["force_ssl.rb","files\/actionpack\/lib\/action_controller\/metal\/force_ssl_rb.html","files\/actionpack\/lib\/action_controller\/metal\/force_ssl_rb.html","","",3],["head.rb","files\/actionpack\/lib\/action_controller\/metal\/head_rb.html","files\/actionpack\/lib\/action_controller\/metal\/head_rb.html","","",3],["helpers.rb","files\/actionpack\/lib\/action_controller\/metal\/helpers_rb.html","files\/actionpack\/lib\/action_controller\/metal\/helpers_rb.html","","",3],["hide_actions.rb","files\/actionpack\/lib\/action_controller\/metal\/hide_actions_rb.html","files\/actionpack\/lib\/action_controller\/metal\/hide_actions_rb.html","","",3],["http_authentication.rb","files\/actionpack\/lib\/action_controller\/metal\/http_authentication_rb.html","files\/actionpack\/lib\/action_controller\/metal\/http_authentication_rb.html","","",3],["implicit_render.rb","files\/actionpack\/lib\/action_controller\/metal\/implicit_render_rb.html","files\/actionpack\/lib\/action_controller\/metal\/implicit_render_rb.html","","",3],["instrumentation.rb","files\/actionpack\/lib\/action_controller\/metal\/instrumentation_rb.html","files\/actionpack\/lib\/action_controller\/metal\/instrumentation_rb.html","","",3],["mime_responds.rb","files\/actionpack\/lib\/action_controller\/metal\/mime_responds_rb.html","files\/actionpack\/lib\/action_controller\/metal\/mime_responds_rb.html","","",3],["params_wrapper.rb","files\/actionpack\/lib\/action_controller\/metal\/params_wrapper_rb.html","files\/actionpack\/lib\/action_controller\/metal\/params_wrapper_rb.html","","",3],["rack_delegation.rb","files\/actionpack\/lib\/action_controller\/metal\/rack_delegation_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rack_delegation_rb.html","","",3],["redirecting.rb","files\/actionpack\/lib\/action_controller\/metal\/redirecting_rb.html","files\/actionpack\/lib\/action_controller\/metal\/redirecting_rb.html","","",3],["renderers.rb","files\/actionpack\/lib\/action_controller\/metal\/renderers_rb.html","files\/actionpack\/lib\/action_controller\/metal\/renderers_rb.html","","",3],["rendering.rb","files\/actionpack\/lib\/action_controller\/metal\/rendering_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rendering_rb.html","","",3],["request_forgery_protection.rb","files\/actionpack\/lib\/action_controller\/metal\/request_forgery_protection_rb.html","files\/actionpack\/lib\/action_controller\/metal\/request_forgery_protection_rb.html","","",3],["rescue.rb","files\/actionpack\/lib\/action_controller\/metal\/rescue_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rescue_rb.html","","",3],["responder.rb","files\/actionpack\/lib\/action_controller\/metal\/responder_rb.html","files\/actionpack\/lib\/action_controller\/metal\/responder_rb.html","","",3],["session_management.rb","files\/actionpack\/lib\/action_controller\/metal\/session_management_rb.html","files\/actionpack\/lib\/action_controller\/metal\/session_management_rb.html","","",3],["streaming.rb","files\/actionpack\/lib\/action_controller\/metal\/streaming_rb.html","files\/actionpack\/lib\/action_controller\/metal\/streaming_rb.html","","",3],["testing.rb","files\/actionpack\/lib\/action_controller\/metal\/testing_rb.html","files\/actionpack\/lib\/action_controller\/metal\/testing_rb.html","","",3],["url_for.rb","files\/actionpack\/lib\/action_controller\/metal\/url_for_rb.html","files\/actionpack\/lib\/action_controller\/metal\/url_for_rb.html","","Includes +url_for+ into the host class. The class has to provide a +RouteSet+ by implementing  the <tt>_routes<\/tt>",3],["middleware.rb","files\/actionpack\/lib\/action_controller\/middleware_rb.html","files\/actionpack\/lib\/action_controller\/middleware_rb.html","","",3],["railtie.rb","files\/actionpack\/lib\/action_controller\/railtie_rb.html","files\/actionpack\/lib\/action_controller\/railtie_rb.html","","",3],["paths.rb","files\/actionpack\/lib\/action_controller\/railties\/paths_rb.html","files\/actionpack\/lib\/action_controller\/railties\/paths_rb.html","","",3],["record_identifier.rb","files\/actionpack\/lib\/action_controller\/record_identifier_rb.html","files\/actionpack\/lib\/action_controller\/record_identifier_rb.html","","",3],["test_case.rb","files\/actionpack\/lib\/action_controller\/test_case_rb.html","files\/actionpack\/lib\/action_controller\/test_case_rb.html","","",3],["cache.rb","files\/actionpack\/lib\/action_dispatch\/http\/cache_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/cache_rb.html","","",3],["filter_parameters.rb","files\/actionpack\/lib\/action_dispatch\/http\/filter_parameters_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/filter_parameters_rb.html","","",3],["headers.rb","files\/actionpack\/lib\/action_dispatch\/http\/headers_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/headers_rb.html","","",3],["mime_negotiation.rb","files\/actionpack\/lib\/action_dispatch\/http\/mime_negotiation_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_negotiation_rb.html","","",3],["mime_type.rb","files\/actionpack\/lib\/action_dispatch\/http\/mime_type_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_type_rb.html","","",3],["mime_types.rb","files\/actionpack\/lib\/action_dispatch\/http\/mime_types_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_types_rb.html","","Build list of Mime types for HTTP responses http:\/\/www.iana.org\/assignments\/media-types\/ ",3],["parameter_filter.rb","files\/actionpack\/lib\/action_dispatch\/http\/parameter_filter_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/parameter_filter_rb.html","","",3],["parameters.rb","files\/actionpack\/lib\/action_dispatch\/http\/parameters_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/parameters_rb.html","","",3],["rack_cache.rb","files\/actionpack\/lib\/action_dispatch\/http\/rack_cache_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/rack_cache_rb.html","","",3],["request.rb","files\/actionpack\/lib\/action_dispatch\/http\/request_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/request_rb.html","","",3],["response.rb","files\/actionpack\/lib\/action_dispatch\/http\/response_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/response_rb.html","","",3],["upload.rb","files\/actionpack\/lib\/action_dispatch\/http\/upload_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/upload_rb.html","","",3],["url.rb","files\/actionpack\/lib\/action_dispatch\/http\/url_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/url_rb.html","","",3],["best_standards_support.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/best_standards_support_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/best_standards_support_rb.html","","",3],["body_proxy.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/body_proxy_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/body_proxy_rb.html","","Keep this file meanwhile https:\/\/github.com\/rack\/rack\/pull\/313 is not released ---  ",3],["callbacks.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/callbacks_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/callbacks_rb.html","","",3],["cookies.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/cookies_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/cookies_rb.html","","",3],["debug_exceptions.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/debug_exceptions_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/debug_exceptions_rb.html","","",3],["exception_wrapper.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/exception_wrapper_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/exception_wrapper_rb.html","","",3],["flash.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/flash_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/flash_rb.html","","",3],["head.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/head_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/head_rb.html","","",3],["params_parser.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/params_parser_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/params_parser_rb.html","","",3],["public_exceptions.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/public_exceptions_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/public_exceptions_rb.html","","",3],["reloader.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/reloader_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/reloader_rb.html","","",3],["remote_ip.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/remote_ip_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/remote_ip_rb.html","","",3],["request_id.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/request_id_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/request_id_rb.html","","",3],["rescue.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/rescue_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/rescue_rb.html","","",3],["abstract_store.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/abstract_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/abstract_store_rb.html","","",3],["cache_store.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cache_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cache_store_rb.html","","",3],["cookie_store.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cookie_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cookie_store_rb.html","","",3],["mem_cache_store.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/mem_cache_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/mem_cache_store_rb.html","","",3],["show_exceptions.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/show_exceptions_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/show_exceptions_rb.html","","",3],["stack.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/stack_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/stack_rb.html","","",3],["static.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/static_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/static_rb.html","","",3],["railtie.rb","files\/actionpack\/lib\/action_dispatch\/railtie_rb.html","files\/actionpack\/lib\/action_dispatch\/railtie_rb.html","","",3],["routing.rb","files\/actionpack\/lib\/action_dispatch\/routing_rb.html","files\/actionpack\/lib\/action_dispatch\/routing_rb.html","","",3],["mapper.rb","files\/actionpack\/lib\/action_dispatch\/routing\/mapper_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/mapper_rb.html","","",3],["polymorphic_routes.rb","files\/actionpack\/lib\/action_dispatch\/routing\/polymorphic_routes_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/polymorphic_routes_rb.html","","",3],["redirection.rb","files\/actionpack\/lib\/action_dispatch\/routing\/redirection_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/redirection_rb.html","","",3],["route_set.rb","files\/actionpack\/lib\/action_dispatch\/routing\/route_set_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/route_set_rb.html","","",3],["routes_proxy.rb","files\/actionpack\/lib\/action_dispatch\/routing\/routes_proxy_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/routes_proxy_rb.html","","",3],["url_for.rb","files\/actionpack\/lib\/action_dispatch\/routing\/url_for_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/url_for_rb.html","","",3],["assertions.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions_rb.html","","",3],["dom.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/dom_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/dom_rb.html","","",3],["response.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/response_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/response_rb.html","","",3],["routing.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/routing_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/routing_rb.html","","",3],["selector.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/selector_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/selector_rb.html","","",3],["tag.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/tag_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/tag_rb.html","","",3],["integration.rb","files\/actionpack\/lib\/action_dispatch\/testing\/integration_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/integration_rb.html","","",3],["performance_test.rb","files\/actionpack\/lib\/action_dispatch\/testing\/performance_test_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/performance_test_rb.html","","",3],["test_process.rb","files\/actionpack\/lib\/action_dispatch\/testing\/test_process_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_process_rb.html","","",3],["test_request.rb","files\/actionpack\/lib\/action_dispatch\/testing\/test_request_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_request_rb.html","","",3],["test_response.rb","files\/actionpack\/lib\/action_dispatch\/testing\/test_response_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_response_rb.html","","",3],["asset_paths.rb","files\/actionpack\/lib\/action_view\/asset_paths_rb.html","files\/actionpack\/lib\/action_view\/asset_paths_rb.html","","",3],["base.rb","files\/actionpack\/lib\/action_view\/base_rb.html","files\/actionpack\/lib\/action_view\/base_rb.html","","",3],["buffers.rb","files\/actionpack\/lib\/action_view\/buffers_rb.html","files\/actionpack\/lib\/action_view\/buffers_rb.html","","",3],["context.rb","files\/actionpack\/lib\/action_view\/context_rb.html","files\/actionpack\/lib\/action_view\/context_rb.html","","",3],["flows.rb","files\/actionpack\/lib\/action_view\/flows_rb.html","files\/actionpack\/lib\/action_view\/flows_rb.html","","",3],["helpers.rb","files\/actionpack\/lib\/action_view\/helpers_rb.html","files\/actionpack\/lib\/action_view\/helpers_rb.html","","",3],["active_model_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/active_model_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/active_model_helper_rb.html","","",3],["asset_paths.rb","files\/actionpack\/lib\/action_view\/helpers\/asset_paths_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_paths_rb.html","","",3],["asset_tag_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","","",3],["asset_include_tag.rb","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/asset_include_tag_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/asset_include_tag_rb.html","","",3],["asset_paths.rb","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/asset_paths_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/asset_paths_rb.html","","",3],["javascript_tag_helpers.rb","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/javascript_tag_helpers_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/javascript_tag_helpers_rb.html","","",3],["stylesheet_tag_helpers.rb","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/stylesheet_tag_helpers_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helpers\/stylesheet_tag_helpers_rb.html","","",3],["atom_feed_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","","",3],["cache_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","","",3],["capture_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","","",3],["controller_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/controller_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/controller_helper_rb.html","","",3],["csrf_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/csrf_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/csrf_helper_rb.html","","",3],["date_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","","",3],["debug_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","","",3],["form_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","","",3],["form_options_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","","",3],["form_tag_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","","",3],["javascript_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","","",3],["number_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","","encoding: utf-8 ",3],["output_safety_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/output_safety_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/output_safety_helper_rb.html","","",3],["record_tag_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","","",3],["rendering_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/rendering_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/rendering_helper_rb.html","","",3],["sanitize_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","","",3],["tag_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","","",3],["text_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","","",3],["translation_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","","",3],["url_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","","",3],["log_subscriber.rb","files\/actionpack\/lib\/action_view\/log_subscriber_rb.html","files\/actionpack\/lib\/action_view\/log_subscriber_rb.html","","",3],["lookup_context.rb","files\/actionpack\/lib\/action_view\/lookup_context_rb.html","files\/actionpack\/lib\/action_view\/lookup_context_rb.html","","",3],["path_set.rb","files\/actionpack\/lib\/action_view\/path_set_rb.html","files\/actionpack\/lib\/action_view\/path_set_rb.html","","",3],["railtie.rb","files\/actionpack\/lib\/action_view\/railtie_rb.html","files\/actionpack\/lib\/action_view\/railtie_rb.html","","",3],["abstract_renderer.rb","files\/actionpack\/lib\/action_view\/renderer\/abstract_renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/abstract_renderer_rb.html","","",3],["partial_renderer.rb","files\/actionpack\/lib\/action_view\/renderer\/partial_renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/partial_renderer_rb.html","","",3],["renderer.rb","files\/actionpack\/lib\/action_view\/renderer\/renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/renderer_rb.html","","",3],["streaming_template_renderer.rb","files\/actionpack\/lib\/action_view\/renderer\/streaming_template_renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/streaming_template_renderer_rb.html","","1.9 ships with Fibers but we need to require the extra methods explicitly. We only load those extra methods",3],["template_renderer.rb","files\/actionpack\/lib\/action_view\/renderer\/template_renderer_rb.html","files\/actionpack\/lib\/action_view\/renderer\/template_renderer_rb.html","","",3],["template.rb","files\/actionpack\/lib\/action_view\/template_rb.html","files\/actionpack\/lib\/action_view\/template_rb.html","","",3],["error.rb","files\/actionpack\/lib\/action_view\/template\/error_rb.html","files\/actionpack\/lib\/action_view\/template\/error_rb.html","","",3],["handlers.rb","files\/actionpack\/lib\/action_view\/template\/handlers_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers_rb.html","","",3],["builder.rb","files\/actionpack\/lib\/action_view\/template\/handlers\/builder_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/builder_rb.html","","",3],["erb.rb","files\/actionpack\/lib\/action_view\/template\/handlers\/erb_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/erb_rb.html","","",3],["resolver.rb","files\/actionpack\/lib\/action_view\/template\/resolver_rb.html","files\/actionpack\/lib\/action_view\/template\/resolver_rb.html","","",3],["text.rb","files\/actionpack\/lib\/action_view\/template\/text_rb.html","files\/actionpack\/lib\/action_view\/template\/text_rb.html","","",3],["test_case.rb","files\/actionpack\/lib\/action_view\/test_case_rb.html","files\/actionpack\/lib\/action_view\/test_case_rb.html","","",3],["resolvers.rb","files\/actionpack\/lib\/action_view\/testing\/resolvers_rb.html","files\/actionpack\/lib\/action_view\/testing\/resolvers_rb.html","","",3],["CHANGELOG.md","files\/activemodel\/CHANGELOG_md.html","files\/activemodel\/CHANGELOG_md.html","","## Rails 3.2.6 (Jun 12, 2012)  *   No changes.  ## Rails 3.2.4 (May 31, 2012) ##  *   No changes.  ##",3],["README.rdoc","files\/activemodel\/README_rdoc.html","files\/activemodel\/README_rdoc.html","","= Active Model -- model interfaces for Rails  Active Model provides a known set of interfaces for usage",3],["attribute_methods.rb","files\/activemodel\/lib\/active_model\/attribute_methods_rb.html","files\/activemodel\/lib\/active_model\/attribute_methods_rb.html","","",3],["callbacks.rb","files\/activemodel\/lib\/active_model\/callbacks_rb.html","files\/activemodel\/lib\/active_model\/callbacks_rb.html","","",3],["conversion.rb","files\/activemodel\/lib\/active_model\/conversion_rb.html","files\/activemodel\/lib\/active_model\/conversion_rb.html","","",3],["dirty.rb","files\/activemodel\/lib\/active_model\/dirty_rb.html","files\/activemodel\/lib\/active_model\/dirty_rb.html","","",3],["errors.rb","files\/activemodel\/lib\/active_model\/errors_rb.html","files\/activemodel\/lib\/active_model\/errors_rb.html","","",3],["lint.rb","files\/activemodel\/lib\/active_model\/lint_rb.html","files\/activemodel\/lib\/active_model\/lint_rb.html","","",3],["mass_assignment_security.rb","files\/activemodel\/lib\/active_model\/mass_assignment_security_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security_rb.html","","",3],["permission_set.rb","files\/activemodel\/lib\/active_model\/mass_assignment_security\/permission_set_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security\/permission_set_rb.html","","",3],["sanitizer.rb","files\/activemodel\/lib\/active_model\/mass_assignment_security\/sanitizer_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security\/sanitizer_rb.html","","",3],["naming.rb","files\/activemodel\/lib\/active_model\/naming_rb.html","files\/activemodel\/lib\/active_model\/naming_rb.html","","",3],["observer_array.rb","files\/activemodel\/lib\/active_model\/observer_array_rb.html","files\/activemodel\/lib\/active_model\/observer_array_rb.html","","",3],["observing.rb","files\/activemodel\/lib\/active_model\/observing_rb.html","files\/activemodel\/lib\/active_model\/observing_rb.html","","",3],["railtie.rb","files\/activemodel\/lib\/active_model\/railtie_rb.html","files\/activemodel\/lib\/active_model\/railtie_rb.html","","",3],["secure_password.rb","files\/activemodel\/lib\/active_model\/secure_password_rb.html","files\/activemodel\/lib\/active_model\/secure_password_rb.html","","",3],["serialization.rb","files\/activemodel\/lib\/active_model\/serialization_rb.html","files\/activemodel\/lib\/active_model\/serialization_rb.html","","",3],["json.rb","files\/activemodel\/lib\/active_model\/serializers\/json_rb.html","files\/activemodel\/lib\/active_model\/serializers\/json_rb.html","","",3],["xml.rb","files\/activemodel\/lib\/active_model\/serializers\/xml_rb.html","files\/activemodel\/lib\/active_model\/serializers\/xml_rb.html","","",3],["test_case.rb","files\/activemodel\/lib\/active_model\/test_case_rb.html","files\/activemodel\/lib\/active_model\/test_case_rb.html","","",3],["translation.rb","files\/activemodel\/lib\/active_model\/translation_rb.html","files\/activemodel\/lib\/active_model\/translation_rb.html","","",3],["validations.rb","files\/activemodel\/lib\/active_model\/validations_rb.html","files\/activemodel\/lib\/active_model\/validations_rb.html","","",3],["acceptance.rb","files\/activemodel\/lib\/active_model\/validations\/acceptance_rb.html","files\/activemodel\/lib\/active_model\/validations\/acceptance_rb.html","","",3],["callbacks.rb","files\/activemodel\/lib\/active_model\/validations\/callbacks_rb.html","files\/activemodel\/lib\/active_model\/validations\/callbacks_rb.html","","",3],["confirmation.rb","files\/activemodel\/lib\/active_model\/validations\/confirmation_rb.html","files\/activemodel\/lib\/active_model\/validations\/confirmation_rb.html","","",3],["exclusion.rb","files\/activemodel\/lib\/active_model\/validations\/exclusion_rb.html","files\/activemodel\/lib\/active_model\/validations\/exclusion_rb.html","","",3],["format.rb","files\/activemodel\/lib\/active_model\/validations\/format_rb.html","files\/activemodel\/lib\/active_model\/validations\/format_rb.html","","",3],["inclusion.rb","files\/activemodel\/lib\/active_model\/validations\/inclusion_rb.html","files\/activemodel\/lib\/active_model\/validations\/inclusion_rb.html","","",3],["length.rb","files\/activemodel\/lib\/active_model\/validations\/length_rb.html","files\/activemodel\/lib\/active_model\/validations\/length_rb.html","","",3],["numericality.rb","files\/activemodel\/lib\/active_model\/validations\/numericality_rb.html","files\/activemodel\/lib\/active_model\/validations\/numericality_rb.html","","",3],["presence.rb","files\/activemodel\/lib\/active_model\/validations\/presence_rb.html","files\/activemodel\/lib\/active_model\/validations\/presence_rb.html","","",3],["validates.rb","files\/activemodel\/lib\/active_model\/validations\/validates_rb.html","files\/activemodel\/lib\/active_model\/validations\/validates_rb.html","","",3],["with.rb","files\/activemodel\/lib\/active_model\/validations\/with_rb.html","files\/activemodel\/lib\/active_model\/validations\/with_rb.html","","",3],["validator.rb","files\/activemodel\/lib\/active_model\/validator_rb.html","files\/activemodel\/lib\/active_model\/validator_rb.html","","",3],["version.rb","files\/activemodel\/lib\/active_model\/version_rb.html","files\/activemodel\/lib\/active_model\/version_rb.html","","",3],["CHANGELOG.md","files\/activerecord\/CHANGELOG_md.html","files\/activerecord\/CHANGELOG_md.html","","## Rails 3.2.6 (Jun 12, 2012) ##  *   protect against the nesting of hashes changing the     table context",3],["README.rdoc","files\/activerecord\/README_rdoc.html","files\/activerecord\/README_rdoc.html","","= Active Record -- Object-relational mapping put on rails  Active Record connects classes to relational",3],["aggregations.rb","files\/activerecord\/lib\/active_record\/aggregations_rb.html","files\/activerecord\/lib\/active_record\/aggregations_rb.html","","",3],["associations.rb","files\/activerecord\/lib\/active_record\/associations_rb.html","files\/activerecord\/lib\/active_record\/associations_rb.html","","",3],["alias_tracker.rb","files\/activerecord\/lib\/active_record\/associations\/alias_tracker_rb.html","files\/activerecord\/lib\/active_record\/associations\/alias_tracker_rb.html","","",3],["association.rb","files\/activerecord\/lib\/active_record\/associations\/association_rb.html","files\/activerecord\/lib\/active_record\/associations\/association_rb.html","","",3],["association_scope.rb","files\/activerecord\/lib\/active_record\/associations\/association_scope_rb.html","files\/activerecord\/lib\/active_record\/associations\/association_scope_rb.html","","",3],["belongs_to_association.rb","files\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","","",3],["belongs_to_polymorphic_association.rb","files\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","","",3],["association.rb","files\/activerecord\/lib\/active_record\/associations\/builder\/association_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/association_rb.html","","",3],["belongs_to.rb","files\/activerecord\/lib\/active_record\/associations\/builder\/belongs_to_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/belongs_to_rb.html","","",3],["collection_association.rb","files\/activerecord\/lib\/active_record\/associations\/builder\/collection_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/collection_association_rb.html","","",3],["has_and_belongs_to_many.rb","files\/activerecord\/lib\/active_record\/associations\/builder\/has_and_belongs_to_many_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/has_and_belongs_to_many_rb.html","","",3],["has_many.rb","files\/activerecord\/lib\/active_record\/associations\/builder\/has_many_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/has_many_rb.html","","",3],["has_one.rb","files\/activerecord\/lib\/active_record\/associations\/builder\/has_one_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/has_one_rb.html","","",3],["singular_association.rb","files\/activerecord\/lib\/active_record\/associations\/builder\/singular_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/builder\/singular_association_rb.html","","",3],["collection_association.rb","files\/activerecord\/lib\/active_record\/associations\/collection_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/collection_association_rb.html","","",3],["collection_proxy.rb","files\/activerecord\/lib\/active_record\/associations\/collection_proxy_rb.html","files\/activerecord\/lib\/active_record\/associations\/collection_proxy_rb.html","","",3],["has_and_belongs_to_many_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","","",3],["has_many_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","","",3],["has_many_through_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","","",3],["has_one_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","","",3],["has_one_through_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","","",3],["join_dependency.rb","files\/activerecord\/lib\/active_record\/associations\/join_dependency_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_dependency_rb.html","","",3],["join_association.rb","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_association_rb.html","","",3],["join_base.rb","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_base_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_base_rb.html","","",3],["join_part.rb","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_part_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_dependency\/join_part_rb.html","","",3],["join_helper.rb","files\/activerecord\/lib\/active_record\/associations\/join_helper_rb.html","files\/activerecord\/lib\/active_record\/associations\/join_helper_rb.html","","",3],["preloader.rb","files\/activerecord\/lib\/active_record\/associations\/preloader_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader_rb.html","","",3],["association.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/association_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/association_rb.html","","",3],["belongs_to.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/belongs_to_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/belongs_to_rb.html","","",3],["collection_association.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/collection_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/collection_association_rb.html","","",3],["has_and_belongs_to_many.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_and_belongs_to_many_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_and_belongs_to_many_rb.html","","",3],["has_many.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_many_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_many_rb.html","","",3],["has_many_through.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_many_through_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_many_through_rb.html","","",3],["has_one.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_one_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_one_rb.html","","",3],["has_one_through.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_one_through_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/has_one_through_rb.html","","",3],["singular_association.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/singular_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/singular_association_rb.html","","",3],["through_association.rb","files\/activerecord\/lib\/active_record\/associations\/preloader\/through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/preloader\/through_association_rb.html","","",3],["singular_association.rb","files\/activerecord\/lib\/active_record\/associations\/singular_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/singular_association_rb.html","","",3],["through_association.rb","files\/activerecord\/lib\/active_record\/associations\/through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/through_association_rb.html","","",3],["attribute_assignment.rb","files\/activerecord\/lib\/active_record\/attribute_assignment_rb.html","files\/activerecord\/lib\/active_record\/attribute_assignment_rb.html","","",3],["attribute_methods.rb","files\/activerecord\/lib\/active_record\/attribute_methods_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods_rb.html","","",3],["before_type_cast.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/before_type_cast_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/before_type_cast_rb.html","","",3],["deprecated_underscore_read.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/deprecated_underscore_read_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/deprecated_underscore_read_rb.html","","",3],["dirty.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/dirty_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/dirty_rb.html","","",3],["primary_key.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/primary_key_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/primary_key_rb.html","","",3],["query.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/query_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/query_rb.html","","",3],["read.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/read_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/read_rb.html","","",3],["serialization.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/serialization_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/serialization_rb.html","","",3],["time_zone_conversion.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/time_zone_conversion_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/time_zone_conversion_rb.html","","",3],["write.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/write_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/write_rb.html","","",3],["autosave_association.rb","files\/activerecord\/lib\/active_record\/autosave_association_rb.html","files\/activerecord\/lib\/active_record\/autosave_association_rb.html","","",3],["base.rb","files\/activerecord\/lib\/active_record\/base_rb.html","files\/activerecord\/lib\/active_record\/base_rb.html","","",3],["callbacks.rb","files\/activerecord\/lib\/active_record\/callbacks_rb.html","files\/activerecord\/lib\/active_record\/callbacks_rb.html","","",3],["yaml_column.rb","files\/activerecord\/lib\/active_record\/coders\/yaml_column_rb.html","files\/activerecord\/lib\/active_record\/coders\/yaml_column_rb.html","","",3],["connection_pool.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","","",3],["connection_specification.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","","",3],["database_limits.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","","",3],["database_statements.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","","",3],["query_cache.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","","",3],["quoting.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","","",3],["schema_definitions.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","","",3],["schema_statements.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","","",3],["abstract_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","","",3],["abstract_mysql_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_mysql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_mysql_adapter_rb.html","","",3],["column.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/column_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/column_rb.html","","",3],["mysql2_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql2_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql2_adapter_rb.html","","",3],["mysql_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","","",3],["postgresql_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","","",3],["schema_cache.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/schema_cache_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/schema_cache_rb.html","","",3],["sqlite3_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","","",3],["sqlite_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","","",3],["statement_pool.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/statement_pool_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/statement_pool_rb.html","","",3],["counter_cache.rb","files\/activerecord\/lib\/active_record\/counter_cache_rb.html","files\/activerecord\/lib\/active_record\/counter_cache_rb.html","","",3],["dynamic_finder_match.rb","files\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","files\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","","",3],["dynamic_matchers.rb","files\/activerecord\/lib\/active_record\/dynamic_matchers_rb.html","files\/activerecord\/lib\/active_record\/dynamic_matchers_rb.html","","",3],["dynamic_scope_match.rb","files\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","files\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","","",3],["errors.rb","files\/activerecord\/lib\/active_record\/errors_rb.html","files\/activerecord\/lib\/active_record\/errors_rb.html","","",3],["explain.rb","files\/activerecord\/lib\/active_record\/explain_rb.html","files\/activerecord\/lib\/active_record\/explain_rb.html","","",3],["explain_subscriber.rb","files\/activerecord\/lib\/active_record\/explain_subscriber_rb.html","files\/activerecord\/lib\/active_record\/explain_subscriber_rb.html","","",3],["fixtures.rb","files\/activerecord\/lib\/active_record\/fixtures_rb.html","files\/activerecord\/lib\/active_record\/fixtures_rb.html","","",3],["file.rb","files\/activerecord\/lib\/active_record\/fixtures\/file_rb.html","files\/activerecord\/lib\/active_record\/fixtures\/file_rb.html","","",3],["identity_map.rb","files\/activerecord\/lib\/active_record\/identity_map_rb.html","files\/activerecord\/lib\/active_record\/identity_map_rb.html","","",3],["inheritance.rb","files\/activerecord\/lib\/active_record\/inheritance_rb.html","files\/activerecord\/lib\/active_record\/inheritance_rb.html","","",3],["integration.rb","files\/activerecord\/lib\/active_record\/integration_rb.html","files\/activerecord\/lib\/active_record\/integration_rb.html","","",3],["optimistic.rb","files\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","files\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","","",3],["pessimistic.rb","files\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","files\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","","",3],["log_subscriber.rb","files\/activerecord\/lib\/active_record\/log_subscriber_rb.html","files\/activerecord\/lib\/active_record\/log_subscriber_rb.html","","",3],["migration.rb","files\/activerecord\/lib\/active_record\/migration_rb.html","files\/activerecord\/lib\/active_record\/migration_rb.html","","",3],["command_recorder.rb","files\/activerecord\/lib\/active_record\/migration\/command_recorder_rb.html","files\/activerecord\/lib\/active_record\/migration\/command_recorder_rb.html","","",3],["model_schema.rb","files\/activerecord\/lib\/active_record\/model_schema_rb.html","files\/activerecord\/lib\/active_record\/model_schema_rb.html","","",3],["nested_attributes.rb","files\/activerecord\/lib\/active_record\/nested_attributes_rb.html","files\/activerecord\/lib\/active_record\/nested_attributes_rb.html","","",3],["observer.rb","files\/activerecord\/lib\/active_record\/observer_rb.html","files\/activerecord\/lib\/active_record\/observer_rb.html","","",3],["persistence.rb","files\/activerecord\/lib\/active_record\/persistence_rb.html","files\/activerecord\/lib\/active_record\/persistence_rb.html","","",3],["query_cache.rb","files\/activerecord\/lib\/active_record\/query_cache_rb.html","files\/activerecord\/lib\/active_record\/query_cache_rb.html","","",3],["querying.rb","files\/activerecord\/lib\/active_record\/querying_rb.html","files\/activerecord\/lib\/active_record\/querying_rb.html","","",3],["railtie.rb","files\/activerecord\/lib\/active_record\/railtie_rb.html","files\/activerecord\/lib\/active_record\/railtie_rb.html","","",3],["console_sandbox.rb","files\/activerecord\/lib\/active_record\/railties\/console_sandbox_rb.html","files\/activerecord\/lib\/active_record\/railties\/console_sandbox_rb.html","","",3],["controller_runtime.rb","files\/activerecord\/lib\/active_record\/railties\/controller_runtime_rb.html","files\/activerecord\/lib\/active_record\/railties\/controller_runtime_rb.html","","",3],["jdbcmysql_error.rb","files\/activerecord\/lib\/active_record\/railties\/jdbcmysql_error_rb.html","files\/activerecord\/lib\/active_record\/railties\/jdbcmysql_error_rb.html","","FIXME Remove if ArJdbcMysql will give. ",3],["readonly_attributes.rb","files\/activerecord\/lib\/active_record\/readonly_attributes_rb.html","files\/activerecord\/lib\/active_record\/readonly_attributes_rb.html","","",3],["reflection.rb","files\/activerecord\/lib\/active_record\/reflection_rb.html","files\/activerecord\/lib\/active_record\/reflection_rb.html","","",3],["relation.rb","files\/activerecord\/lib\/active_record\/relation_rb.html","files\/activerecord\/lib\/active_record\/relation_rb.html","","",3],["batches.rb","files\/activerecord\/lib\/active_record\/relation\/batches_rb.html","files\/activerecord\/lib\/active_record\/relation\/batches_rb.html","","",3],["calculations.rb","files\/activerecord\/lib\/active_record\/relation\/calculations_rb.html","files\/activerecord\/lib\/active_record\/relation\/calculations_rb.html","","",3],["delegation.rb","files\/activerecord\/lib\/active_record\/relation\/delegation_rb.html","files\/activerecord\/lib\/active_record\/relation\/delegation_rb.html","","",3],["finder_methods.rb","files\/activerecord\/lib\/active_record\/relation\/finder_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/finder_methods_rb.html","","",3],["predicate_builder.rb","files\/activerecord\/lib\/active_record\/relation\/predicate_builder_rb.html","files\/activerecord\/lib\/active_record\/relation\/predicate_builder_rb.html","","",3],["query_methods.rb","files\/activerecord\/lib\/active_record\/relation\/query_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/query_methods_rb.html","","",3],["spawn_methods.rb","files\/activerecord\/lib\/active_record\/relation\/spawn_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/spawn_methods_rb.html","","",3],["result.rb","files\/activerecord\/lib\/active_record\/result_rb.html","files\/activerecord\/lib\/active_record\/result_rb.html","","",3],["sanitization.rb","files\/activerecord\/lib\/active_record\/sanitization_rb.html","files\/activerecord\/lib\/active_record\/sanitization_rb.html","","",3],["schema.rb","files\/activerecord\/lib\/active_record\/schema_rb.html","files\/activerecord\/lib\/active_record\/schema_rb.html","","",3],["schema_dumper.rb","files\/activerecord\/lib\/active_record\/schema_dumper_rb.html","files\/activerecord\/lib\/active_record\/schema_dumper_rb.html","","",3],["scoping.rb","files\/activerecord\/lib\/active_record\/scoping_rb.html","files\/activerecord\/lib\/active_record\/scoping_rb.html","","",3],["default.rb","files\/activerecord\/lib\/active_record\/scoping\/default_rb.html","files\/activerecord\/lib\/active_record\/scoping\/default_rb.html","","",3],["named.rb","files\/activerecord\/lib\/active_record\/scoping\/named_rb.html","files\/activerecord\/lib\/active_record\/scoping\/named_rb.html","","",3],["serialization.rb","files\/activerecord\/lib\/active_record\/serialization_rb.html","files\/activerecord\/lib\/active_record\/serialization_rb.html","","",3],["xml_serializer.rb","files\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","files\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","","",3],["session_store.rb","files\/activerecord\/lib\/active_record\/session_store_rb.html","files\/activerecord\/lib\/active_record\/session_store_rb.html","","",3],["store.rb","files\/activerecord\/lib\/active_record\/store_rb.html","files\/activerecord\/lib\/active_record\/store_rb.html","","",3],["test_case.rb","files\/activerecord\/lib\/active_record\/test_case_rb.html","files\/activerecord\/lib\/active_record\/test_case_rb.html","","",3],["timestamp.rb","files\/activerecord\/lib\/active_record\/timestamp_rb.html","files\/activerecord\/lib\/active_record\/timestamp_rb.html","","",3],["transactions.rb","files\/activerecord\/lib\/active_record\/transactions_rb.html","files\/activerecord\/lib\/active_record\/transactions_rb.html","","",3],["translation.rb","files\/activerecord\/lib\/active_record\/translation_rb.html","files\/activerecord\/lib\/active_record\/translation_rb.html","","",3],["validations.rb","files\/activerecord\/lib\/active_record\/validations_rb.html","files\/activerecord\/lib\/active_record\/validations_rb.html","","",3],["associated.rb","files\/activerecord\/lib\/active_record\/validations\/associated_rb.html","files\/activerecord\/lib\/active_record\/validations\/associated_rb.html","","",3],["uniqueness.rb","files\/activerecord\/lib\/active_record\/validations\/uniqueness_rb.html","files\/activerecord\/lib\/active_record\/validations\/uniqueness_rb.html","","",3],["version.rb","files\/activerecord\/lib\/active_record\/version_rb.html","files\/activerecord\/lib\/active_record\/version_rb.html","","",3],["CHANGELOG.md","files\/activeresource\/CHANGELOG_md.html","files\/activeresource\/CHANGELOG_md.html","","## Rails 3.2.6 (Jun 12, 2012)  *   No changes.  ## Rails 3.2.5 (Jun 1, 2012) ##  *   No changes.   ##",3],["README.rdoc","files\/activeresource\/README_rdoc.html","files\/activeresource\/README_rdoc.html","","= Active Resource  Active Resource (ARes) connects business objects and Representational State Transfer",3],["active_resource.rb","files\/activeresource\/lib\/active_resource_rb.html","files\/activeresource\/lib\/active_resource_rb.html",""," ",3],["base.rb","files\/activeresource\/lib\/active_resource\/base_rb.html","files\/activeresource\/lib\/active_resource\/base_rb.html","","",3],["connection.rb","files\/activeresource\/lib\/active_resource\/connection_rb.html","files\/activeresource\/lib\/active_resource\/connection_rb.html","","",3],["custom_methods.rb","files\/activeresource\/lib\/active_resource\/custom_methods_rb.html","files\/activeresource\/lib\/active_resource\/custom_methods_rb.html","","",3],["exceptions.rb","files\/activeresource\/lib\/active_resource\/exceptions_rb.html","files\/activeresource\/lib\/active_resource\/exceptions_rb.html","","",3],["formats.rb","files\/activeresource\/lib\/active_resource\/formats_rb.html","files\/activeresource\/lib\/active_resource\/formats_rb.html","","",3],["json_format.rb","files\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","files\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","","",3],["xml_format.rb","files\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","files\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","","",3],["http_mock.rb","files\/activeresource\/lib\/active_resource\/http_mock_rb.html","files\/activeresource\/lib\/active_resource\/http_mock_rb.html","","",3],["log_subscriber.rb","files\/activeresource\/lib\/active_resource\/log_subscriber_rb.html","files\/activeresource\/lib\/active_resource\/log_subscriber_rb.html","","",3],["observing.rb","files\/activeresource\/lib\/active_resource\/observing_rb.html","files\/activeresource\/lib\/active_resource\/observing_rb.html","","",3],["railtie.rb","files\/activeresource\/lib\/active_resource\/railtie_rb.html","files\/activeresource\/lib\/active_resource\/railtie_rb.html","","",3],["schema.rb","files\/activeresource\/lib\/active_resource\/schema_rb.html","files\/activeresource\/lib\/active_resource\/schema_rb.html","","",3],["validations.rb","files\/activeresource\/lib\/active_resource\/validations_rb.html","files\/activeresource\/lib\/active_resource\/validations_rb.html","","",3],["version.rb","files\/activeresource\/lib\/active_resource\/version_rb.html","files\/activeresource\/lib\/active_resource\/version_rb.html","","",3],["CHANGELOG.md","files\/activesupport\/CHANGELOG_md.html","files\/activesupport\/CHANGELOG_md.html","","## Rails 3.2.6 (Jun 12, 2012)  *   No changes.  ## Rails 3.2.5 (Jun 1, 2012) ##  *   ActiveSupport::JSON::Variable",3],["README.rdoc","files\/activesupport\/README_rdoc.html","files\/activesupport\/README_rdoc.html","","= Active Support -- Utility classes and Ruby extensions from Rails  Active Support is a collection of",3],["all.rb","files\/activesupport\/lib\/active_support\/all_rb.html","files\/activesupport\/lib\/active_support\/all_rb.html","","",3],["backtrace_cleaner.rb","files\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","files\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","","",3],["base64.rb","files\/activesupport\/lib\/active_support\/base64_rb.html","files\/activesupport\/lib\/active_support\/base64_rb.html","","",3],["basic_object.rb","files\/activesupport\/lib\/active_support\/basic_object_rb.html","files\/activesupport\/lib\/active_support\/basic_object_rb.html","","",3],["benchmarkable.rb","files\/activesupport\/lib\/active_support\/benchmarkable_rb.html","files\/activesupport\/lib\/active_support\/benchmarkable_rb.html","","",3],["buffered_logger.rb","files\/activesupport\/lib\/active_support\/buffered_logger_rb.html","files\/activesupport\/lib\/active_support\/buffered_logger_rb.html","","",3],["builder.rb","files\/activesupport\/lib\/active_support\/builder_rb.html","files\/activesupport\/lib\/active_support\/builder_rb.html","","",3],["cache.rb","files\/activesupport\/lib\/active_support\/cache_rb.html","files\/activesupport\/lib\/active_support\/cache_rb.html","","",3],["file_store.rb","files\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","","",3],["mem_cache_store.rb","files\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","","",3],["memory_store.rb","files\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","","",3],["null_store.rb","files\/activesupport\/lib\/active_support\/cache\/null_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/null_store_rb.html","","",3],["local_cache.rb","files\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","files\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","","",3],["callbacks.rb","files\/activesupport\/lib\/active_support\/callbacks_rb.html","files\/activesupport\/lib\/active_support\/callbacks_rb.html","","",3],["concern.rb","files\/activesupport\/lib\/active_support\/concern_rb.html","files\/activesupport\/lib\/active_support\/concern_rb.html","","",3],["configurable.rb","files\/activesupport\/lib\/active_support\/configurable_rb.html","files\/activesupport\/lib\/active_support\/configurable_rb.html","","",3],["core_ext.rb","files\/activesupport\/lib\/active_support\/core_ext_rb.html","files\/activesupport\/lib\/active_support\/core_ext_rb.html","","",3],["array.rb","files\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","","",3],["access.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","","",3],["extract_options.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","","",3],["grouping.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","","",3],["prepend_and_append.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/prepend_and_append_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/prepend_and_append_rb.html","","",3],["random_access.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","","",3],["uniq_by.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/uniq_by_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/uniq_by_rb.html","","",3],["wrap.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/wrap_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/wrap_rb.html","","",3],["benchmark.rb","files\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","","",3],["big_decimal.rb","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions_rb.html","","",3],["class.rb","files\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","","",3],["attribute.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_rb.html","","",3],["attribute_accessors.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","","",3],["delegating_attributes.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","","",3],["subclasses.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/subclasses_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/subclasses_rb.html","","",3],["acts_like.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/acts_like_rb.html","","",3],["calculations.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","","",3],["freeze.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/freeze_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/freeze_rb.html","","Date memoizes some instance methods using metaprogramming to wrap the methods with one that caches the",3],["zones.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/zones_rb.html","","",3],["acts_like.rb","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/acts_like_rb.html","","",3],["calculations.rb","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","","",3],["zones.rb","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/zones_rb.html","","",3],["enumerable.rb","files\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","","",3],["exception.rb","files\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","","",3],["file.rb","files\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","","",3],["atomic.rb","files\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","","",3],["path.rb","files\/activesupport\/lib\/active_support\/core_ext\/file\/path_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file\/path_rb.html","","",3],["float.rb","files\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","","",3],["rounding.rb","files\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","","",3],["hash.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","","",3],["deep_dup.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_dup_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_dup_rb.html","","",3],["deep_merge.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","","",3],["diff.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","","",3],["except.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","","",3],["indifferent_access.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","","",3],["keys.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","","",3],["reverse_merge.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","","",3],["slice.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","","",3],["integer.rb","files\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","","",3],["inflections.rb","files\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","","",3],["multiple.rb","files\/activesupport\/lib\/active_support\/core_ext\/integer\/multiple_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/multiple_rb.html","","",3],["time.rb","files\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","","",3],["io.rb","files\/activesupport\/lib\/active_support\/core_ext\/io_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/io_rb.html","","",3],["kernel.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","","",3],["agnostics.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","","",3],["debugger.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","","",3],["reporting.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","","",3],["singleton_class.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/singleton_class_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/singleton_class_rb.html","","",3],["load_error.rb","files\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","","",3],["logger.rb","files\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","","",3],["module.rb","files\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","","",3],["aliasing.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","","",3],["anonymous.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/anonymous_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/anonymous_rb.html","","",3],["attr_internal.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","","",3],["attribute_accessors.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","","",3],["delegation.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","","",3],["deprecation.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/deprecation_rb.html","","",3],["introspection.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","","",3],["method_names.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/method_names_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/method_names_rb.html","","",3],["qualified_const.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/qualified_const_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/qualified_const_rb.html","","",3],["reachable.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/reachable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/reachable_rb.html","","",3],["remove_method.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/remove_method_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/remove_method_rb.html","","",3],["synchronization.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","","",3],["name_error.rb","files\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","","",3],["numeric.rb","files\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","","",3],["bytes.rb","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","","",3],["time.rb","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","","",3],["object.rb","files\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","","",3],["acts_like.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/acts_like_rb.html","","",3],["blank.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","","encoding: utf-8 ",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","","",3],["duplicable.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/duplicable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/duplicable_rb.html",""," ",3],["inclusion.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/inclusion_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/inclusion_rb.html","","",3],["instance_variables.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","","",3],["to_json.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_json_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_json_rb.html","","Hack to load json gem first so we can overwrite its to_json. ",3],["to_param.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_param_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_param_rb.html","","",3],["to_query.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_query_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_query_rb.html","","",3],["try.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/try_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/try_rb.html","","",3],["with_options.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/with_options_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/with_options_rb.html","","",3],["proc.rb","files\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","","",3],["process.rb","files\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","","",3],["daemon.rb","files\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","","",3],["range.rb","files\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","","",3],["blockless_step.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","","",3],["cover.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/cover_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/cover_rb.html","","",3],["include_range.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","","",3],["overlaps.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","","",3],["regexp.rb","files\/activesupport\/lib\/active_support\/core_ext\/regexp_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/regexp_rb.html","","",3],["rexml.rb","files\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","","",3],["string.rb","files\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","","",3],["access.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","","",3],["behavior.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","","encoding: utf-8 ",3],["encoding.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/encoding_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/encoding_rb.html","","",3],["exclude.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/exclude_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/exclude_rb.html","","",3],["filters.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","","",3],["inflections.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","","",3],["inquiry.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/inquiry_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/inquiry_rb.html","","",3],["interpolation.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/interpolation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/interpolation_rb.html","","",3],["multibyte.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","","encoding: utf-8 ",3],["output_safety.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","","",3],["starts_ends_with.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","","",3],["strip.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/strip_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/strip_rb.html","","",3],["xchar.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","","",3],["acts_like.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/acts_like_rb.html","","",3],["calculations.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","","",3],["marshal.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/marshal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/marshal_rb.html","","Pre-1.9 versions of Ruby have a bug with marshaling Time instances, where utc instances are unmarshalled",3],["publicize_conversion_methods.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/publicize_conversion_methods_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/publicize_conversion_methods_rb.html","","",3],["zones.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","","",3],["uri.rb","files\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","","encoding: utf-8 ",3],["dependencies.rb","files\/activesupport\/lib\/active_support\/dependencies_rb.html","files\/activesupport\/lib\/active_support\/dependencies_rb.html","","",3],["autoload.rb","files\/activesupport\/lib\/active_support\/dependencies\/autoload_rb.html","files\/activesupport\/lib\/active_support\/dependencies\/autoload_rb.html","","",3],["deprecation.rb","files\/activesupport\/lib\/active_support\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/deprecation_rb.html","","",3],["behaviors.rb","files\/activesupport\/lib\/active_support\/deprecation\/behaviors_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/behaviors_rb.html","","",3],["method_wrappers.rb","files\/activesupport\/lib\/active_support\/deprecation\/method_wrappers_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/method_wrappers_rb.html","","",3],["proxy_wrappers.rb","files\/activesupport\/lib\/active_support\/deprecation\/proxy_wrappers_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/proxy_wrappers_rb.html","","",3],["reporting.rb","files\/activesupport\/lib\/active_support\/deprecation\/reporting_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/reporting_rb.html","","",3],["descendants_tracker.rb","files\/activesupport\/lib\/active_support\/descendants_tracker_rb.html","files\/activesupport\/lib\/active_support\/descendants_tracker_rb.html","","",3],["duration.rb","files\/activesupport\/lib\/active_support\/duration_rb.html","files\/activesupport\/lib\/active_support\/duration_rb.html","","",3],["file_update_checker.rb","files\/activesupport\/lib\/active_support\/file_update_checker_rb.html","files\/activesupport\/lib\/active_support\/file_update_checker_rb.html","","",3],["file_watcher.rb","files\/activesupport\/lib\/active_support\/file_watcher_rb.html","files\/activesupport\/lib\/active_support\/file_watcher_rb.html","","",3],["gzip.rb","files\/activesupport\/lib\/active_support\/gzip_rb.html","files\/activesupport\/lib\/active_support\/gzip_rb.html","","",3],["hash_with_indifferent_access.rb","files\/activesupport\/lib\/active_support\/hash_with_indifferent_access_rb.html","files\/activesupport\/lib\/active_support\/hash_with_indifferent_access_rb.html","","",3],["i18n.rb","files\/activesupport\/lib\/active_support\/i18n_rb.html","files\/activesupport\/lib\/active_support\/i18n_rb.html","","",3],["i18n_railtie.rb","files\/activesupport\/lib\/active_support\/i18n_railtie_rb.html","files\/activesupport\/lib\/active_support\/i18n_railtie_rb.html","","",3],["inflections.rb","files\/activesupport\/lib\/active_support\/inflections_rb.html","files\/activesupport\/lib\/active_support\/inflections_rb.html","","",3],["inflector.rb","files\/activesupport\/lib\/active_support\/inflector_rb.html","files\/activesupport\/lib\/active_support\/inflector_rb.html","","in case active_support\/inflector is required without the rest of active_support ",3],["inflections.rb","files\/activesupport\/lib\/active_support\/inflector\/inflections_rb.html","files\/activesupport\/lib\/active_support\/inflector\/inflections_rb.html","","",3],["methods.rb","files\/activesupport\/lib\/active_support\/inflector\/methods_rb.html","files\/activesupport\/lib\/active_support\/inflector\/methods_rb.html","","",3],["transliterate.rb","files\/activesupport\/lib\/active_support\/inflector\/transliterate_rb.html","files\/activesupport\/lib\/active_support\/inflector\/transliterate_rb.html","","encoding: utf-8 ",3],["json.rb","files\/activesupport\/lib\/active_support\/json_rb.html","files\/activesupport\/lib\/active_support\/json_rb.html","","",3],["decoding.rb","files\/activesupport\/lib\/active_support\/json\/decoding_rb.html","files\/activesupport\/lib\/active_support\/json\/decoding_rb.html","","",3],["encoding.rb","files\/activesupport\/lib\/active_support\/json\/encoding_rb.html","files\/activesupport\/lib\/active_support\/json\/encoding_rb.html","","",3],["variable.rb","files\/activesupport\/lib\/active_support\/json\/variable_rb.html","files\/activesupport\/lib\/active_support\/json\/variable_rb.html","","",3],["lazy_load_hooks.rb","files\/activesupport\/lib\/active_support\/lazy_load_hooks_rb.html","files\/activesupport\/lib\/active_support\/lazy_load_hooks_rb.html","","lazy_load_hooks allows rails to lazily load a lot of components and thus making the app boot faster.",3],["log_subscriber.rb","files\/activesupport\/lib\/active_support\/log_subscriber_rb.html","files\/activesupport\/lib\/active_support\/log_subscriber_rb.html","","",3],["test_helper.rb","files\/activesupport\/lib\/active_support\/log_subscriber\/test_helper_rb.html","files\/activesupport\/lib\/active_support\/log_subscriber\/test_helper_rb.html","","",3],["memoizable.rb","files\/activesupport\/lib\/active_support\/memoizable_rb.html","files\/activesupport\/lib\/active_support\/memoizable_rb.html","","",3],["message_encryptor.rb","files\/activesupport\/lib\/active_support\/message_encryptor_rb.html","files\/activesupport\/lib\/active_support\/message_encryptor_rb.html","","",3],["message_verifier.rb","files\/activesupport\/lib\/active_support\/message_verifier_rb.html","files\/activesupport\/lib\/active_support\/message_verifier_rb.html","","",3],["multibyte.rb","files\/activesupport\/lib\/active_support\/multibyte_rb.html","files\/activesupport\/lib\/active_support\/multibyte_rb.html","","encoding: utf-8 ",3],["chars.rb","files\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","","encoding: utf-8 ",3],["exceptions.rb","files\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- This class has dubious semantics and we only",3],["unicode.rb","files\/activesupport\/lib\/active_support\/multibyte\/unicode_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/unicode_rb.html","","encoding: utf-8 ",3],["utils.rb","files\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","","encoding: utf-8 ",3],["notifications.rb","files\/activesupport\/lib\/active_support\/notifications_rb.html","files\/activesupport\/lib\/active_support\/notifications_rb.html","","",3],["fanout.rb","files\/activesupport\/lib\/active_support\/notifications\/fanout_rb.html","files\/activesupport\/lib\/active_support\/notifications\/fanout_rb.html","","",3],["instrumenter.rb","files\/activesupport\/lib\/active_support\/notifications\/instrumenter_rb.html","files\/activesupport\/lib\/active_support\/notifications\/instrumenter_rb.html","","",3],["option_merger.rb","files\/activesupport\/lib\/active_support\/option_merger_rb.html","files\/activesupport\/lib\/active_support\/option_merger_rb.html","","",3],["ordered_hash.rb","files\/activesupport\/lib\/active_support\/ordered_hash_rb.html","files\/activesupport\/lib\/active_support\/ordered_hash_rb.html","","",3],["ordered_options.rb","files\/activesupport\/lib\/active_support\/ordered_options_rb.html","files\/activesupport\/lib\/active_support\/ordered_options_rb.html","","",3],["railtie.rb","files\/activesupport\/lib\/active_support\/railtie_rb.html","files\/activesupport\/lib\/active_support\/railtie_rb.html","","",3],["rescuable.rb","files\/activesupport\/lib\/active_support\/rescuable_rb.html","files\/activesupport\/lib\/active_support\/rescuable_rb.html","","",3],["shim.rb","files\/activesupport\/lib\/active_support\/ruby\/shim_rb.html","files\/activesupport\/lib\/active_support\/ruby\/shim_rb.html","","Backported Ruby builtins so you can code with the latest & greatest but still run on any Ruby 1.8.x.",3],["string_inquirer.rb","files\/activesupport\/lib\/active_support\/string_inquirer_rb.html","files\/activesupport\/lib\/active_support\/string_inquirer_rb.html","","",3],["tagged_logging.rb","files\/activesupport\/lib\/active_support\/tagged_logging_rb.html","files\/activesupport\/lib\/active_support\/tagged_logging_rb.html","","",3],["test_case.rb","files\/activesupport\/lib\/active_support\/test_case_rb.html","files\/activesupport\/lib\/active_support\/test_case_rb.html","","",3],["assertions.rb","files\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","files\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","","",3],["declarative.rb","files\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","files\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","","",3],["deprecation.rb","files\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","","",3],["isolation.rb","files\/activesupport\/lib\/active_support\/testing\/isolation_rb.html","files\/activesupport\/lib\/active_support\/testing\/isolation_rb.html","","",3],["mochaing.rb","files\/activesupport\/lib\/active_support\/testing\/mochaing_rb.html","files\/activesupport\/lib\/active_support\/testing\/mochaing_rb.html","","",3],["pending.rb","files\/activesupport\/lib\/active_support\/testing\/pending_rb.html","files\/activesupport\/lib\/active_support\/testing\/pending_rb.html","","Some code from jeremymcanally's \"pending\" https:\/\/github.com\/jeremymcanally\/pending\/tree\/master ",3],["performance.rb","files\/activesupport\/lib\/active_support\/testing\/performance_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance_rb.html","","",3],["jruby.rb","files\/activesupport\/lib\/active_support\/testing\/performance\/jruby_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/jruby_rb.html","","",3],["rubinius.rb","files\/activesupport\/lib\/active_support\/testing\/performance\/rubinius_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/rubinius_rb.html","","",3],["ruby.rb","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby_rb.html","","",3],["mri.rb","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby\/mri_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby\/mri_rb.html","","",3],["yarv.rb","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby\/yarv_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance\/ruby\/yarv_rb.html","","",3],["setup_and_teardown.rb","files\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","files\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","","",3],["time.rb","files\/activesupport\/lib\/active_support\/time_rb.html","files\/activesupport\/lib\/active_support\/time_rb.html","","",3],["autoload.rb","files\/activesupport\/lib\/active_support\/time\/autoload_rb.html","files\/activesupport\/lib\/active_support\/time\/autoload_rb.html","","",3],["time_with_zone.rb","files\/activesupport\/lib\/active_support\/time_with_zone_rb.html","files\/activesupport\/lib\/active_support\/time_with_zone_rb.html","","",3],["time_zone.rb","files\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","files\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","","",3],["version.rb","files\/activesupport\/lib\/active_support\/version_rb.html","files\/activesupport\/lib\/active_support\/version_rb.html","","",3],["whiny_nil.rb","files\/activesupport\/lib\/active_support\/whiny_nil_rb.html","files\/activesupport\/lib\/active_support\/whiny_nil_rb.html","","",3],["xml_mini.rb","files\/activesupport\/lib\/active_support\/xml_mini_rb.html","files\/activesupport\/lib\/active_support\/xml_mini_rb.html","","",3],["jdom.rb","files\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","","",3],["libxml.rb","files\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","","",3],["libxmlsax.rb","files\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","","",3],["nokogiri.rb","files\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","","",3],["nokogirisax.rb","files\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","","",3],["rexml.rb","files\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","","",3],["CHANGELOG.md","files\/railties\/CHANGELOG_md.html","files\/railties\/CHANGELOG_md.html","","## Rails 3.2.6 (Jun 12, 2012)  *   No changes.  ## Rails 3.2.4 (May 31, 2012) ##  *   Add hook for resource",3],["MIT-LICENSE","files\/railties\/MIT-LICENSE.html","files\/railties\/MIT-LICENSE.html","","Copyright (c) 2004-2011 David Heinemeier Hansson  Permission is hereby granted, free of charge, to any",3],["README.rdoc","files\/railties\/README_rdoc.html","files\/railties\/README_rdoc.html","","= Railties -- Gluing the Engine to the Rails  Railties is responsible for gluing all frameworks together.",3],["rails.rb","files\/railties\/lib\/rails_rb.html","files\/railties\/lib\/rails_rb.html","","",3],["all.rb","files\/railties\/lib\/rails\/all_rb.html","files\/railties\/lib\/rails\/all_rb.html","","",3],["application.rb","files\/railties\/lib\/rails\/application_rb.html","files\/railties\/lib\/rails\/application_rb.html","","",3],["bootstrap.rb","files\/railties\/lib\/rails\/application\/bootstrap_rb.html","files\/railties\/lib\/rails\/application\/bootstrap_rb.html","","",3],["configuration.rb","files\/railties\/lib\/rails\/application\/configuration_rb.html","files\/railties\/lib\/rails\/application\/configuration_rb.html","","",3],["finisher.rb","files\/railties\/lib\/rails\/application\/finisher_rb.html","files\/railties\/lib\/rails\/application\/finisher_rb.html","","",3],["railties.rb","files\/railties\/lib\/rails\/application\/railties_rb.html","files\/railties\/lib\/rails\/application\/railties_rb.html","","",3],["route_inspector.rb","files\/railties\/lib\/rails\/application\/route_inspector_rb.html","files\/railties\/lib\/rails\/application\/route_inspector_rb.html","","",3],["routes_reloader.rb","files\/railties\/lib\/rails\/application\/routes_reloader_rb.html","files\/railties\/lib\/rails\/application\/routes_reloader_rb.html","","",3],["backtrace_cleaner.rb","files\/railties\/lib\/rails\/backtrace_cleaner_rb.html","files\/railties\/lib\/rails\/backtrace_cleaner_rb.html","","",3],["cli.rb","files\/railties\/lib\/rails\/cli_rb.html","files\/railties\/lib\/rails\/cli_rb.html","","",3],["code_statistics.rb","files\/railties\/lib\/rails\/code_statistics_rb.html","files\/railties\/lib\/rails\/code_statistics_rb.html","","",3],["commands.rb","files\/railties\/lib\/rails\/commands_rb.html","files\/railties\/lib\/rails\/commands_rb.html","","",3],["application.rb","files\/railties\/lib\/rails\/commands\/application_rb.html","files\/railties\/lib\/rails\/commands\/application_rb.html","","",3],["benchmarker.rb","files\/railties\/lib\/rails\/commands\/benchmarker_rb.html","files\/railties\/lib\/rails\/commands\/benchmarker_rb.html","","",3],["console.rb","files\/railties\/lib\/rails\/commands\/console_rb.html","files\/railties\/lib\/rails\/commands\/console_rb.html","","",3],["dbconsole.rb","files\/railties\/lib\/rails\/commands\/dbconsole_rb.html","files\/railties\/lib\/rails\/commands\/dbconsole_rb.html","","",3],["destroy.rb","files\/railties\/lib\/rails\/commands\/destroy_rb.html","files\/railties\/lib\/rails\/commands\/destroy_rb.html","","",3],["generate.rb","files\/railties\/lib\/rails\/commands\/generate_rb.html","files\/railties\/lib\/rails\/commands\/generate_rb.html","","",3],["plugin.rb","files\/railties\/lib\/rails\/commands\/plugin_rb.html","files\/railties\/lib\/rails\/commands\/plugin_rb.html","","Rails Plugin Manager. Installing plugins: $ rails plugin install continuous_builder asset_timestamping",3],["plugin_new.rb","files\/railties\/lib\/rails\/commands\/plugin_new_rb.html","files\/railties\/lib\/rails\/commands\/plugin_new_rb.html","","",3],["profiler.rb","files\/railties\/lib\/rails\/commands\/profiler_rb.html","files\/railties\/lib\/rails\/commands\/profiler_rb.html","","",3],["runner.rb","files\/railties\/lib\/rails\/commands\/runner_rb.html","files\/railties\/lib\/rails\/commands\/runner_rb.html","","",3],["server.rb","files\/railties\/lib\/rails\/commands\/server_rb.html","files\/railties\/lib\/rails\/commands\/server_rb.html","","",3],["update.rb","files\/railties\/lib\/rails\/commands\/update_rb.html","files\/railties\/lib\/rails\/commands\/update_rb.html","","",3],["configuration.rb","files\/railties\/lib\/rails\/configuration_rb.html","files\/railties\/lib\/rails\/configuration_rb.html","","",3],["app.rb","files\/railties\/lib\/rails\/console\/app_rb.html","files\/railties\/lib\/rails\/console\/app_rb.html","","",3],["helpers.rb","files\/railties\/lib\/rails\/console\/helpers_rb.html","files\/railties\/lib\/rails\/console\/helpers_rb.html","","",3],["engine.rb","files\/railties\/lib\/rails\/engine_rb.html","files\/railties\/lib\/rails\/engine_rb.html","","",3],["commands.rb","files\/railties\/lib\/rails\/engine\/commands_rb.html","files\/railties\/lib\/rails\/engine\/commands_rb.html","","",3],["configuration.rb","files\/railties\/lib\/rails\/engine\/configuration_rb.html","files\/railties\/lib\/rails\/engine\/configuration_rb.html","","",3],["railties.rb","files\/railties\/lib\/rails\/engine\/railties_rb.html","files\/railties\/lib\/rails\/engine\/railties_rb.html","","",3],["generators.rb","files\/railties\/lib\/rails\/generators_rb.html","files\/railties\/lib\/rails\/generators_rb.html","","",3],["actions.rb","files\/railties\/lib\/rails\/generators\/actions_rb.html","files\/railties\/lib\/rails\/generators\/actions_rb.html","","",3],["active_model.rb","files\/railties\/lib\/rails\/generators\/active_model_rb.html","files\/railties\/lib\/rails\/generators\/active_model_rb.html","","",3],["app_base.rb","files\/railties\/lib\/rails\/generators\/app_base_rb.html","files\/railties\/lib\/rails\/generators\/app_base_rb.html","","",3],["base.rb","files\/railties\/lib\/rails\/generators\/base_rb.html","files\/railties\/lib\/rails\/generators\/base_rb.html","","",3],["assets_generator.rb","files\/railties\/lib\/rails\/generators\/css\/assets\/assets_generator_rb.html","files\/railties\/lib\/rails\/generators\/css\/assets\/assets_generator_rb.html","","",3],["scaffold_generator.rb","files\/railties\/lib\/rails\/generators\/css\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/css\/scaffold\/scaffold_generator_rb.html","","",3],["erb.rb","files\/railties\/lib\/rails\/generators\/erb_rb.html","files\/railties\/lib\/rails\/generators\/erb_rb.html","","",3],["controller_generator.rb","files\/railties\/lib\/rails\/generators\/erb\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/controller\/controller_generator_rb.html","","",3],["mailer_generator.rb","files\/railties\/lib\/rails\/generators\/erb\/mailer\/mailer_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/mailer\/mailer_generator_rb.html","","",3],["scaffold_generator.rb","files\/railties\/lib\/rails\/generators\/erb\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/scaffold\/scaffold_generator_rb.html","","",3],["generated_attribute.rb","files\/railties\/lib\/rails\/generators\/generated_attribute_rb.html","files\/railties\/lib\/rails\/generators\/generated_attribute_rb.html","","",3],["assets_generator.rb","files\/railties\/lib\/rails\/generators\/js\/assets\/assets_generator_rb.html","files\/railties\/lib\/rails\/generators\/js\/assets\/assets_generator_rb.html","","",3],["migration.rb","files\/railties\/lib\/rails\/generators\/migration_rb.html","files\/railties\/lib\/rails\/generators\/migration_rb.html","","",3],["named_base.rb","files\/railties\/lib\/rails\/generators\/named_base_rb.html","files\/railties\/lib\/rails\/generators\/named_base_rb.html","","",3],["app_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/app\/app_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/app\/app_generator_rb.html","","",3],["assets_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/assets\/assets_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/assets\/assets_generator_rb.html","","",3],["controller_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/controller\/controller_generator_rb.html","","",3],["generator_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/generator\/generator_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/generator\/generator_generator_rb.html","","",3],["helper_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/helper\/helper_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/helper\/helper_generator_rb.html","","",3],["integration_test_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/integration_test\/integration_test_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/integration_test\/integration_test_generator_rb.html","","",3],["migration_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/migration\/migration_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/migration\/migration_generator_rb.html","","",3],["model_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/model\/model_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/model\/model_generator_rb.html","","",3],["observer_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/observer\/observer_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/observer\/observer_generator_rb.html","","",3],["performance_test_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/performance_test\/performance_test_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/performance_test\/performance_test_generator_rb.html","","",3],["plugin_new_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/plugin_new\/plugin_new_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/plugin_new\/plugin_new_generator_rb.html","","",3],["resource_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/resource\/resource_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/resource\/resource_generator_rb.html","","",3],["resource_route_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/resource_route\/resource_route_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/resource_route\/resource_route_generator_rb.html","","",3],["scaffold_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/scaffold\/scaffold_generator_rb.html","","",3],["scaffold_controller_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/scaffold_controller\/scaffold_controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/scaffold_controller\/scaffold_controller_generator_rb.html","","",3],["session_migration_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/session_migration\/session_migration_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/session_migration\/session_migration_generator_rb.html","","",3],["task_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/task\/task_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/task\/task_generator_rb.html","","",3],["resource_helpers.rb","files\/railties\/lib\/rails\/generators\/resource_helpers_rb.html","files\/railties\/lib\/rails\/generators\/resource_helpers_rb.html","","",3],["test_case.rb","files\/railties\/lib\/rails\/generators\/test_case_rb.html","files\/railties\/lib\/rails\/generators\/test_case_rb.html","","",3],["test_unit.rb","files\/railties\/lib\/rails\/generators\/test_unit_rb.html","files\/railties\/lib\/rails\/generators\/test_unit_rb.html","","",3],["controller_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/controller\/controller_generator_rb.html","","",3],["helper_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/helper\/helper_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/helper\/helper_generator_rb.html","","",3],["integration_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/integration\/integration_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/integration\/integration_generator_rb.html","","",3],["mailer_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/mailer\/mailer_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/mailer\/mailer_generator_rb.html","","",3],["model_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/model\/model_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/model\/model_generator_rb.html","","",3],["observer_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/observer\/observer_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/observer\/observer_generator_rb.html","","",3],["performance_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/performance\/performance_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/performance\/performance_generator_rb.html","","",3],["plugin_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/plugin\/plugin_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/plugin\/plugin_generator_rb.html","","",3],["scaffold_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/scaffold\/scaffold_generator_rb.html","","",3],["info.rb","files\/railties\/lib\/rails\/info_rb.html","files\/railties\/lib\/rails\/info_rb.html","","",3],["info_controller.rb","files\/railties\/lib\/rails\/info_controller_rb.html","files\/railties\/lib\/rails\/info_controller_rb.html","","",3],["initializable.rb","files\/railties\/lib\/rails\/initializable_rb.html","files\/railties\/lib\/rails\/initializable_rb.html","","",3],["paths.rb","files\/railties\/lib\/rails\/paths_rb.html","files\/railties\/lib\/rails\/paths_rb.html","","",3],["performance_test_help.rb","files\/railties\/lib\/rails\/performance_test_help_rb.html","files\/railties\/lib\/rails\/performance_test_help_rb.html","","",3],["plugin.rb","files\/railties\/lib\/rails\/plugin_rb.html","files\/railties\/lib\/rails\/plugin_rb.html","","",3],["rack.rb","files\/railties\/lib\/rails\/rack_rb.html","files\/railties\/lib\/rails\/rack_rb.html","","",3],["debugger.rb","files\/railties\/lib\/rails\/rack\/debugger_rb.html","files\/railties\/lib\/rails\/rack\/debugger_rb.html","","",3],["log_tailer.rb","files\/railties\/lib\/rails\/rack\/log_tailer_rb.html","files\/railties\/lib\/rails\/rack\/log_tailer_rb.html","","",3],["logger.rb","files\/railties\/lib\/rails\/rack\/logger_rb.html","files\/railties\/lib\/rails\/rack\/logger_rb.html","","",3],["railtie.rb","files\/railties\/lib\/rails\/railtie_rb.html","files\/railties\/lib\/rails\/railtie_rb.html","","",3],["configurable.rb","files\/railties\/lib\/rails\/railtie\/configurable_rb.html","files\/railties\/lib\/rails\/railtie\/configurable_rb.html","","",3],["configuration.rb","files\/railties\/lib\/rails\/railtie\/configuration_rb.html","files\/railties\/lib\/rails\/railtie\/configuration_rb.html","","",3],["ruby_version_check.rb","files\/railties\/lib\/rails\/ruby_version_check_rb.html","files\/railties\/lib\/rails\/ruby_version_check_rb.html","","",3],["rubyprof_ext.rb","files\/railties\/lib\/rails\/rubyprof_ext_rb.html","files\/railties\/lib\/rails\/rubyprof_ext_rb.html","","",3],["script_rails_loader.rb","files\/railties\/lib\/rails\/script_rails_loader_rb.html","files\/railties\/lib\/rails\/script_rails_loader_rb.html","","",3],["source_annotation_extractor.rb","files\/railties\/lib\/rails\/source_annotation_extractor_rb.html","files\/railties\/lib\/rails\/source_annotation_extractor_rb.html","","Implements the logic behind the rake tasks for annotations like rake notes rake notes:optimize and friends.",3],["tasks.rb","files\/railties\/lib\/rails\/tasks_rb.html","files\/railties\/lib\/rails\/tasks_rb.html","","",3],["test_help.rb","files\/railties\/lib\/rails\/test_help_rb.html","files\/railties\/lib\/rails\/test_help_rb.html","","Make double-sure the RAILS_ENV is not set to production, so fixtures aren't loaded into that environment",3],["railtie.rb","files\/railties\/lib\/rails\/test_unit\/railtie_rb.html","files\/railties\/lib\/rails\/test_unit\/railtie_rb.html","","",3],["sub_test_task.rb","files\/railties\/lib\/rails\/test_unit\/sub_test_task_rb.html","files\/railties\/lib\/rails\/test_unit\/sub_test_task_rb.html","","",3],["version.rb","files\/railties\/lib\/rails\/version_rb.html","files\/railties\/lib\/rails\/version_rb.html","","",3]]}}